diff --git a/mod/lesson/timer.js b/mod/lesson/timer.js
index 4f6290d..6d32720 100644
--- a/mod/lesson/timer.js
+++ b/mod/lesson/timer.js
@@ -31,6 +31,18 @@
     var javatime = javatimeDate.getTime();
     javatime = Math.floor(javatime/1000);
     
+    if (typeof(clocksettings)!='undefined') {
+        if (clocksettings.starttime) {
+            starttime = parseInt(clocksettings.starttime);
+        }
+        if (clocksettings.servertime) {
+            servertime =  parseInt(clocksettings.servertime);
+        }
+        if (clocksettings.testlength) {
+            testlength =  parseInt(clocksettings.testlength);
+        }
+    }
+
     difference = javatime - servertime;    
     starttime = starttime + difference;
 
@@ -54,18 +66,16 @@
 
         //show clock in NS 4
         if (document.layers)
-                document.ClockPosNS.visibility="show"
+                document.ClockPosNS.visibility="show";
         if (old == "die") { return; }
 
         currentDate = new Date();
         current = currentDate.getTime();
         current = Math.floor(current/1000);
         
+        var myclock = '<font style="color:'+myfont_color+'; font-family:'+myfont_face+'; font-size:'+myfont_size+'pt;">';
         if (current > starttime + testlength) {
-            myclock = '';
-            myclock += '<font style="color:'+myfont_color+'; font-family:'+myfont_face+'; font-size:'+myfont_size+'pt;">';
             myclock += "Time is up";
-            myclock += '</font>';
             stopclock = 1;
         } else {
             timeleft = starttime + testlength - current;
@@ -80,11 +90,9 @@
             if (minutes < 10) {
                 minutes = "0"+minutes;
             }
-            myclock = '';
-            myclock += '<font style="color:'+myfont_color+'; font-family:'+myfont_face+'; font-size:'+myfont_size+'pt;">';
             myclock += hours+":"+minutes+":"+secs;
-            myclock += '</font>';
         }
+        myclock += '</font>';
         
         if (old == "true") {
             document.write(myclock);
