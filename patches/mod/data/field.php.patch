diff --git a/mod/data/field.php b/mod/data/field.php
old mode 100755
new mode 100644
index c041ce4..01ec6df
--- a/mod/data/field.php
+++ b/mod/data/field.php
@@ -1,80 +1,103 @@
-<?php  // $Id$
-///////////////////////////////////////////////////////////////////////////
-//                                                                       //
-// NOTICE OF COPYRIGHT                                                   //
-//                                                                       //
-// Moodle - Modular Object-Oriented Dynamic Learning Environment         //
-//          http://moodle.org                                            //
-//                                                                       //
-// Copyright (C) 2005 Martin Dougiamas  http://dougiamas.com             //
-//                                                                       //
-// This program is free software; you can redistribute it and/or modify  //
-// it under the terms of the GNU General Public License as published by  //
-// the Free Software Foundation; either version 2 of the License, or     //
-// (at your option) any later version.                                   //
-//                                                                       //
-// This program is distributed in the hope that it will be useful,       //
-// but WITHOUT ANY WARRANTY; without even the implied warranty of        //
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         //
-// GNU General Public License for more details:                          //
-//                                                                       //
-//          http://www.gnu.org/copyleft/gpl.html                         //
-//                                                                       //
-///////////////////////////////////////////////////////////////////////////
-
-    require_once('../../config.php');
-    require_once('lib.php');
-
-
-    $id             = optional_param('id', 0, PARAM_INT);            // course module id
-    $d              = optional_param('d', 0, PARAM_INT);             // database id
-    $fid            = optional_param('fid', 0 , PARAM_INT);          // update field id
-    $newtype        = optional_param('newtype','',PARAM_ALPHA);      // type of the new field
-    $mode           = optional_param('mode','',PARAM_ALPHA);
-    $defaultsort    = optional_param('defaultsort', 0, PARAM_INT);
-    $defaultsortdir = optional_param('defaultsortdir', 0, PARAM_INT);
-    $cancel         = optional_param('cancel', '');
-
-    if ($cancel) {
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file is part of the Database module for Moodle
+ *
+ * @copyright 2005 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package mod-data
+ */
+
+require_once('../../config.php');
+require_once('lib.php');
+
+$id             = optional_param('id', 0, PARAM_INT);            // course module id
+$d              = optional_param('d', 0, PARAM_INT);             // database id
+$fid            = optional_param('fid', 0 , PARAM_INT);          // update field id
+$newtype        = optional_param('newtype','',PARAM_ALPHA);      // type of the new field
+$mode           = optional_param('mode','',PARAM_ALPHA);
+$defaultsort    = optional_param('defaultsort', 0, PARAM_INT);
+$defaultsortdir = optional_param('defaultsortdir', 0, PARAM_INT);
+$cancel         = optional_param('cancel', 0, PARAM_BOOL);
+
+if ($cancel) {
         $mode = 'list';
-    }
-
-
-    if ($id) {
+}
+
+$url = new moodle_url('/mod/data/field.php');
+if ($fid !== 0) {
+    $url->param('fid', $fid);
+}
+if ($newtype !== '') {
+    $url->param('newtype', $newtype);
+}
+if ($mode !== '') {
+    $url->param('mode', $mode);
+}
+if ($defaultsort !== 0) {
+    $url->param('defaultsort', $defaultsort);
+}
+if ($defaultsortdir !== 0) {
+    $url->param('defaultsortdir', $defaultsortdir);
+}
+if ($cancel !== 0) {
+    $url->param('cancel', $cancel);
+}
+
+if ($id) {
+    $url->param('id', $id);
+    $PAGE->set_url($url);
         if (! $cm = get_coursemodule_from_id('data', $id)) {
-            error('Course Module ID was incorrect');
+        print_error('invalidcoursemodule');
         }
-        if (! $course = get_record('course', 'id', $cm->course)) {
-            error('Course is misconfigured');
+    if (! $course = $DB->get_record('course', array('id'=>$cm->course))) {
+        print_error('coursemisconf');
         }
-        if (! $data = get_record('data', 'id', $cm->instance)) {
-            error('Course module is incorrect');
+    if (! $data = $DB->get_record('data', array('id'=>$cm->instance))) {
+        print_error('invalidcoursemodule');
         }
 
-    } else {
-        if (! $data = get_record('data', 'id', $d)) {
-            error('Data ID is incorrect');
+} else {
+    $url->param('d', $d);
+    $PAGE->set_url($url);
+    if (! $data = $DB->get_record('data', array('id'=>$d))) {
+        print_error('invalidid', 'data');
         }
-        if (! $course = get_record('course', 'id', $data->course)) {
-            error('Course is misconfigured');
+    if (! $course = $DB->get_record('course', array('id'=>$data->course))) {
+        print_error('invalidcoursemodule');
         }
         if (! $cm = get_coursemodule_from_instance('data', $data->id, $course->id)) {
-            error('Course Module ID was incorrect');
-        }
+        print_error('invalidcoursemodule');
     }
+}
 
-    require_login($course->id, true, $cm);
+require_login($course->id, true, $cm);
 
-    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
-    require_capability('mod/data:managetemplates', $context);
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
+require_capability('mod/data:managetemplates', $context);
 
-    /************************************
+/************************************
      *        Data Processing           *
      ***********************************/
-    switch ($mode) {
+switch ($mode) {
 
         case 'add':    ///add a new field
-            if (confirm_sesskey() and $fieldinput = data_submitted($CFG->wwwroot.'/mod/data/field.php')){
+        if (confirm_sesskey() and $fieldinput = data_submitted()){
 
                 //$fieldinput->name = data_clean_field_name($fieldinput->name);
 
@@ -96,7 +119,7 @@
                     $field->insert_field();
 
                 /// Update some templates
-                    data_append_new_field_to_templates($data, stripslashes($fieldinput->name));
+                data_append_new_field_to_templates($data, $fieldinput->name);
 
                     add_to_log($course->id, 'data', 'fields add',
                                "field.php?d=$data->id&amp;mode=display&amp;fid=$fid", $fid, $cm->id);
@@ -108,7 +131,7 @@
 
 
         case 'update':    ///update a field
-            if (confirm_sesskey() and $fieldinput = data_submitted($CFG->wwwroot.'/mod/data/field.php')){
+        if (confirm_sesskey() and $fieldinput = data_submitted()){
 
                 //$fieldinput->name = data_clean_field_name($fieldinput->name);
 
@@ -164,13 +187,11 @@
 
                         // Update the default sort field
                         if ($fid == $data->defaultsort) {
-                            unset($rec);
+                        $rec = new stdClass();
                             $rec->id = $data->id;
                             $rec->defaultsort = 0;
                             $rec->defaultsortdir = 0;
-                            if (!update_record('data', $rec)) {
-                                error('There was an error updating the database');
-                            }
+                        $DB->update_record('data', $rec);
                         }
 
                         add_to_log($course->id, 'data', 'fields delete',
@@ -186,11 +207,11 @@
                     // Print confirmation message.
                     $field = data_get_field_from_id($fid, $data);
 
-                    notice_yesno('<strong>'.$field->name().': '.$field->field->name.'</strong><br /><br />'. get_string('confirmdeletefield','data'),
-                                 'field.php?d='.$data->id.'&amp;mode=delete&amp;fid='.$fid.'&amp;sesskey='.sesskey().'&amp;confirm=1',
+                echo $OUTPUT->confirm('<strong>'.$field->name().': '.$field->field->name.'</strong><br /><br />'. get_string('confirmdeletefield','data'),
+                             'field.php?d='.$data->id.'&mode=delete&fid='.$fid.'&confirm=1',
                                  'field.php?d='.$data->id);
 
-                    print_footer($course);
+                echo $OUTPUT->footer();
                     exit;
                 }
             }
@@ -199,68 +220,64 @@
 
         case 'sort':    // Set the default sort parameters
             if (confirm_sesskey()) {
+            $rec = new stdClass();
                 $rec->id = $data->id;
                 $rec->defaultsort = $defaultsort;
                 $rec->defaultsortdir = $defaultsortdir;
 
-                if (update_record('data', $rec)) {
+            $DB->update_record('data', $rec);
                     redirect($CFG->wwwroot.'/mod/data/field.php?d='.$data->id, get_string('changessaved'), 2);
-                } else {
-                    error('There was an error updating the database');
-                }
                 exit;
             }
             break;
 
         default:
             break;
-    }
+}
 
 
 
 /// Print the browsing interface
 
-    ///get the list of possible fields (plugins)
-    $directories = get_list_of_plugins('mod/data/field/');
-    $menufield = array();
+///get the list of possible fields (plugins)
+$directories = get_list_of_plugins('mod/data/field/');
+$menufield = array();
 
-    foreach ($directories as $directory){
+foreach ($directories as $directory){
         $menufield[$directory] = get_string($directory,'data');    //get from language files
-    }
-    asort($menufield);    //sort in alphabetical order
+}
+asort($menufield);    //sort in alphabetical order
+$PAGE->set_title(get_string('course') . ': ' . $course->fullname);
+$PAGE->set_heading($course->fullname);
 
-
-    if (($mode == 'new') && (!empty($newtype)) && confirm_sesskey()) {          ///  Adding a new field
-        $CFG->pagepath='mod/data/field/'.$newtype;
-        data_print_header($course,$cm,$data,'fields');
+$PAGE->set_pagetype('mod-data-field-' . $newtype);
+if (($mode == 'new') && (!empty($newtype)) && confirm_sesskey()) {          ///  Adding a new field
+    data_print_header($course, $cm, $data,'fields');
 
         $field = data_get_field_new($newtype, $data);
         $field->display_edit_field();
 
-    } else if ($mode == 'display' && confirm_sesskey()) { /// Display/edit existing field
-        $CFG->pagepath='mod/data/field/'.$newtype;
-        data_print_header($course,$cm,$data,'fields');
+} else if ($mode == 'display' && confirm_sesskey()) { /// Display/edit existing field
+    data_print_header($course, $cm, $data,'fields');
 
         $field = data_get_field_from_id($fid, $data);
         $field->display_edit_field();
 
-    } else {                                              /// Display the main listing of all fields
-
-        $CFG->pagepath='mod/data/field/'.$newtype;
-        data_print_header($course,$cm,$data,'fields');
+} else {                                              /// Display the main listing of all fields
+    data_print_header($course, $cm, $data,'fields');
 
-
-        if (!record_exists('data_fields','dataid',$data->id)) {
-            notify(get_string('nofieldindatabase','data'));  // nothing in database
-            notify(get_string('pleaseaddsome','data', 'preset.php?id='.$cm->id));      // link to presets
+    if (!$DB->record_exists('data_fields', array('dataid'=>$data->id))) {
+        echo $OUTPUT->notification(get_string('nofieldindatabase','data'));  // nothing in database
+        echo $OUTPUT->notification(get_string('pleaseaddsome','data', 'preset.php?id='.$cm->id));      // link to presets
 
         } else {    //else print quiz style list of fields
 
+        $table = new html_table();
             $table->head = array(get_string('fieldname','data'), get_string('type','data'), get_string('fielddescription', 'data'), get_string('action','data'));
             $table->align = array('left','left','left', 'center');
             $table->wrap = array(false,false,false,false);
 
-            if ($fff = get_records('data_fields','dataid',$data->id,'id')){
+        if ($fff = $DB->get_records('data_fields', array('dataid'=>$data->id),'id')){
                 foreach ($fff as $ff) {
 
                     $field = data_get_field($ff, $data);
@@ -275,23 +292,23 @@
                     shorten_text($field->field->description, 30),
 
                     '<a href="field.php?d='.$data->id.'&amp;mode=display&amp;fid='.$field->field->id.'&amp;sesskey='.sesskey().'">'.
-                    '<img src="'.$CFG->pixpath.'/t/edit.gif" class="iconsmall" alt="'.get_string('edit').'" title="'.get_string('edit').'" /></a>'.
+                '<img src="'.$OUTPUT->pix_url('t/edit') . '" class="iconsmall" alt="'.get_string('edit').'" title="'.get_string('edit').'" /></a>'.
                     '&nbsp;'.
                     '<a href="field.php?d='.$data->id.'&amp;mode=delete&amp;fid='.$field->field->id.'&amp;sesskey='.sesskey().'">'.
-                    '<img src="'.$CFG->pixpath.'/t/delete.gif" class="iconsmall" alt="'.get_string('delete').'" title="'.get_string('delete').'" /></a>'
+                '<img src="'.$OUTPUT->pix_url('t/delete') . '" class="iconsmall" alt="'.get_string('delete').'" title="'.get_string('delete').'" /></a>'
 
                     );
                 }
             }
-            print_table($table);
+        echo html_writer::table($table);
         }
 
 
         echo '<div class="fieldadd">';
         echo '<label for="fieldform_jump">'.get_string('newfield','data').'</label>';
-        popup_form($CFG->wwwroot.'/mod/data/field.php?d='.$data->id.'&amp;mode=new&amp;sesskey='.
-                sesskey().'&amp;newtype=', $menufield, 'fieldform', '', 'choose');
-        helpbutton('fields', get_string('addafield','data'), 'data');
+    $popupurl = $CFG->wwwroot.'/mod/data/field.php?d='.$data->id.'&mode=new&sesskey='.  sesskey();
+    echo $OUTPUT->single_select(new moodle_url($popupurl), 'newtype', $menufield, null, array(''=>'choosedots'), 'fieldform');
+    echo $OUTPUT->help_icon('newfield', 'data');
         echo '</div>';
 
         echo '<div class="sortdefault">';
@@ -302,7 +319,7 @@
         echo '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
         echo '<label for="defaultsort">'.get_string('defaultsortfield','data').'</label>';
         echo '<select id="defaultsort" name="defaultsort">';
-        if ($fields = get_records('data_fields','dataid',$data->id)) {
+    if ($fields = $DB->get_records('data_fields', array('dataid'=>$data->id))) {
             echo '<optgroup label="'.get_string('fields', 'data').'">';
             foreach ($fields as $field) {
                 if ($data->defaultsort == $field->id) {
@@ -335,16 +352,14 @@
 
         $options = array(0 => get_string('ascending', 'data'),
                          1 => get_string('descending', 'data'));
-        choose_from_menu($options, 'defaultsortdir', $data->defaultsortdir, '');
+    echo html_writer::select($options, 'defaultsortdir', $data->defaultsortdir, false);
         echo '<input type="submit" value="'.get_string('save', 'data').'" />';
         echo '</div>';
         echo '</form>';
         echo '</div>';
 
-    }
+}
 
 /// Finish the page
-    print_footer($course);
-
+echo $OUTPUT->footer();
 
-?>
