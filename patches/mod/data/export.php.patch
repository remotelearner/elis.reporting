diff --git a/mod/data/export.php b/mod/data/export.php
index 6ac914e..e108b4d 100644
--- a/mod/data/export.php
+++ b/mod/data/export.php
@@ -1,14 +1,38 @@
-<?php  // $Id$
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file is part of the Database module for Moodle
+ *
+ * @copyright 2005 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package mod-data
+ */
 
 require_once('../../config.php');
 require_once('lib.php');
-require_once($CFG->libdir . '/csvlib.class.php');
 require_once('export_form.php');
 
-$d = required_param('d', PARAM_INT);
 // database ID
+$d = required_param('d', PARAM_INT);
 
-if (! $data = get_record('data', 'id', $d)) {
+$PAGE->set_url('/mod/data/export.php', array('d'=>$d));
+
+if (! $data = $DB->get_record('data', array('id'=>$d))) {
     print_error('wrongdataid', 'data');
 }
 
@@ -16,7 +40,7 @@ if (! $cm = get_coursemodule_from_instance('data', $data->id, $data->course)) {
     print_error('invalidcoursemodule');
 }
 
-if(! $course = get_record('course', 'id', $cm->course)) {
+if(! $course = $DB->get_record('course', array('id'=>$cm->course))) {
     print_error('invalidcourseid', '', '', $cm->course);
 }
 
@@ -33,7 +57,7 @@ require_login($course->id, false, $cm);
 require_capability(DATA_CAP_EXPORT, $context);
 
 // get fields for this database
-$fieldrecords = get_records('data_fields','dataid', $data->id, 'id');
+$fieldrecords = $DB->get_records('data_fields', array('dataid'=>$data->id), 'id');
 
 if(empty($fieldrecords)) {
     $context = get_context_instance(CONTEXT_MODULE, $cm->id);
@@ -50,17 +74,17 @@ foreach ($fieldrecords as $fieldrecord) {
     $fields[]= data_get_field($fieldrecord, $data);
 }
 
-$mform = new mod_data_export_form('export.php?d='.$data->id, $fields);
+
+$mform = new mod_data_export_form('export.php?d='.$data->id, $fields, $cm);
 
 if($mform->is_cancelled()) {
     redirect('view.php?d='.$data->id);
 } elseif (!$formdata = (array) $mform->get_data()) {
     // build header to match the rest of the UI
-    $nav = build_navigation('', $cm);
-    print_header_simple($data->name, '', $nav,
-        '', '', true, update_module_button($cm->id, $course->id, get_string('modulename', 'data')),
-        navmenu($course, $cm), '', '');
-    print_heading(format_string($data->name));
+    $PAGE->set_title($data->name);
+    $PAGE->set_heading($course->fullname);
+    echo $OUTPUT->header();
+    echo $OUTPUT->heading(format_string($data->name));
 
     // these are for the tab display
     $currentgroup = groups_get_activity_group($cm);
@@ -68,127 +92,30 @@ if($mform->is_cancelled()) {
     $currenttab = 'export';
     include('tabs.php');
     $mform->display();
-    print_footer();
+    echo $OUTPUT->footer();
     die;
 }
 
-$exportdata = array();
-
-// populate the header in first row of export
-foreach($fields as $key => $field) {
-    if(empty($formdata['field_'.$field->field->id])) {
-        // ignore values we aren't exporting
-        unset($fields[$key]);
-    } else {
-        $exportdata[0][] = $field->field->name;
-    }
-}
-
-$datarecords = get_records('data_records', 'dataid', $data->id);
-ksort($datarecords);
-$line = 1;
-foreach($datarecords as $record) {
-    // get content indexed by fieldid
-    if( $content = get_records('data_content', 'recordid', $record->id, 'fieldid', 'fieldid, content, content1, content2, content3, content4') ) {
-        foreach($fields as $field) {
-            $contents = '';
-            if(isset($content[$field->field->id])) {
-                $contents = $field->export_text_value($content[$field->field->id]);
-            }
-            $exportdata[$line][] = $contents;
+$selectedfields = array();
+foreach ($formdata as $key => $value) {
+    //field form elements are field_1 field_2 etc. 0 if not selected. 1 if selected.
+    if (strpos($key, 'field_')===0 && !empty($value)) {
+        $selectedfields[] = substr($key, 6);
         }
-    }
-    $line++;
 }
-$line--;
 
+$exportdata = data_get_exportdata($data->id, $fields, $selectedfields);
+$count = count($exportdata);
 switch ($formdata['exporttype']) {
     case 'csv':
-        data_export_csv($exportdata, $formdata['delimiter_name'], $data->name, $line);
+        data_export_csv($exportdata, $formdata['delimiter_name'], $data->name, $count);
         break;
     case 'xls':
-        data_export_xls($exportdata, $data->name, $line);
+        data_export_xls($exportdata, $data->name, $count);
         break;
     case 'ods':
-        data_export_ods($exportdata, $data->name, $line);
+        data_export_ods($exportdata, $data->name, $count);
         break;
 }
 
-
-function data_export_csv($export, $delimiter_name, $dataname, $count) {
-    $delimiter = csv_import_reader::get_delimiter($delimiter_name);
-    $filename = clean_filename("${dataname}-${count}_record");
-    if ($count > 1) {
-        $filename .= 's';
-    }
-    $filename .= clean_filename('-' . gmdate("Ymd_Hi"));
-    $filename .= clean_filename("-${delimiter_name}_separated");
-    $filename .= '.csv';
-    header("Content-Type: application/download\n");
-    header("Content-Disposition: attachment; filename=$filename");
-    header('Expires: 0');
-    header('Cache-Control: must-revalidate,post-check=0,pre-check=0');
-    header('Pragma: public');
-    $encdelim = '&#' . ord($delimiter) . ';';
-    foreach($export as $row) {
-        foreach($row as $key => $column) {
-            $row[$key] = str_replace($delimiter, $encdelim, $column);
-        }
-        echo implode($delimiter, $row) . "\n";
-    }
-    die;
-}
-
-
-function data_export_xls($export, $dataname, $count) {
-    global $CFG;
-    require_once("$CFG->libdir/excellib.class.php");
-    $filename = clean_filename("${dataname}-${count}_record");
-    if ($count > 1) {
-        $filename .= 's';
-    }
-    $filename .= clean_filename('-' . gmdate("Ymd_Hi"));
-    $filename .= '.xls';
-    $workbook = new MoodleExcelWorkbook('-');
-    $workbook->send($filename);
-    $worksheet = array();
-    $worksheet[0] =& $workbook->add_worksheet('');
-    $rowno = 0;
-    foreach ($export as $row) {
-        $colno = 0;
-        foreach($row as $col) {
-            $worksheet[0]->write($rowno, $colno, $col);
-            $colno++;
-        }
-        $rowno++;
-    }
-    $workbook->close();
-    die;
-}
-
-
-function data_export_ods($export, $dataname, $count) {
-    global $CFG;
-    require_once("$CFG->libdir/odslib.class.php");
-    $filename = clean_filename("${dataname}-${count}_record");
-    if ($count > 1) {
-        $filename .= 's';
-    }
-    $filename .= clean_filename('-' . gmdate("Ymd_Hi"));
-    $filename .= '.ods';
-    $workbook = new MoodleODSWorkbook('-');
-    $workbook->send($filename);
-    $worksheet = array();
-    $worksheet[0] =& $workbook->add_worksheet('');
-    $rowno = 0;
-    foreach ($export as $row) {
-        $colno = 0;
-        foreach($row as $col) {
-            $worksheet[0]->write($rowno, $colno, $col);
-            $colno++;
-        }
-        $rowno++;
-    }
-    $workbook->close();
-    die;
-}
+die();
