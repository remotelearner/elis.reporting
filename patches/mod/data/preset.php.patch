diff --git a/mod/data/preset.php b/mod/data/preset.php
index 7dd60eb..1b58439 100644
--- a/mod/data/preset.php
+++ b/mod/data/preset.php
@@ -1,195 +1,130 @@
-<?php // $Id$
-/* Preset Menu
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Preset Menu
  *
  * This is the page that is the menu item in the config database
  * pages.
+ *
+ * This file is part of the Database module for Moodle
+ *
+ * @copyright 2005 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package mod-data
  */
 
 require_once('../../config.php');
-require_once('lib.php');
-require_once($CFG->libdir.'/uploadlib.php');
+require_once($CFG->dirroot.'/mod/data/lib.php');
+require_once($CFG->dirroot.'/mod/data/preset_form.php');
 require_once($CFG->libdir.'/xmlize.php');
 
 $id       = optional_param('id', 0, PARAM_INT);    // course module id
-$d        = optional_param('d', 0, PARAM_INT);     // database activity id
-$action   = optional_param('action', 'base', PARAM_ALPHANUM); // current action
-$fullname = optional_param('fullname', '', PARAM_PATH); // directory the preset is in
-$file     = optional_param('file', '', PARAM_PATH); // uploaded file
-
-// find out preset owner userid and shortname
-$parts = explode('/', $fullname);
-$userid = empty($parts[0]) ? 0 : (int)$parts[0];
-$shortname = empty($parts[1]) ? '' : $parts[1];
-unset($parts);
-unset($fullname);
-
 if ($id) {
-    if (! $cm = get_coursemodule_from_id('data', $id)) {
-        error('Course Module ID was incorrect');
-    }
-    if (! $course = get_record('course', 'id', $cm->course)) {
-        error('Course is misconfigured');
-    }
-    if (! $data = get_record('data', 'id', $cm->instance)) {
-        error('Module Incorrect');
-    }
-} else if ($d) {
-    if (! $data = get_record('data', 'id', $d)) {
-        error('Database ID Incorrect');
-    }
-    if (! $course = get_record('course', 'id', $data->course)) {
-        error('Course is misconfigured');
-    }
-    if (! $cm = get_coursemodule_from_instance('data', $data->id, $course->id)) {
-        error('Course Module ID was incorrect');
-    }
+    $cm = get_coursemodule_from_id('data', $id, null, null, MUST_EXIST);
+    $course = $DB->get_record('course', array('id'=>$cm->course), '*', MUST_EXIST);
+    $data = $DB->get_record('data', array('id'=>$cm->instance), '*', MUST_EXIST);
 } else {
-    error('Parameter missing');
+    $d = required_param('d', PARAM_INT);     // database activity id
+    $data = $DB->get_record('data', array('id'=>$d), '*', MUST_EXIST);
+    $course = $DB->get_record('course', array('id'=>$data->course), '*', MUST_EXIST);
+    $cm = get_coursemodule_from_instance('data', $data->id, $course->id, null, MUST_EXIST);
 }
+$context = get_context_instance(CONTEXT_MODULE, $cm->id, MUST_EXIST);
+require_login($course->id, false, $cm);
+require_capability('mod/data:managetemplates', $context);
+$PAGE->set_url(new moodle_url('/mod/data/preset.php', array('d'=>$data->id)));
+$PAGE->set_title(get_string('course') . ': ' . $course->fullname);
+$PAGE->set_heading($course->fullname);
 
 // fill in missing properties needed for updating of instance
 $data->course     = $cm->course;
 $data->cmidnumber = $cm->idnumber;
 $data->instance   = $cm->instance;
 
-if (!$context = get_context_instance(CONTEXT_MODULE, $cm->id)) {
-    error('Could not find context');
+$presets = data_get_available_presets($context);
+$canmanage = has_capability('mod/data:manageuserpresets', $context);
+$strdelete = get_string('deleted', 'data');
+foreach ($presets as &$preset) {
+    if (!empty($preset->userid)) {
+        $presetuser = $DB->get_record('user', array('id'=>$preset->userid), 'id,firstname,lastname', MUST_EXIST);
+        $preset->description = $preset->name.' ('.fullname($presetuser, true).')';
+    } else {
+        $preset->userid = 0;
+        $preset->description = $preset->name;
+    }
+    if ($preset->userid > 0 and ($preset->userid == $USER->id || $canmanage)) {
+        $delurl = new moodle_url('/mod/data/preset.php', array('d'=> $data->id, 'action'=>'confirmdelete', 'fullname'=>$preset->userid.'/'.$preset->shortname, 'sesskey'=>sesskey()));
+        $delicon = html_writer::empty_tag('img', array('src'=>$OUTPUT->pix_url('t/delete'), 'class'=>'iconsmall', 'alt'=>$strdelete.' '.$preset->description));
+        $preset->description .= html_writer::link($delurl, $delicon);
+    }
 }
 
-require_login($course->id, false, $cm);
+$form_importexisting = new data_existing_preset_form(null, array('presets'=>$presets));
+$form_importexisting->set_data(array('d' => $data->id));
 
-require_capability('mod/data:managetemplates', $context);
+$form_importzip = new data_import_preset_zip_form();
+$form_importzip->set_data(array('d' => $data->id));
 
-if ($userid && ($userid != $USER->id) && !has_capability('mod/data:viewalluserpresets', $context)) {
-    error('You are not allowed to access presets from other users');
-}
+$form_export = new data_export_form();
+$form_export->set_data(array('d' => $data->id));
 
-/* Need sesskey security check here for import instruction */
-$sesskey = sesskey();
+$form_save = new data_save_preset_form();
+$form_save->set_data(array('d' => $data->id, 'name'=>$data->name));
 
-/********************************************************************/
 /* Output */
-if ($action !== 'export') {
-    data_print_header($course, $cm, $data, 'presets');
+if (!$form_export->is_submitted()) {
+    echo $OUTPUT->header();
+    echo $OUTPUT->heading(format_string($data->name));
+
+    // Needed for tabs.php
+    $currenttab = 'presets';
+    $currentgroup = groups_get_activity_group($cm);
+    $groupmode = groups_get_activity_groupmode($cm);
+    include('tabs.php');
 }
 
-switch ($action) {
-        /***************** Deleting *****************/
-    case 'confirmdelete' :
-        if (!confirm_sesskey()) { // GET request ok here
-            error("Sesskey Invalid");
-        }
-
-        if ($userid > 0 and ($userid == $USER->id || has_capability('mod/data:manageuserpresets', $context))) {
-           //ok can delete
-        } else {
-            error("Invalid request");
-        }
-
-        $path = data_preset_path($course, $userid, $shortname);
-
-        $strwarning = get_string('deletewarning', 'data').'<br />'.
-                      data_preset_name($shortname, $path);
+if (optional_param('sesskey', false, PARAM_BOOL) && confirm_sesskey()) {
 
-        $options = new object();
-        $options->fullname = $userid.'/'.$shortname;
-        $options->action   = 'delete';
-        $options->d        = $data->id;
-        $options->sesskey  = sesskey();
+    $renderer = $PAGE->get_renderer('mod_data');
 
-        $optionsno = new object();
-        $optionsno->d = $data->id;
-        notice_yesno($strwarning, 'preset.php', 'preset.php', $options, $optionsno, 'post', 'get');
-        print_footer($course);
+    if ($formdata = $form_importexisting->get_data()) {
+        $importer = new data_preset_existing_importer($course, $cm, $data, $formdata->fullname);
+        echo $renderer->import_setting_mappings($data, $importer);
+        echo $OUTPUT->footer();
         exit(0);
-        break;
-
-    case 'delete' :
-        if (!data_submitted() and !confirm_sesskey()) {
-            error("Invalid request");
-        }
-
-        if ($userid > 0 and ($userid == $USER->id || has_capability('mod/data:manageuserpresets', $context))) {
-           //ok can delete
-        } else {
-            error("Invalid request");
-        }
-
-        $presetpath = data_preset_path($course, $userid, $shortname);
-
-        if (!clean_preset($presetpath)) {
-            error("Error deleting a preset!");
-        }
-        @rmdir($presetpath);
-
-        $strdeleted = get_string('deleted', 'data');
-        notify("$shortname $strdeleted", 'notifysuccess');
-        break;
-
-        /***************** Importing *****************/
-    case 'importpreset' :
-        if (!data_submitted() or !confirm_sesskey()) {
-            error("Invalid request");
-        }
-
-        $pimporter = new PresetImporter($course, $cm, $data, $userid, $shortname);
-        $pimporter->import_options();
-
-        print_footer($course);
+    } else if ($formdata = $form_importzip->get_data()) {
+        $file = new stdClass;
+        $file->name = $form_importzip->get_new_filename('importfile');
+        $file->path = $form_importzip->save_temp_file('importfile');
+        $importer = new data_preset_upload_importer($course, $cm, $data, $file->path);
+        echo $renderer->import_setting_mappings($data, $importer);
+        echo $OUTPUT->footer();
         exit(0);
-        break;
-
-        /* Imports a zip file. */
-    case 'importzip' :
-        if (!data_submitted() or !confirm_sesskey()) {
-            error("Invalid request");
-        }
+    } else if ($formdata = $form_export->get_data()) {
 
-        if (!make_upload_directory('temp/data/'.$USER->id)) {
-            error("Can't Create Directory");
+        if (headers_sent()) {
+            print_error('headersent');
         }
 
-        $presetfile = $CFG->dataroot.'/temp/data/'.$USER->id;
-        clean_preset($presetfile);
-
-        if (!unzip_file($CFG->dataroot."/$course->id/$file", $presetfile, false)) {
-            error("Can't unzip file");
-        }
-
-        $pimporter = new PresetImporter($course, $cm, $data, -$USER->id, $shortname);
-        $pimporter->import_options();
-
-        print_footer($course);
-        exit(0);
-        break;
-
-    case 'finishimport':
-        if (!data_submitted() or !confirm_sesskey()) {
-            error("Invalid request");
-        }
-
-        $pimporter = new PresetImporter($course, $cm, $data, $userid, $shortname);
-        $pimporter->import();
-
-        $strimportsuccess = get_string('importsuccess', 'data');
-        $straddentries = get_string('addentries', 'data');
-        $strtodatabase = get_string('todatabase', 'data');
-        if (!get_records('data_records', 'dataid', $data->id)) {
-            notify("$strimportsuccess <a href='edit.php?d=$data->id'>$straddentries</a> $strtodatabase", 'notifysuccess');
-        } else {
-            notify("$strimportsuccess", 'notifysuccess');
-        }
-        break;
-
-        /* Exports as a zip file ready for download. */
-    case 'export':
-        if (!data_submitted() or !confirm_sesskey()) {
-            error("Invalid request");
-        }
         $exportfile = data_presets_export($course, $cm, $data);
         $exportfilename = basename($exportfile);
         header("Content-Type: application/download\n");
-        header("Content-Disposition: attachment; filename=$exportfilename");
+        header("Content-Disposition: attachment; filename=\"$exportfilename\"");
         header('Expires: 0');
         header('Cache-Control: must-revalidate,post-check=0,pre-check=0');
         header('Pragma: public');
@@ -198,316 +133,96 @@ switch ($action) {
         fclose($exportfilehandler);
         unlink($exportfile);
         exit(0);
-        break;
 
-        /***************** Exporting *****************/
-    case 'save1':
-        if (!data_submitted() or !confirm_sesskey()) {
-            error("Invalid request");
-        }
-
-        $strcontinue = get_string('continue');
-        $strwarning = get_string('presetinfo', 'data');
-        $strname = get_string('shortname');
+    } else if ($formdata = $form_save->get_data()) {
 
-        echo '<div style="text-align:center">';
-        echo '<p>'.$strwarning.'</p>';
-        echo '<form action="preset.php" method="post">';
-        echo '<fieldset class="invisiblefieldset">';
-        echo '<label for="shorname">'.$strname.'</label> <input type="text" id="shorname" name="name" value="'.$data->name.'" />';
-        echo '<input type="hidden" name="action" value="save2" />';
-        echo '<input type="hidden" name="d" value="'.$data->id.'" />';
-        echo '<input type="hidden" name="sesskey" value="'.$sesskey.'" />';
-        echo '<input type="submit" value="'.$strcontinue.'" /></fieldset></form></div>';
-        print_footer($course);
-        exit(0);
-        break;
-
-    case 'save2':
-        if (!data_submitted() or !confirm_sesskey()) {
-            error("Invalid request");
-        }
-
-        $strcontinue = get_string('continue');
-        $stroverwrite = get_string('overwrite', 'data');
-        $strname = get_string('shortname');
-
-        $name = optional_param('name', $data->name, PARAM_FILE);
-
-        if (is_directory_a_preset("$CFG->dataroot/data/preset/$USER->id/$name")) {
-            notify("Preset already exists: Pick another name or overwrite");
-
-            echo '<div style="text-align:center">';
-            echo '<form action="preset.php" method="post">';
-            echo '<fieldset class="invisiblefieldset">';
-            echo '<label for="shorname">'.$strname.'</label> <input type="textbox" name="name" value="'.$name.'" />';
-            echo '<input type="hidden" name="action" value="save2" />';
-            echo '<input type="hidden" name="d" value="'.$data->id.'" />';
-            echo '<input type="hidden" name="sesskey" value="'.$sesskey.'" />';
-            echo '<input type="submit" value="'.$strcontinue.'" /></fieldset></form>';
-
-            echo '<form action="preset.php" method="post">';
-            echo '<div>';
-            echo '<input type="hidden" name="name" value="'.$name.'" />';
-            echo '<input type="hidden" name="action" value="save3" />';
-            echo '<input type="hidden" name="d" value="'.$data->id.'" />';
-            echo '<input type="hidden" name="sesskey" value="'.$sesskey.'" />';
-            echo '<input type="submit" value="'.$stroverwrite.'" /></div></form>';
-            echo '</div>';
-            print_footer($course);
-            exit(0);
-            break;
+        if (!empty($formdata->overwrite)) {
+            data_delete_site_preset($formdata->name);
         }
 
-    case 'save3':
-        if (!data_submitted() or !confirm_sesskey()) {
-            error("Invalid request");
+        // If the preset exists now then we need to throw an error.
+        $sitepresets = data_get_available_site_presets($context);
+        foreach ($sitepresets as $key=>$preset) {
+            if ($formdata->name == $preset->name) {
+                print_error('errorpresetexists', 'preset');
         }
-
-        $name = optional_param('name', $data->name, PARAM_FILE);
-        $presetdirectory = "/data/preset/$USER->id/$name";
-
-        make_upload_directory($presetdirectory);
-        clean_preset($CFG->dataroot.$presetdirectory);
-
-        $file = data_presets_export($course, $cm, $data);
-        if (!unzip_file($file, $CFG->dataroot.$presetdirectory, false)) {
-            error("Can't unzip to the preset directory");
         }
-        notify(get_string('savesuccess', 'data'), 'notifysuccess');
-        break;
-}
-
-$presets = data_get_available_presets($context);
-
-$strimport         = get_string('import');
-$strfromfile       = get_string('fromfile', 'data');
-$strchooseorupload = get_string('chooseorupload', 'data');
-$strusestandard    = get_string('usestandard', 'data');
-$strchoose         = get_string('choose');
-$strexport         = get_string('export', 'data');
-$strexportaszip    = get_string('exportaszip', 'data');
-$strsaveaspreset   = get_string('saveaspreset', 'data');
-$strsave           = get_string('save', 'data');
-$strdelete         = get_string('delete');
-
-echo '<div style="text-align:center">';
-echo '<table class="presets" cellpadding="5">';
-echo '<tr><td valign="top" colspan="2" align="center"><h3>'.$strexport.'</h3></td></tr>';
 
-echo '<tr><td><label>'.$strexportaszip.'</label>';
-helpbutton('exportzip', '', 'data', true, true);
-echo '</td><td>';
-$options = new object();
-$options->action = 'export';
-$options->d = $data->id;
-$options->sesskey = sesskey();
-print_single_button('preset.php', $options, $strexport, 'post');
-echo '</td></tr>';
+        // Save the preset now
+        data_presets_save($course, $cm, $data, $formdata->name);
 
-echo '<tr><td><label>'.$strsaveaspreset.'</label>';
-helpbutton('savepreset', '', 'data', true, true);
-echo '</td><td>';
-$options = new object();
-$options->action = 'save1';
-$options->d = $data->id;
-$options->sesskey = sesskey();
-print_single_button('preset.php', $options, $strsave, 'post');
-echo '</td></tr>';
-echo '<tr><td valign="top" colspan="2" align="center"><h3>'.$strimport.'</h3></td></tr>';
-echo '<tr><td><label for="fromfile">'.$strfromfile.'</label>';
-helpbutton('importfromfile', '', 'data', true, true);
-echo '</td><td>';
-echo '<form id="uploadpreset" method="post" action="preset.php">';
-echo '<fieldset class="invisiblefieldset">';
-echo '<input type="hidden" name="d" value="'.$data->id.'" />';
-echo '<input type="hidden" name="action" value="importzip" />';
-echo '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
-echo '<input name="file" size="20" value="" id="fromfile" type="text" /><input name="coursefiles" value="'.$strchooseorupload.'" onclick="return openpopup('."'/files/index.php?id={$course->id}&amp;choose=uploadpreset.file', 'coursefiles', 'menubar=0,location=0,scrollbars,resizable,width=750,height=500', 0".');" type="button" />';
-echo '<input type="submit" value="'.$strimport.'" />';
-echo '</fieldset></form>';
-echo '</td></tr>';
-
-echo '<tr valign="top"><td><label>'.$strusestandard.'</label>';
-helpbutton('usepreset', '', 'data', true, true);
-echo '</td><td>';
-
-echo '<form id="presets" method="post" action="preset.php" >';
-echo '<fieldset class="invisiblefieldset">';
-echo '<input type="hidden" name="d" value="'.$data->id.'" />';
-echo '<input type="hidden" name="action" value="importpreset" />';
-echo '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
-
-$i = 0;
-foreach ($presets as $id => $preset) {
-    $screenshot = '';
-    if (!empty($preset->userid)) {
-        $user = get_record('user', 'id', $preset->userid);
-        $desc = $preset->name.' ('.fullname($user, true).')';
+        echo $OUTPUT->notification(get_string('savesuccess', 'data'), 'notifysuccess');
+        echo $OUTPUT->continue_button($PAGE->url);
+        echo $OUTPUT->footer();
+        exit(0);
     } else {
-        $desc = $preset->name;
-    }
+        $action = optional_param('action', null, PARAM_ALPHA);
+        $fullname = optional_param('fullname', '', PARAM_PATH); // directory the preset is in
+        //
+        // find out preset owner userid and shortname
+        $parts = explode('/', $fullname, 2);
+        $userid = empty($parts[0]) ? 0 : (int)$parts[0];
+        $shortname = empty($parts[1]) ? '' : $parts[1];
 
-    if (!empty($preset->screenshot)) {
-        $screenshot = '<img width="150" class="presetscreenshot" src="'.$preset->screenshot.'" alt="'.get_string('screenshot').' '.$desc.'" />&nbsp;';
+        if ($userid && ($userid != $USER->id) && !has_capability('mod/data:viewalluserpresets', $context)) {
+            print_error('cannotaccesspresentsother', 'data');
     }
 
-    $fullname = $preset->userid.'/'.$preset->shortname;
-
-    $dellink = '';
-    if ($preset->userid > 0 and ($preset->userid == $USER->id || has_capability('mod/data:manageuserpresets', $context))) {
-        $dellink = '&nbsp;<a href="preset.php?d='.$data->id.'&amp;action=confirmdelete&amp;fullname='.$fullname.'&amp;sesskey='.sesskey().'">'.
-                   '<img src="'.$CFG->pixpath.'/t/delete.gif" class="iconsmall" alt="'.$strdelete.' '.$desc.'" /></a>';
+        if ($action == 'confirmdelete') {
+            $path = data_preset_path($course, $userid, $shortname);
+            $strwarning = get_string('deletewarning', 'data').'<br />'.$shortname;
+            $optionsyes = array('fullname' => $userid.'/'.$shortname,
+                             'action' => 'delete',
+                             'd' => $data->id);
+            $optionsno = array('d' => $data->id);
+            echo $OUTPUT->confirm($strwarning, new moodle_url('preset.php', $optionsyes), new moodle_url('preset.php', $optionsno));
+            echo $OUTPUT->footer();
+            exit(0);
+        } else if ($action == 'delete') {
+            if (!$userid || ($userid != $USER->id && !$canmanage)) {
+               print_error('invalidrequest');
     }
 
-    echo '<input type="radio" name="fullname" id="usepreset'.$i.'" value="'.$fullname.'" /><label for="usepreset'.$i++.'">'.$desc.'</label>'.$dellink.'<br />';
-}
-echo '<br />';
-echo '<input type="submit" value="'.$strchoose.'" />';
-echo '</fieldset></form>';
-echo '</td></tr>';
-echo '</table>';
-echo '</div>';
-
-print_footer($course);
-exit(0);
-
-################################################################################
-
-
-function data_presets_export($course, $cm, $data) {
-    global $CFG;
-    $presetname = clean_filename($data->name) . '-preset-' . gmdate("Ymd_Hi");
-    $exportsubdir = "$course->id/moddata/data/$data->id/$presetname";
-    make_upload_directory($exportsubdir);
-    $exportdir = "$CFG->dataroot/$exportsubdir";
-
-    // Assemble "preset.xml":
-    $presetxmldata = "<preset>\n\n";
-
-    // Raw settings are not preprocessed during saving of presets
-    $raw_settings = array(
-        'intro',
-        'comments',
-        'requiredentries',
-        'requiredentriestoview',
-        'maxentries',
-        'rssarticles',
-        'approval',
-        'defaultsortdir'
-    );
-
-    $presetxmldata .= "<settings>\n";
-    // First, settings that do not require any conversion
-    foreach ($raw_settings as $setting) {
-        $presetxmldata .= "<$setting>" . htmlspecialchars($data->$setting) . "</$setting>\n";
-    }
+            $presetpath = data_preset_path($course, $userid, $shortname);
+            fulldelete($presetpath);
 
-    // Now specific settings
-    if ($data->defaultsort > 0 && $sortfield = data_get_field_from_id($data->defaultsort, $data)) {
-        $presetxmldata .= '<defaultsort>' . htmlspecialchars($sortfield->field->name) . "</defaultsort>\n";
+            $strdeleted = get_string('deleted', 'data');
+            echo $OUTPUT->notification("$shortname $strdeleted", 'notifysuccess');
+        } else if ($action == 'finishimport') {
+            $overwritesettings = optional_param('overwritesettings', false, PARAM_BOOL);
+            if (!$fullname) {
+                $presetdir = $CFG->dataroot.'/temp/forms/'.required_param('directory', PARAM_ALPHANUMEXT);
+                if (!file_exists($presetdir) || !is_dir($presetdir)) {
+                    print_error('cannotimport');
+                }
+                $importer = new data_preset_upload_importer($course, $cm, $data, $presetdir);
     } else {
-        $presetxmldata .= "<defaultsort>0</defaultsort>\n";
-    }
-    $presetxmldata .= "</settings>\n\n";
-
-    // Now for the fields. Grab all that are non-empty
-    $fields = get_records('data_fields', 'dataid', $data->id);
-    ksort($fields);
-    if (!empty($fields)) {
-        foreach ($fields as $field) {
-            $presetxmldata .= "<field>\n";
-            foreach ($field as $key => $value) {
-                if ($value != '' && $key != 'id' && $key != 'dataid') {
-                    $presetxmldata .= "<$key>" . htmlspecialchars($value) . "</$key>\n";
-                }
+                $importer = new data_preset_existing_importer($course, $cm, $data, $fullname);
             }
-            $presetxmldata .= "</field>\n\n";
+            $importer->import($overwritesettings);
+            $strimportsuccess = get_string('importsuccess', 'data');
+            $straddentries = get_string('addentries', 'data');
+            $strtodatabase = get_string('todatabase', 'data');
+            if (!$DB->get_records('data_records', array('dataid'=>$data->id))) {
+                echo $OUTPUT->notification("$strimportsuccess <a href='edit.php?d=$data->id'>$straddentries</a> $strtodatabase", 'notifysuccess');
+            } else {
+                echo $OUTPUT->notification("$strimportsuccess", 'notifysuccess');
         }
     }
-    $presetxmldata .= '</preset>';
-
-    // After opening a file in write mode, close it asap
-    $presetxmlfile = fopen($exportdir . '/preset.xml', 'w');
-    fwrite($presetxmlfile, $presetxmldata);
-    fclose($presetxmlfile);
-
-    // Now write the template files
-    $singletemplate = fopen($exportdir . '/singletemplate.html', 'w');
-    fwrite($singletemplate, $data->singletemplate);
-    fclose($singletemplate);
-
-    $listtemplateheader = fopen($exportdir . '/listtemplateheader.html', 'w');
-    fwrite($listtemplateheader, $data->listtemplateheader);
-    fclose($listtemplateheader);
-
-    $listtemplate = fopen($exportdir . '/listtemplate.html', 'w');
-    fwrite($listtemplate, $data->listtemplate);
-    fclose($listtemplate);
-
-    $listtemplatefooter = fopen($exportdir . '/listtemplatefooter.html', 'w');
-    fwrite($listtemplatefooter, $data->listtemplatefooter);
-    fclose($listtemplatefooter);
-
-    $addtemplate = fopen($exportdir . '/addtemplate.html', 'w');
-    fwrite($addtemplate, $data->addtemplate);
-    fclose($addtemplate);
-
-    $rsstemplate = fopen($exportdir . '/rsstemplate.html', 'w');
-    fwrite($rsstemplate, $data->rsstemplate);
-    fclose($rsstemplate);
-
-    $rsstitletemplate = fopen($exportdir . '/rsstitletemplate.html', 'w');
-    fwrite($rsstitletemplate, $data->rsstitletemplate);
-    fclose($rsstitletemplate);
-
-    $csstemplate = fopen($exportdir . '/csstemplate.css', 'w');
-    fwrite($csstemplate, $data->csstemplate);
-    fclose($csstemplate);
-
-    $jstemplate = fopen($exportdir . '/jstemplate.js', 'w');
-    fwrite($jstemplate, $data->jstemplate);
-    fclose($jstemplate);
-
-    $asearchtemplate = fopen($exportdir . '/asearchtemplate.html', 'w');
-    fwrite($asearchtemplate, $data->asearchtemplate);
-    fclose($asearchtemplate);
-
-    // Check if all files have been generated
-    if (! is_directory_a_preset($exportdir)) {
-        error('Not all files generated!');
-        // should be migrated to print_error()
-    }
-
-    $filelist = array(
-        'preset.xml',
-        'singletemplate.html',
-        'listtemplateheader.html',
-        'listtemplate.html',
-        'listtemplatefooter.html',
-        'addtemplate.html',
-        'rsstemplate.html',
-        'rsstitletemplate.html',
-        'csstemplate.css',
-        'jstemplate.js',
-        'asearchtemplate.html'
-    );
-
-    foreach ($filelist as $key => $file) {
-        $filelist[$key] = $exportdir . '/' . $filelist[$key];
+        echo $OUTPUT->continue_button($PAGE->url);
+        echo $OUTPUT->footer();
+        exit(0);
     }
+}
 
-    $exportfile = "$CFG->dataroot/$course->id/moddata/data/$data->id/$presetname.zip";
-    file_exists($exportfile) && unlink($exportfile);
-    $status = zip_files($filelist, $exportfile);
-    // ToDo: status check
-    foreach ($filelist as $file) {
-        unlink($file);
-    }
-    rmdir($exportdir);
+// Export forms
+echo $OUTPUT->heading(get_string('export', 'data'));
+$form_export->display();
+$form_save->display();
 
-    // Return the full path to the exported preset file:
-    return $exportfile;
-}
+// Import forms
+echo $OUTPUT->heading(get_string('import'));
+$form_importzip->display();
+$form_importexisting->display();
 
-?>
+echo $OUTPUT->footer();
\ No newline at end of file
