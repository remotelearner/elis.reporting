diff --git a/mod/data/templates.php b/mod/data/templates.php
old mode 100755
new mode 100644
index 2ec039c..5e321e7
--- a/mod/data/templates.php
+++ b/mod/data/templates.php
@@ -1,129 +1,117 @@
-<?php  // $Id$
-///////////////////////////////////////////////////////////////////////////
-//                                                                       //
-// NOTICE OF COPYRIGHT                                                   //
-//                                                                       //
-// Moodle - Modular Object-Oriented Dynamic Learning Environment         //
-//          http://moodle.org                                            //
-//                                                                       //
-// Copyright (C) 2005 Martin Dougiamas  http://dougiamas.com             //
-//                                                                       //
-// This program is free software; you can redistribute it and/or modify  //
-// it under the terms of the GNU General Public License as published by  //
-// the Free Software Foundation; either version 2 of the License, or     //
-// (at your option) any later version.                                   //
-//                                                                       //
-// This program is distributed in the hope that it will be useful,       //
-// but WITHOUT ANY WARRANTY; without even the implied warranty of        //
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         //
-// GNU General Public License for more details:                          //
-//                                                                       //
-//          http://www.gnu.org/copyleft/gpl.html                         //
-//                                                                       //
-///////////////////////////////////////////////////////////////////////////
-
-    require_once('../../config.php');
-    require_once('lib.php');
-    require_once($CFG->libdir.'/blocklib.php');
-
-    $id    = optional_param('id', 0, PARAM_INT);  // course module id
-    $d     = optional_param('d', 0, PARAM_INT);   // database id
-    $mode  = optional_param('mode', 'singletemplate', PARAM_ALPHA);
-
-    if ($id) {
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file is part of the Database module for Moodle
+ *
+ * @copyright 2005 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package mod-data
+ */
+
+require_once('../../config.php');
+require_once('lib.php');
+
+$id    = optional_param('id', 0, PARAM_INT);  // course module id
+$d     = optional_param('d', 0, PARAM_INT);   // database id
+$mode  = optional_param('mode', 'singletemplate', PARAM_ALPHA);
+$disableeditor = optional_param('switcheditor', false, PARAM_RAW);
+$enableeditor = optional_param('useeditor', false, PARAM_RAW);
+
+$url = new moodle_url('/mod/data/templates.php');
+if ($mode !== 'singletemplate') {
+    $url->param('mode', $mode);
+}
+
+if ($id) {
+    $url->param('id', $id);
+    $PAGE->set_url($url);
         if (! $cm = get_coursemodule_from_id('data', $id)) {
-            error('Course Module ID was incorrect');
+        print_error('invalidcoursemodule');
         }
-        if (! $course = get_record('course', 'id', $cm->course)) {
-            error('Course is misconfigured');
+    if (! $course = $DB->get_record('course', array('id'=>$cm->course))) {
+        print_error('coursemisconf');
         }
-        if (! $data = get_record('data', 'id', $cm->instance)) {
-            error('Course module is incorrect');
+    if (! $data = $DB->get_record('data', array('id'=>$cm->instance))) {
+        print_error('invalidcoursemodule');
         }
 
-    } else {
-        if (! $data = get_record('data', 'id', $d)) {
-            error('Data ID is incorrect');
+} else {
+    $url->param('d', $d);
+    $PAGE->set_url($url);
+    if (! $data = $DB->get_record('data', array('id'=>$d))) {
+        print_error('invalidid', 'data');
         }
-        if (! $course = get_record('course', 'id', $data->course)) {
-            error('Course is misconfigured');
+    if (! $course = $DB->get_record('course', array('id'=>$data->course))) {
+        print_error('coursemisconf');
         }
         if (! $cm = get_coursemodule_from_instance('data', $data->id, $course->id)) {
-            error('Course Module ID was incorrect');
-        }
+        print_error('invalidcoursemodule');
     }
+}
 
-    require_login($course->id, false, $cm);
+require_login($course->id, false, $cm);
 
-    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
-    require_capability('mod/data:managetemplates', $context);
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
+require_capability('mod/data:managetemplates', $context);
 
-    if (!count_records('data_fields','dataid',$data->id)) {      // Brand new database!
+if (!$DB->count_records('data_fields', array('dataid'=>$data->id))) {      // Brand new database!
         redirect($CFG->wwwroot.'/mod/data/field.php?d='.$data->id);  // Redirect to field entry
-    }
+}
 
-    add_to_log($course->id, 'data', 'templates view', "templates.php?id=$cm->id&amp;d=$data->id", $data->id, $cm->id);
+add_to_log($course->id, 'data', 'templates view', "templates.php?id=$cm->id&amp;d=$data->id", $data->id, $cm->id);
 
 
 /// Print the page header
 
-    $strdata = get_string('modulenameplural','data');
-
-    // For the javascript for inserting template tags: initialise the default textarea to
-    // 'edit_template' - it is always present in all different possible views.
-
-    $editorobj = 'editor_'.md5('template');
+$strdata = get_string('modulenameplural','data');
 
-    $bodytag = 'onload="';
-    $bodytag .= 'if (typeof('.$editorobj.') != \'undefined\') { currEditor = '.$editorobj.'; } ';
-    $bodytag .= 'currTextarea = document.getElementById(\'tempform\').template;';
-    $bodytag .= '" ';
+// For the javascript for inserting template tags: initialise the default textarea to
+// 'edit_template' - it is always present in all different possible views.
 
-    // Javascript to insert the field tags into the textarea.
-    $meta = '<script type="text/javascript">'."\n";
-    $meta .= '//<![CDATA['."\n";
-    $meta .= 'function insert_field_tags(selectlist) {';
-    $meta .= '  if (typeof(currEditor) != \'undefined\' && currEditor._editMode == \'wysiwyg\') {';
-        // HTMLArea-specific
-    $meta .= '     currEditor.insertHTML(selectlist.options[selectlist.selectedIndex].value); '; 
-    $meta .= '  } else {';
-        // For inserting when in HTMLArea code view or for normal textareas
-    $meta .= '     insertAtCursor(currTextarea, selectlist.options[selectlist.selectedIndex].value);';   
-    $meta .= '  }'."\n";
-    $meta .= '}'."\n";
-    $meta .= '//]]>'."\n";
-    $meta .= '</script>'."\n";
+if ($mode == 'singletemplate') {
+    $PAGE->navbar->add(get_string($mode,'data'));
+}
     
-    $navigation = build_navigation('', $cm);
-    print_header_simple($data->name, '', $navigation,
-                        '', $meta, true, update_module_button($cm->id, $course->id, get_string('modulename', 'data')),
-                        navmenu($course, $cm), '', $bodytag);
-
-    print_heading(format_string($data->name));
+$PAGE->requires->js('/mod/data/data.js');
+$PAGE->set_title($data->name);
+$PAGE->set_heading($course->fullname);
+$PAGE->set_pagelayout('report');
+echo $OUTPUT->header();
+echo $OUTPUT->heading(format_string($data->name));
 
 
 /// Groups needed for Add entry tab
-    $currentgroup = groups_get_activity_group($cm);
-    $groupmode = groups_get_activity_groupmode($cm);
+$currentgroup = groups_get_activity_group($cm);
+$groupmode = groups_get_activity_groupmode($cm);
 
 /// Print the tabs.
-    $currenttab = 'templates';
-    include('tabs.php');
+$currenttab = 'templates';
+include('tabs.php');
 
 /// Processing submitted data, i.e updating form.
-    $resettemplate = false;
-
-/// html editor is by default disabled
-    $editor = isset($SESSION->data_use_editor) ? $SESSION->data_use_editor : (can_use_html_editor() ? 1 : 0);
+$resettemplate = false;
 
-    if (($mytemplate = data_submitted($CFG->wwwroot.'/mod/data/templates.php')) && confirm_sesskey()) {
+if (($mytemplate = data_submitted()) && confirm_sesskey()) {
+    $newtemplate = new stdClass();
         $newtemplate->id = $data->id;
         $newtemplate->{$mode} = $mytemplate->template;
 
-        if (!empty($mytemplate->switcheditor)) {
-            $editor = $editor ? 0 : 1;
-            $SESSION->data_use_editor = $editor;
-        } else if (!empty($mytemplate->defaultform)) {
+    if (!empty($mytemplate->defaultform)) {
             // Reset the template to default, but don't save yet.
             $resettemplate = true;
             $data->{$mode} = data_generate_default_template($data, $mode, 0, false, false);
@@ -144,65 +132,95 @@
 
             // Check for multiple tags, only need to check for add template.
             if ($mode != 'addtemplate' or data_tags_check($data->id, $newtemplate->{$mode})) {
-                if (update_record('data', $newtemplate)) {
-                    notify(get_string('templatesaved', 'data'), 'notifysuccess');
+            // if disableeditor or enableeditor buttons click, don't save instance
+            if (empty($disableeditor) && empty($enableeditor)) {
+                $DB->update_record('data', $newtemplate);
+                echo $OUTPUT->notification(get_string('templatesaved', 'data'), 'notifysuccess');
+                add_to_log($course->id, 'data', 'templates saved', "templates.php?id=$cm->id&amp;d=$data->id", $data->id, $cm->id);
                 }
             }
-            add_to_log($course->id, 'data', 'templates saved', "templates.php?id=$cm->id&amp;d=$data->id", $data->id, $cm->id);
         }
-    } else {
+} else {
         echo '<div class="littleintro" style="text-align:center">'.get_string('header'.$mode,'data').'</div>';
-    }
+}
 
 /// If everything is empty then generate some defaults
-    if (empty($data->addtemplate) and empty($data->singletemplate) and
+if (empty($data->addtemplate) and empty($data->singletemplate) and
         empty($data->listtemplate) and empty($data->rsstemplate)) {
         data_generate_default_template($data, 'singletemplate');
         data_generate_default_template($data, 'listtemplate');
         data_generate_default_template($data, 'addtemplate');
         data_generate_default_template($data, 'asearchtemplate');           //Template for advanced searches.
         data_generate_default_template($data, 'rsstemplate');
-    }
-
-
-    echo '<form id="tempform" action="templates.php?d='.$data->id.'&amp;mode='.$mode.'" method="post">';
-    echo '<div>';
-    echo '<input name="sesskey" value="'.sesskey().'" type="hidden" />';
-    // Print button to autogen all forms, if all templates are empty
-
-    if (!$resettemplate) {
+}
+
+editors_head_setup();
+$format = FORMAT_HTML;
+
+if ($mode === 'csstemplate' or $mode === 'jstemplate') {
+    $disableeditor = true;
+}
+
+if ($disableeditor) {
+    $format = FORMAT_PLAIN;
+}
+$editor = editors_get_preferred_editor($format);
+$strformats = format_text_menu();
+$formats =  $editor->get_supported_formats();
+foreach ($formats as $fid) {
+    $formats[$fid] = $strformats[$fid];
+}
+$options = array();
+$options['trusttext'] = false;
+$options['forcehttps'] = false;
+$options['subdirs'] = false;
+$options['maxfiles'] = 0;
+$options['maxbytes'] = 0;
+$options['changeformat'] = 0;
+$options['noclean'] = false;
+
+echo '<form id="tempform" action="templates.php?d='.$data->id.'&amp;mode='.$mode.'" method="post">';
+echo '<div>';
+echo '<input name="sesskey" value="'.sesskey().'" type="hidden" />';
+// Print button to autogen all forms, if all templates are empty
+
+if (!$resettemplate) {
         // Only reload if we are not resetting the template to default.
-        $data = get_record('data', 'id', $d);
-    }
-    print_simple_box_start('center','80%');
-    echo '<table cellpadding="4" cellspacing="0" border="0">';
+    $data = $DB->get_record('data', array('id'=>$d));
+}
+echo $OUTPUT->box_start('generalbox boxaligncenter boxwidthwide');
+echo '<table cellpadding="4" cellspacing="0" border="0">';
 
 /// Add the HTML editor(s).
-    $usehtmleditor = $editor && can_use_html_editor() && ($mode != 'csstemplate') && ($mode != 'jstemplate');
-    if ($mode == 'listtemplate'){
+$usehtmleditor = can_use_html_editor() && ($mode != 'csstemplate') && ($mode != 'jstemplate') && !$disableeditor;
+if ($mode == 'listtemplate'){
         // Print the list template header.
         echo '<tr>';
         echo '<td>&nbsp;</td>';
         echo '<td>';
         echo '<div style="text-align:center"><label for="edit-listtemplateheader">'.get_string('header','data').'</label></div>';
-        print_textarea($usehtmleditor, 10, 72, 0, 0, 'listtemplateheader', $data->listtemplateheader);
+
+    $field = 'listtemplateheader';
+    $editor->use_editor($field, $options);
+    echo '<div><textarea id="'.$field.'" name="'.$field.'" rows="15" cols="80">'.s($data->listtemplateheader).'</textarea></div>';
+
         echo '</td>';
         echo '</tr>';
-    }
+}
 
-    // Print the main template.
+// Print the main template.
 
-    echo '<tr><td valign="top">';
-    if ($mode != 'csstemplate' and $mode != 'jstemplate') {
+echo '<tr><td valign="top">';
+if ($mode != 'csstemplate' and $mode != 'jstemplate') {
         // Add all the available fields for this data.
         echo '<label for="availabletags">'.get_string('availabletags','data').'</label>';
-        helpbutton('tags', get_string('tags'), 'data');
+    echo $OUTPUT->help_icon('availabletags', 'data');
         echo '<br />';
 
 
         echo '<select name="fields1[]" id="availabletags" size="12" onclick="insert_field_tags(this)">';
 
-        $fields = get_records('data_fields', 'dataid', $data->id);
+    $fields = $DB->get_records('data_fields', array('dataid'=>$data->id));
         echo '<optgroup label="'.get_string('fields', 'data').'">';
         foreach ($fields as $field) {
             echo '<option value="[['.$field->name.']]" title="'.$field->description.'">'.$field->name.' - [['.$field->name.']]</option>';
@@ -226,6 +244,9 @@
             echo '<option value="##edit##">' .get_string('edit', 'data'). ' - ##edit##</option>';
             echo '<option value="##delete##">' .get_string('delete', 'data'). ' - ##delete##</option>';
             echo '<option value="##approve##">' .get_string('approve', 'data'). ' - ##approve##</option>';
+        if ($mode != 'rsstemplate') {
+            echo '<option value="##export##">' .get_string('export', 'data'). ' - ##export##</option>';
+        }
             if ($mode != 'singletemplate') {
                 // more points to single template - not useable there
                 echo '<option value="##more##">' .get_string('more', 'data'). ' - ##more##</option>';
@@ -254,66 +275,65 @@
         echo '<br /><br /><br /><br /><input type="submit" name="defaultform" value="'.get_string('resettemplate','data').'" />';
         if (can_use_html_editor()) {
             echo '<br /><br />';
-            if ($editor) {
+        if ($usehtmleditor) {
                 $switcheditor = get_string('editordisable', 'data');
+            echo '<input type="submit" name="switcheditor" value="'.s($switcheditor).'" />';
             } else {
                 $switcheditor = get_string('editorenable', 'data');
+            echo '<input type="submit" name="useeditor" value="'.s($switcheditor).'" />';
             }
-            echo '<input type="submit" name="switcheditor" value="'.s($switcheditor).'" />';
         }
-    } else {
+} else {
         echo '<br /><br /><br /><br /><input type="submit" name="defaultform" value="'.get_string('resettemplate','data').'" />';
-    }
-    echo '</td>';
+}
+echo '</td>';
 
-    echo '<td>';
-    if ($mode == 'listtemplate'){
+echo '<td valign="top">';
+if ($mode == 'listtemplate'){
         echo '<div style="text-align:center"><label for="edit-template">'.get_string('multientry','data').'</label></div>';
-    } else {
+} else {
         echo '<div style="text-align:center"><label for="edit-template">'.get_string($mode,'data').'</label></div>';
-    }
+}
 
-    print_textarea($usehtmleditor, 20, 72, 0, 0, 'template', $data->{$mode});
-    echo '</td>';
-    echo '</tr>';
+$field = 'template';
+$editor->use_editor($field, $options);
+echo '<div><textarea id="'.$field.'" name="'.$field.'" rows="15" cols="80">'.s($data->{$mode}).'</textarea></div>';
+echo '</td>';
+echo '</tr>';
 
-    if ($mode == 'listtemplate'){
+if ($mode == 'listtemplate'){
         echo '<tr>';
         echo '<td>&nbsp;</td>';
         echo '<td>';
         echo '<div style="text-align:center"><label for="edit-listtemplatefooter">'.get_string('footer','data').'</label></div>';
-        print_textarea($usehtmleditor, 10, 72, 0, 0, 'listtemplatefooter', $data->listtemplatefooter);
+
+    $field = 'listtemplatefooter';
+    $editor->use_editor($field, $options);
+    echo '<div><textarea id="'.$field.'" name="'.$field.'" rows="15" cols="80">'.s($data->listtemplatefooter).'</textarea></div>';
         echo '</td>';
         echo '</tr>';
-    } else if ($mode == 'rsstemplate') {
+} else if ($mode == 'rsstemplate') {
         echo '<tr>';
         echo '<td>&nbsp;</td>';
         echo '<td>';
         echo '<div style="text-align:center"><label for="edit-rsstitletemplate">'.get_string('rsstitletemplate','data').'</label></div>';
-        print_textarea($usehtmleditor, 10, 72, 0, 0, 'rsstitletemplate', $data->rsstitletemplate);
+
+    $field = 'rsstitletemplate';
+    $editor->use_editor($field, $options);
+    echo '<div><textarea id="'.$field.'" name="'.$field.'" rows="15" cols="80">'.s($data->rsstitletemplate).'</textarea></div>';
         echo '</td>';
         echo '</tr>';
-    }
+}
 
-    echo '<tr><td style="text-align:center" colspan="2">';
-    echo '<input type="submit" value="'.get_string('savetemplate','data').'" />&nbsp;';
+echo '<tr><td style="text-align:center" colspan="2">';
+echo '<input type="submit" value="'.get_string('savetemplate','data').'" />&nbsp;';
 
-    echo '</td></tr></table>';
+echo '</td></tr></table>';
 
 
-    print_simple_box_end();
-    echo '</div>';
-    echo '</form>';
-    if ($usehtmleditor) {
-        use_html_editor('template');
-        if ($mode == 'listtemplate'){
-            use_html_editor('listtemplateheader');
-            use_html_editor('listtemplatefooter');
-        } else if ($mode == 'rsstemplate'){
-            use_html_editor('rsstitletemplate');
-        }
-    }
+echo $OUTPUT->box_end();
+echo '</div>';
+echo '</form>';
 
 /// Finish the page
-    print_footer($course);
-?>
+echo $OUTPUT->footer();
