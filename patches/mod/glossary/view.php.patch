diff --git a/mod/glossary/view.php b/mod/glossary/view.php
index e80cdc4..fe16b5e 100644
--- a/mod/glossary/view.php
+++ b/mod/glossary/view.php
@@ -1,75 +1,84 @@
-<?php  // $Id$
+<?php
+
 /// This page prints a particular instance of glossary
-    require_once("../../config.php");
-    require_once("lib.php");
-    require_once("$CFG->libdir/rsslib.php");
-
-    $id = optional_param('id', 0, PARAM_INT);           // Course Module ID
-    $g  = optional_param('g', 0, PARAM_INT);            // Glossary ID
-
-    $tab  = optional_param('tab', GLOSSARY_NO_VIEW, PARAM_ALPHA);    // browsing entries by categories?
-    $displayformat = optional_param('displayformat',-1, PARAM_INT);  // override of the glossary display format
-
-    $mode       = optional_param('mode', '', PARAM_ALPHA);           // term entry cat date letter search author approval
-    $hook       = optional_param('hook', '', PARAM_CLEAN);           // the term, entry, cat, etc... to look for based on mode
-    $fullsearch = optional_param('fullsearch', 0,PARAM_INT);         // full search (concept and definition) when searching?
-    $sortkey    = optional_param('sortkey', '', PARAM_ALPHA);// Sorted view: CREATION | UPDATE | FIRSTNAME | LASTNAME...
-    $sortorder  = optional_param('sortorder', 'ASC', PARAM_ALPHA);   // it defines the order of the sorting (ASC or DESC)
-    $offset     = optional_param('offset', 0,PARAM_INT);             // entries to bypass (for paging purposes)
-    $page       = optional_param('page', 0,PARAM_INT);               // Page to show (for paging purposes)
-    $show       = optional_param('show', '', PARAM_ALPHA);           // [ concept | alias ] => mode=term hook=$show
-
-    if (!empty($id)) {
+require_once("../../config.php");
+require_once("lib.php");
+require_once($CFG->libdir . '/completionlib.php');
+require_once("$CFG->libdir/rsslib.php");
+
+$id = optional_param('id', 0, PARAM_INT);           // Course Module ID
+$g  = optional_param('g', 0, PARAM_INT);            // Glossary ID
+
+$tab  = optional_param('tab', GLOSSARY_NO_VIEW, PARAM_ALPHA);    // browsing entries by categories?
+$displayformat = optional_param('displayformat',-1, PARAM_INT);  // override of the glossary display format
+
+$mode       = optional_param('mode', '', PARAM_ALPHA);           // term entry cat date letter search author approval
+$hook       = optional_param('hook', '', PARAM_CLEAN);           // the term, entry, cat, etc... to look for based on mode
+$fullsearch = optional_param('fullsearch', 0,PARAM_INT);         // full search (concept and definition) when searching?
+$sortkey    = optional_param('sortkey', '', PARAM_ALPHA);// Sorted view: CREATION | UPDATE | FIRSTNAME | LASTNAME...
+$sortorder  = optional_param('sortorder', 'ASC', PARAM_ALPHA);   // it defines the order of the sorting (ASC or DESC)
+$offset     = optional_param('offset', 0,PARAM_INT);             // entries to bypass (for paging purposes)
+$page       = optional_param('page', 0,PARAM_INT);               // Page to show (for paging purposes)
+$show       = optional_param('show', '', PARAM_ALPHA);           // [ concept | alias ] => mode=term hook=$show
+
+if (!empty($id)) {
         if (! $cm = get_coursemodule_from_id('glossary', $id)) {
-            error("Course Module ID was incorrect");
+        print_error('invalidcoursemodule');
         }
-        if (! $course = get_record("course", "id", $cm->course)) {
-            error("Course is misconfigured");
+    if (! $course = $DB->get_record("course", array("id"=>$cm->course))) {
+        print_error('coursemisconf');
         }
-        if (! $glossary = get_record("glossary", "id", $cm->instance)) {
-            error("Course module is incorrect");
+    if (! $glossary = $DB->get_record("glossary", array("id"=>$cm->instance))) {
+        print_error('invalidid', 'glossary');
         }
-    } else if (!empty($g)) {
-        if (! $glossary = get_record("glossary", "id", $g)) {
-            error("Course module is incorrect");
+
+} else if (!empty($g)) {
+    if (! $glossary = $DB->get_record("glossary", array("id"=>$g))) {
+        print_error('invalidid', 'glossary');
         }
-        if (! $course = get_record("course", "id", $glossary->course)) {
-            error("Could not determine which course this belonged to!");
+    if (! $course = $DB->get_record("course", array("id"=>$glossary->course))) {
+        print_error('invalidcourseid');
         }
         if (!$cm = get_coursemodule_from_instance("glossary", $glossary->id, $course->id)) {
-            error("Could not determine which course module this belonged to!");
+        print_error('invalidcoursemodule');
         }
         $id = $cm->id;
-    } else {
-        error("Must specify glossary ID or course module ID");
-    }
+} else {
+    print_error('invalidid', 'glossary');
+}
+
+require_course_login($course->id, true, $cm);
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
 
-    require_course_login($course->id, true, $cm);
-    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
+// Prepare format_string/text options
+$fmtoptions = array(
+    'context' => $context);
+
+require_once($CFG->dirroot . '/comment/lib.php');
+comment::init();
 
 /// Loading the textlib singleton instance. We are going to need it.
-    $textlib = textlib_get_instance();
+$textlib = textlib_get_instance();
 
 /// redirecting if adding a new entry
-    if ($tab == GLOSSARY_ADDENTRY_VIEW ) {
-        redirect("edit.php?id=$cm->id&amp;mode=$mode");
-    }
+if ($tab == GLOSSARY_ADDENTRY_VIEW ) {
+    redirect("edit.php?cmid=$cm->id&amp;mode=$mode");
+}
 
 /// setting the defaut number of entries per page if not set
-
-    if ( !$entriesbypage = $glossary->entbypage ) {
+if ( !$entriesbypage = $glossary->entbypage ) {
         $entriesbypage = $CFG->glossary_entbypage;
-    }
+}
 
 /// If we have received a page, recalculate offset
-    if ($page != 0 && $offset == 0) {
+if ($page != 0 && $offset == 0) {
         $offset = $page * $entriesbypage;
-    }
+}
 
 /// setting the default values for the display mode of the current glossary
 /// only if the glossary is viewed by the first time
-    if ( $dp = get_record('glossary_formats','name', addslashes($glossary->displayformat)) ) {
-    /// Based on format->defaultmode, we build the defaulttab to be showed sometimes
+if ( $dp = $DB->get_record('glossary_formats', array('name'=>$glossary->displayformat)) ) {
+/// Based on format->defaultmode, we build the defaulttab to be showed sometimes
         switch ($dp->defaultmode) {
             case 'cat':
                 $defaulttab = GLOSSARY_CATEGORY_VIEW;
@@ -83,7 +92,7 @@
             default:
                 $defaulttab = GLOSSARY_STANDARD_VIEW;
         }
-    /// Fetch the rest of variables
+/// Fetch the rest of variables
         $printpivot = $dp->showgroup;
         if ( $mode == '' and $hook == '' and $show == '') {
             $mode      = $dp->defaultmode;
@@ -91,41 +100,45 @@
             $sortkey   = $dp->sortkey;
             $sortorder = $dp->sortorder;
         }
-    } else {
+} else {
         $defaulttab = GLOSSARY_STANDARD_VIEW;
         $printpivot = 1;
         if ( $mode == '' and $hook == '' and $show == '') {
             $mode = 'letter';
             $hook = 'ALL';
         }
-    }
+}
 
-    if ( $displayformat == -1 ) {
+if ( $displayformat == -1 ) {
          $displayformat = $glossary->displayformat;
-    }
+}
 
-    if ( $show ) {
+if ( $show ) {
         $mode = 'term';
         $hook = $show;
         $show = '';
-    }
+}
 /// Processing standard security processes
-    if ($course->id != SITEID) {
+if ($course->id != SITEID) {
         require_login($course->id);
-    }
-    if (!$cm->visible and !has_capability('moodle/course:viewhiddenactivities', $context)) {
-        print_header();
+}
+if (!$cm->visible and !has_capability('moodle/course:viewhiddenactivities', $context)) {
+    echo $OUTPUT->header();
         notice(get_string("activityiscurrentlyhidden"));
-    }
-    add_to_log($course->id, "glossary", "view", "view.php?id=$cm->id&amp;tab=$tab", $glossary->id, $cm->id);
+}
+add_to_log($course->id, "glossary", "view", "view.php?id=$cm->id&amp;tab=$tab", $glossary->id, $cm->id);
+
+// Mark as viewed
+$completion = new completion_info($course);
+$completion->set_module_viewed($cm);
 
 /// stablishing flag variables
-    if ( $sortorder = strtolower($sortorder) ) {
+if ( $sortorder = strtolower($sortorder) ) {
         if ($sortorder != 'asc' and $sortorder != 'desc') {
             $sortorder = '';
         }
-    }
-    if ( $sortkey = strtoupper($sortkey) ) {
+}
+if ( $sortkey = strtoupper($sortkey) ) {
         if ($sortkey != 'CREATION' and
             $sortkey != 'UPDATE' and
             $sortkey != 'FIRSTNAME' and
@@ -133,43 +146,43 @@
             ) {
             $sortkey = '';
         }
-    }
+}
 
-    switch ( $mode = strtolower($mode) ) {
-    case 'search': /// looking for terms containing certain word(s)
+switch ( $mode = strtolower($mode) ) {
+case 'search': /// looking for terms containing certain word(s)
         $tab = GLOSSARY_STANDARD_VIEW;
 
         //Clean a bit the search string
         $hook = trim(strip_tags($hook));
 
-    break;
+break;
 
-    case 'entry':  /// Looking for a certain entry id
+case 'entry':  /// Looking for a certain entry id
         $tab = GLOSSARY_STANDARD_VIEW;
-        if ( $dp = get_record("glossary_formats","name", $glossary->displayformat) ) {
+    if ( $dp = $DB->get_record("glossary_formats", array("name"=>$glossary->displayformat)) ) {
             $displayformat = $dp->popupformatname;
         }
-    break;
+break;
 
-    case 'cat':    /// Looking for a certain cat
+case 'cat':    /// Looking for a certain cat
         $tab = GLOSSARY_CATEGORY_VIEW;
         if ( $hook > 0 ) {
-            $category = get_record("glossary_categories","id",$hook);
+        $category = $DB->get_record("glossary_categories", array("id"=>$hook));
         }
-    break;
+break;
 
-    case 'approval':    /// Looking for entries waiting for approval
+case 'approval':    /// Looking for entries waiting for approval
         $tab = GLOSSARY_APPROVAL_VIEW;
         if ( !$hook and !$sortkey and !$sortorder) {
             $hook = 'ALL';
         }
-    break;
+break;
 
-    case 'term':   /// Looking for entries that include certain term in its concept, definition or aliases
+case 'term':   /// Looking for entries that include certain term in its concept, definition or aliases
         $tab = GLOSSARY_STANDARD_VIEW;
-    break;
+break;
 
-    case 'date':
+case 'date':
         $tab = GLOSSARY_DATE_VIEW;
         if ( !$sortkey ) {
             $sortkey = 'UPDATE';
@@ -177,9 +190,9 @@
         if ( !$sortorder ) {
             $sortorder = 'desc';
         }
-    break;
+break;
 
-    case 'author':  /// Looking for entries, browsed by author
+case 'author':  /// Looking for entries, browsed by author
         $tab = GLOSSARY_AUTHOR_VIEW;
         if ( !$hook ) {
             $hook = 'ALL';
@@ -190,69 +203,78 @@
         if ( !$sortorder ) {
             $sortorder = 'asc';
         }
-    break;
+break;
 
-    case 'letter':  /// Looking for entries that begin with a certain letter, ALL or SPECIAL characters
-    default:
+case 'letter':  /// Looking for entries that begin with a certain letter, ALL or SPECIAL characters
+default:
         $tab = GLOSSARY_STANDARD_VIEW;
         if ( !$hook ) {
             $hook = 'ALL';
         }
-    break;
-    }
+break;
+}
 
-    switch ( $tab ) {
-    case GLOSSARY_IMPORT_VIEW:
-    case GLOSSARY_EXPORT_VIEW:
-    case GLOSSARY_APPROVAL_VIEW:
+switch ( $tab ) {
+case GLOSSARY_IMPORT_VIEW:
+case GLOSSARY_EXPORT_VIEW:
+case GLOSSARY_APPROVAL_VIEW:
         $showcommonelements = 0;
-    break;
+break;
 
-    default:
+default:
         $showcommonelements = 1;
-    break;
-    }
+break;
+}
 
 /// Printing the heading
-    $strglossaries = get_string("modulenameplural", "glossary");
-    $strglossary = get_string("modulename", "glossary");
-    $strallcategories = get_string("allcategories", "glossary");
-    $straddentry = get_string("addentry", "glossary");
-    $strnoentries = get_string("noentries", "glossary");
-    $strsearchconcept = get_string("searchconcept", "glossary");
-    $strsearchindefinition = get_string("searchindefinition", "glossary");
-    $strsearch = get_string("search");
-    $strwaitingapproval = get_string('waitingapproval', 'glossary');
+$strglossaries = get_string("modulenameplural", "glossary");
+$strglossary = get_string("modulename", "glossary");
+$strallcategories = get_string("allcategories", "glossary");
+$straddentry = get_string("addentry", "glossary");
+$strnoentries = get_string("noentries", "glossary");
+$strsearchindefinition = get_string("searchindefinition", "glossary");
+$strsearch = get_string("search");
+$strwaitingapproval = get_string('waitingapproval', 'glossary');
 
 /// If we are in approval mode, prit special header
-    if ($tab == GLOSSARY_APPROVAL_VIEW) {
+$PAGE->set_title(format_string($glossary->name));
+$PAGE->set_heading($course->fullname);
+$url = new moodle_url('/mod/glossary/view.php', array('id'=>$cm->id));
+if (isset($mode)) {
+    $url->param('mode', $mode);
+}
+$PAGE->set_url($url);
+
+if (!empty($CFG->enablerssfeeds) && !empty($CFG->glossary_enablerssfeeds)
+    && $glossary->rsstype && $glossary->rssarticles) {
+
+    $rsstitle = format_string($course->shortname, true, array('context' => get_context_instance(CONTEXT_COURSE, $course->id))) . ': %fullname%';
+    rss_add_http_header($context, 'mod_glossary', $glossary, $rsstitle);
+}
+
+if ($tab == GLOSSARY_APPROVAL_VIEW) {
         require_capability('mod/glossary:approve', $context);
-
-        $navigation = build_navigation($strwaitingapproval, $cm);
-        print_header_simple(format_string($glossary->name), "", $navigation, "", "", true,
-            update_module_button($cm->id, $course->id, $strglossary), navmenu($course, $cm));
-
-        print_heading($strwaitingapproval);
-    } else { /// Print standard header
-        $navigation = build_navigation('', $cm);
-        print_header_simple(format_string($glossary->name), "", $navigation, "", "", true,
-            update_module_button($cm->id, $course->id, $strglossary), navmenu($course, $cm));
-    }
+    $PAGE->navbar->add($strwaitingapproval);
+    echo $OUTPUT->header();
+    echo $OUTPUT->heading($strwaitingapproval);
+} else { /// Print standard header
+    echo $OUTPUT->header();
+}
 
 /// All this depends if whe have $showcommonelements
-    if ($showcommonelements) {
-    /// To calculate available options
+if ($showcommonelements) {
+/// To calculate available options
         $availableoptions = '';
 
-    /// Decide about to print the import link
-        if (has_capability('mod/glossary:import', $context)) {
+/// Decide about to print the import link
+    /*if (has_capability('mod/glossary:import', $context)) {
             $availableoptions = '<span class="helplink">' .
                                 '<a href="' . $CFG->wwwroot . '/mod/glossary/import.php?id=' . $cm->id . '"' .
                                 '  title="' . s(get_string('importentries', 'glossary')) . '">' .
                                 get_string('importentries', 'glossary') . '</a>' .
                                 '</span>';
         }
-    /// Decide about to print the export link
+/// Decide about to print the export link
         if (has_capability('mod/glossary:export', $context)) {
             if ($availableoptions) {
                 $availableoptions .= '&nbsp;/&nbsp;';
@@ -263,12 +285,12 @@
                                 '  title="' . s(get_string('exportentries', 'glossary')) . '">' .
                                 get_string('exportentries', 'glossary') . '</a>' .
                                 '</span>';
-        }
+    }*/
 
-    /// Decide about to print the approval link
+/// Decide about to print the approval link
         if (has_capability('mod/glossary:approve', $context)) {
         /// Check we have pending entries
-            if ($hiddenentries = count_records_select('glossary_entries',"glossaryid  = $glossary->id and approved = 0")) {
+        if ($hiddenentries = $DB->count_records('glossary_entries', array('glossaryid'=>$glossary->id, 'approved'=>0))) {
                 if ($availableoptions) {
                     $availableoptions .= '<br />';
                 }
@@ -281,60 +303,41 @@
             }
         }
 
-    /// Start to print glossary controls
+/// Start to print glossary controls
 //        print_box_start('glossarycontrol clearfix');
         echo '<div class="glossarycontrol" style="text-align: right">';
         echo $availableoptions;
 
-    /// If rss are activated at site and glossary level and this glossary has rss defined, show link
-        if (isset($CFG->enablerssfeeds) && isset($CFG->glossary_enablerssfeeds) &&
-            $CFG->enablerssfeeds && $CFG->glossary_enablerssfeeds && $glossary->rsstype && $glossary->rssarticles) {
-
-            $tooltiptext = get_string("rsssubscriberss","glossary",format_string($glossary->name,true));
-            if (empty($USER->id)) {
-                $userid = 0;
-            } else {
-                $userid = $USER->id;
-            }
-//            print_box_start('rsslink');
-            echo '<span class="wrap rsslink">';
-            rss_print_link($course->id, $userid, "glossary", $glossary->id, $tooltiptext);
-            echo '</span>';
-//            print_box_end();
-        }
-
-    /// The print icon
+/// The print icon
         if ( $showcommonelements and $mode != 'search') {
             if (has_capability('mod/glossary:manageentries', $context) or $glossary->allowprintview) {
 //                print_box_start('printicon');
                 echo '<span class="wrap printicon">';
-                echo " <a title =\"". get_string("printerfriendly","glossary") ."\" href=\"print.php?id=$cm->id&amp;mode=$mode&amp;hook=".urlencode($hook)."&amp;sortkey=$sortkey&amp;sortorder=$sortorder&amp;offset=$offset\"><img class=\"icon\" src=\"print.gif\" alt=\"". get_string("printerfriendly","glossary") . "\" /></a>";
+            echo " <a title =\"". get_string("printerfriendly","glossary") ."\" href=\"print.php?id=$cm->id&amp;mode=$mode&amp;hook=".urlencode($hook)."&amp;sortkey=$sortkey&amp;sortorder=$sortorder&amp;offset=$offset\"><img class=\"icon\" src=\"".$OUTPUT->pix_url('print', 'glossary')."\" alt=\"". get_string("printerfriendly","glossary") . "\" /></a>";
                 echo '</span>';
 //                print_box_end();
             }
         }
-    /// End glossary controls
+/// End glossary controls
 //        print_box_end(); /// glossarycontrol
         echo '</div>';
         
 //        print_box('&nbsp;', 'clearer');
-    }
+}
 
 /// Info box
-    if ( $glossary->intro && $showcommonelements ) {
-        $options = new stdclass;
-        $options->para = false;
-        print_box(format_text($glossary->intro, FORMAT_MOODLE, $options), 'generalbox', 'intro');
-    }
+if ($glossary->intro && $showcommonelements) {
+    echo $OUTPUT->box(format_module_intro('glossary', $glossary, $cm->id), 'generalbox', 'intro');
+}
 
 /// Search box
-    if ($showcommonelements ) {
-        echo '<form method="get" action="view.php">';
+if ($showcommonelements ) {
+    echo '<form method="post" action="view.php">';
 
         echo '<table class="boxaligncenter" width="70%" border="0">';
         echo '<tr><td align="center" class="glossarysearchbox">';
 
-        echo '<input type="submit" value="'.$strsearch.'" /> ';
+    echo '<input type="submit" value="'.$strsearch.'" name="searchbutton" /> ';
         if ($mode == 'search') {
             echo '<input type="text" name="hook" size="20" value="'.s($hook).'" alt="'.$strsearch.'" /> ';
         } else {
@@ -354,35 +357,32 @@
         echo '</form>';
 
         echo '<br />';
-    }
+}
 
 /// Show the add entry button if allowed
-    if (has_capability('mod/glossary:write', $context) && $showcommonelements ) {
+if (has_capability('mod/glossary:write', $context) && $showcommonelements ) {
         echo '<div class="singlebutton glossaryaddentry">';
         echo "<form id=\"newentryform\" method=\"get\" action=\"$CFG->wwwroot/mod/glossary/edit.php\">";
         echo '<div>';
-        echo "<input type=\"hidden\" name=\"id\" value=\"$cm->id\" />";
-        echo '<input type="submit" value="';
-        print_string('addentry', 'glossary');
-        echo '" />';
+    echo "<input type=\"hidden\" name=\"cmid\" value=\"$cm->id\" />";
+    echo '<input type="submit" value="'.get_string('addentry', 'glossary').'" />';
         echo '</div>';
         echo '</form>';
         echo "</div>\n";
-    }
+}
 
-    echo '<br />';
+echo '<br />';
 
-    include("tabs.php");
+require("tabs.php");
 
-    include_once("sql.php");
+require("sql.php");
 
 /// printing the entries
-    $entriesshown = 0;
-    $currentpivot = '';
-    $ratingsmenuused = NULL;
-    $paging = NULL;
+$entriesshown = 0;
+$currentpivot = '';
+$paging = NULL;
 
-    if ($allentries) {
+if ($allentries) {
 
         //Decide if we must show the ALL link in the pagebar
         $specialtext = '';
@@ -391,31 +391,29 @@
         }
 
         //Build paging bar
-        $paging = glossary_get_paging_bar($count, $page, $entriesbypage, "view.php?id=$id&amp;mode=$mode&amp;hook=$hook&amp;sortkey=$sortkey&amp;sortorder=$sortorder&amp;fullsearch=$fullsearch&amp;",9999,10,'&nbsp;&nbsp;', $specialtext, -1);
+    $paging = glossary_get_paging_bar($count, $page, $entriesbypage, "view.php?id=$id&amp;mode=$mode&amp;hook=".urlencode($hook)."&amp;sortkey=$sortkey&amp;sortorder=$sortorder&amp;fullsearch=$fullsearch&amp;",9999,10,'&nbsp;&nbsp;', $specialtext, -1);
 
         echo '<div class="paging">';
         echo $paging;
         echo '</div>';
 
-        $ratings = NULL;
-        $ratingsmenuused = false;
-        if ($glossary->assessed and isloggedin() and !isguestuser()) {
-            $ratings = new object();
-            if ($ratings->scale = make_grades_menu($glossary->scale)) {
-                $ratings->assesstimestart = $glossary->assesstimestart;
-                $ratings->assesstimefinish = $glossary->assesstimefinish;
-            }
-            if ($glossary->assessed == 2 and !has_capability('mod/glossary:rate', $context)) {
-                $ratings->allow = false;
-            } else {
-                $ratings->allow = true;
-            }
-            $formsent = 1;
-
-            echo "<form method=\"post\" action=\"rate.php\">";
-            echo "<div>";
-            echo "<input type=\"hidden\" name=\"glossaryid\" value=\"$glossary->id\" />";
-            echo "<input type=\"hidden\" name=\"sesskey\" value=\"".sesskey()."\" />";
+    //load ratings
+    require_once($CFG->dirroot.'/rating/lib.php');
+    if ($glossary->assessed != RATING_AGGREGATE_NONE) {
+        $ratingoptions = new stdClass;
+        $ratingoptions->context = $context;
+        $ratingoptions->component = 'mod_glossary';
+        $ratingoptions->ratingarea = 'entry';
+        $ratingoptions->items = $allentries;
+        $ratingoptions->aggregate = $glossary->assessed;//the aggregation method
+        $ratingoptions->scaleid = $glossary->scale;
+        $ratingoptions->userid = $USER->id;
+        $ratingoptions->returnurl = $CFG->wwwroot.'/mod/glossary/view.php?id='.$cm->id;
+        $ratingoptions->assesstimestart = $glossary->assesstimestart;
+        $ratingoptions->assesstimefinish = $glossary->assesstimefinish;
+
+        $rm = new rating_manager();
+        $allentries = $rm->get_ratings($ratingoptions);
         }
 
         foreach ($allentries as $entry) {
@@ -423,9 +421,11 @@
             // Setting the pivot for the current entry
             $pivot = $entry->glossarypivot;
             $upperpivot = $textlib->strtoupper($pivot);
+        $pivottoshow = $textlib->strtoupper(format_string($pivot, true, $fmtoptions));
             // Reduce pivot to 1cc if necessary
             if ( !$fullpivot ) {
                 $upperpivot = $textlib->substr($upperpivot, 0, 1);
+            $pivottoshow = $textlib->substr($pivottoshow, 0, 1);
             }
 
             // if there's a group break
@@ -439,27 +439,23 @@
                     echo '<table cellspacing="0" class="glossarycategoryheader">';
 
                     echo '<tr>';
-                    $pivottoshow = $currentpivot;
                     if ( isset($entry->userispivot) ) {
                     // printing the user icon if defined (only when browsing authors)
                         echo '<th align="left">';
 
-                        $user = get_record("user","id",$entry->userid);
-                        print_user_picture($user, $course->id, $user->picture);
+                    $user = $DB->get_record("user", array("id"=>$entry->userid));
+                    echo $OUTPUT->user_picture($user, array('courseid'=>$course->id));
                         $pivottoshow = fullname($user, has_capability('moodle/site:viewfullnames', get_context_instance(CONTEXT_COURSE, $course->id)));
                     } else {
                         echo '<th >';
                     }
 
-                    print_heading($pivottoshow);
+                echo $OUTPUT->heading($pivottoshow);
                     echo "</th></tr></table></div>\n";
 
                 }
             }
 
-            $concept = $entry->concept;
-            $definition = $entry->definition;
-
             /// highlight the term if necessary
             if ($mode == 'search') {
                 //We have to strip any word starting by + and take out words starting by -
@@ -481,47 +477,28 @@
             }
 
             /// and finally print the entry.
-
-            if ( glossary_print_entry($course, $cm, $glossary, $entry, $mode, $hook,1,$displayformat,$ratings) ) {
-                $ratingsmenuused = true;
-            }
-
+        glossary_print_entry($course, $cm, $glossary, $entry, $mode, $hook,1,$displayformat);
             $entriesshown++;
         }
-    }
-    if ( !$entriesshown ) {
-        print_simple_box('<div style="text-align:center">' . get_string("noentries","glossary") . '</div>',"center","95%");
-    }
-
-
-    if ($ratingsmenuused) {
-
-        echo "<div class=\"boxaligncenter\"><input type=\"submit\" value=\"".get_string("sendinratings", "glossary")."\" />";
-        if ($glossary->scale < 0) {
-            if ($scale = get_record("scale", "id", abs($glossary->scale))) {
-                print_scale_menu_helpbutton($course->id, $scale );
-            }
-        }
-        echo "</div>";
-    }
+}
+if ( !$entriesshown ) {
+    echo $OUTPUT->box(get_string("noentries","glossary"), "generalbox boxaligncenter boxwidthwide");
+}
 
-    if (!empty($formsent)) {
+if (!empty($formsent)) {
         // close the form properly if used
         echo "</div>";
         echo "</form>";
-    }
+}
 
-    if ( $paging ) {
+if ( $paging ) {
         echo '<hr />';
         echo '<div class="paging">';
         echo $paging;
         echo '</div>';
-    }
-    echo '<br />';
-    glossary_print_tabbed_table_end();
+}
+echo '<br />';
+glossary_print_tabbed_table_end();
 
 /// Finish the page
-
-    print_footer($course);
-
-?>
+echo $OUTPUT->footer();
