diff --git a/mod/glossary/print.php b/mod/glossary/print.php
index 355b218..013c70e 100644
--- a/mod/glossary/print.php
+++ b/mod/glossary/print.php
@@ -1,50 +1,78 @@
-<?php   // $Id$
-
-    global $CFG;
-
-    require_once("../../config.php");
-    require_once("lib.php");
-
-    $id            = required_param('id', PARAM_INT);                     // Course Module ID
-    $sortorder     = optional_param('sortorder', 'asc', PARAM_ALPHA);     // Sorting order
-    $offset        = optional_param('offset', 0, PARAM_INT);              // number of entries to bypass
-    $displayformat = optional_param('displayformat',-1, PARAM_INT);
-
-    $mode    = required_param('mode', PARAM_ALPHA);             // mode to show the entries
-    $hook    = optional_param('hook','ALL', PARAM_ALPHANUM);   // what to show
-    $sortkey = optional_param('sortkey','UPDATE', PARAM_ALPHA); // Sorting key
-
-    if (! $cm = get_coursemodule_from_id('glossary', $id)) {
-        error("Course Module ID was incorrect");
-    }
-
-    if (! $course = get_record("course", "id", $cm->course)) {
-        error("Course is misconfigured");
-    }
-
-    if (! $glossary = get_record("glossary", "id", $cm->instance)) {
-        error("Course module is incorrect");
-    }
-
-    if ( !$entriesbypage = $glossary->entbypage ) {
+<?php
+
+global $CFG;
+
+require_once("../../config.php");
+require_once("lib.php");
+
+$id            = required_param('id', PARAM_INT);                     // Course Module ID
+$sortorder     = optional_param('sortorder', 'asc', PARAM_ALPHA);     // Sorting order
+$offset        = optional_param('offset', 0, PARAM_INT);              // number of entries to bypass
+$displayformat = optional_param('displayformat',-1, PARAM_INT);
+
+$mode    = required_param('mode', PARAM_ALPHA);             // mode to show the entries
+$hook    = optional_param('hook','ALL', PARAM_ALPHANUM);   // what to show
+$sortkey = optional_param('sortkey','UPDATE', PARAM_ALPHA); // Sorting key
+
+$url = new moodle_url('/mod/glossary/print.php', array('id'=>$id));
+if ($sortorder !== 'asc') {
+    $url->param('sortorder', $sortorder);
+}
+if ($offset !== 0) {
+    $url->param('offset', $offset);
+}
+if ($displayformat !== -1) {
+    $url->param('displayformat', $displayformat);
+}
+if ($sortkey !== 'UPDATE') {
+    $url->param('sortkey', $sortkey);
+}
+if ($mode !== 'letter') {
+    $url->param('mode', $mode);
+}
+if ($hook !== 'ALL') {
+    $url->param('hook', $hook);
+}
+$PAGE->set_url($url);
+
+if (! $cm = get_coursemodule_from_id('glossary', $id)) {
+    print_error('invalidcoursemodule');
+}
+
+if (! $course = $DB->get_record("course", array("id"=>$cm->course))) {
+    print_error('coursemisconf');
+}
+
+if (! $glossary = $DB->get_record("glossary", array("id"=>$cm->instance))) {
+    print_error('invalidid', 'glossary');
+}
+
+if ( !$entriesbypage = $glossary->entbypage ) {
         $entriesbypage = $CFG->glossary_entbypage;
-    }
+}
+
+require_course_login($course, true, $cm);
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
 
-    require_course_login($course, true, $cm);
-    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
+// Prepare format_string/text options
+$fmtoptions = array(
+    'context' => $context);
 
-    print_header();
+$PAGE->set_pagelayout('print');
+$PAGE->set_title(get_string("modulenameplural", "glossary"));
+$PAGE->set_heading($course->fullname);
+echo $OUTPUT->header();
 
 /// Loading the textlib singleton instance. We are going to need it.
-    $textlib = textlib_get_instance();
+$textlib = textlib_get_instance();
 
-    if (!has_capability('mod/glossary:manageentries', $context) and !$glossary->allowprintview) {
+if (!has_capability('mod/glossary:manageentries', $context) and !$glossary->allowprintview) {
         notice(get_string('printviewnotallowed', 'glossary'));
-    }
+}
 
 /// setting the default values for the display mode of the current glossary
 /// only if the glossary is viewed by the first time
-    if ( $dp = get_record('glossary_formats','name', addslashes($glossary->displayformat)) ) {
+if ( $dp = $DB->get_record('glossary_formats', array('name'=>$glossary->displayformat)) ) {
         $printpivot = $dp->showgroup;
         if ( $mode == '' and $hook == '' and $show == '') {
             $mode      = $dp->defaultmode;
@@ -52,25 +80,25 @@
             $sortkey   = $dp->sortkey;
             $sortorder = $dp->sortorder;
         }
-    } else {
+} else {
         $printpivot = 1;
         if ( $mode == '' and $hook == '' and $show == '') {
             $mode = 'letter';
             $hook = 'ALL';
         }
-    }
+}
 
-    if ( $displayformat == -1 ) {
+if ( $displayformat == -1 ) {
          $displayformat = $glossary->displayformat;
-    }
+}
 
 /// stablishing flag variables
-    if ( $sortorder = strtolower($sortorder) ) {
+if ( $sortorder = strtolower($sortorder) ) {
         if ($sortorder != 'asc' and $sortorder != 'desc') {
             $sortorder = '';
         }
-    }
-    if ( $sortkey = strtoupper($sortkey) ) {
+}
+if ( $sortkey = strtoupper($sortkey) ) {
         if ($sortkey != 'CREATION' and
             $sortkey != 'UPDATE' and
             $sortkey != 'FIRSTNAME' and
@@ -78,32 +106,32 @@
             ) {
             $sortkey = '';
         }
-    }
+}
 
-    switch ( $mode = strtolower($mode) ) {
-    case 'entry':  /// Looking for a certain entry id
+switch ( $mode = strtolower($mode) ) {
+case 'entry':  /// Looking for a certain entry id
         $tab = GLOSSARY_STANDARD_VIEW;
-    break;
+break;
 
-    case 'cat':    /// Looking for a certain cat
+case 'cat':    /// Looking for a certain cat
         $tab = GLOSSARY_CATEGORY_VIEW;
         if ( $hook > 0 ) {
-            $category = get_record("glossary_categories","id",$hook);
+        $category = $DB->get_record("glossary_categories", array("id"=>$hook));
         }
-    break;
+break;
 
-    case 'approval':    /// Looking for entries waiting for approval
+case 'approval':    /// Looking for entries waiting for approval
         $tab = GLOSSARY_APPROVAL_VIEW;
         if ( !$hook and !$sortkey and !$sortorder) {
             $hook = 'ALL';
         }
-    break;
+break;
 
-    case 'term':   /// Looking for entries that include certain term in its concept, definition or aliases
+case 'term':   /// Looking for entries that include certain term in its concept, definition or aliases
         $tab = GLOSSARY_STANDARD_VIEW;
-    break;
+break;
 
-    case 'date':
+case 'date':
         $tab = GLOSSARY_DATE_VIEW;
         if ( !$sortkey ) {
             $sortkey = 'UPDATE';
@@ -111,9 +139,9 @@
         if ( !$sortorder ) {
             $sortorder = 'desc';
         }
-    break;
+break;
 
-    case 'author':  /// Looking for entries, browsed by author
+case 'author':  /// Looking for entries, browsed by author
         $tab = GLOSSARY_AUTHOR_VIEW;
         if ( !$hook ) {
             $hook = 'ALL';
@@ -124,39 +152,41 @@
         if ( !$sortorder ) {
             $sortorder = 'asc';
         }
-    break;
+break;
 
-    case 'letter':  /// Looking for entries that begin with a certain letter, ALL or SPECIAL characters
-    default:
+case 'letter':  /// Looking for entries that begin with a certain letter, ALL or SPECIAL characters
+default:
         $tab = GLOSSARY_STANDARD_VIEW;
         if ( !$hook ) {
             $hook = 'ALL';
         }
-    break;
-    }
+break;
+}
 
-    include_once("sql.php");
+include_once("sql.php");
 
-    $entriesshown = 0;
-    $currentpivot = '';
-    if ( $hook == 'SPECIAL' ) {
+$entriesshown = 0;
+$currentpivot = '';
+if ( $hook == 'SPECIAL' ) {
         $alphabet = explode(",", get_string("alphabet"));
-    }
-
-    $site = get_record("course","id",1);
-    echo '<p style="text-align:right"><span style="font-size:0.75em">' . userdate(time()) . '</span></p>';
-    echo get_string("site") . ': <strong>' . format_string($site->fullname) . '</strong><br />';
-    echo get_string("course") . ': <strong>' . format_string($course->fullname) . ' ('. format_string($course->shortname) . ')</strong><br />';
-    echo get_string("modulename","glossary") . ': <strong>' . format_string($glossary->name, true) . '</strong>';
-    if ( $allentries ) {
+}
+
+$site = $DB->get_record("course", array("id"=>1));
+echo '<p style="text-align:right"><span style="font-size:0.75em">' . userdate(time()) . '</span></p>';
+echo get_string("site") . ': <strong>' . format_string($site->fullname) . '</strong><br />';
+echo get_string("course") . ': <strong>' . format_string($course->fullname) . ' ('. format_string($course->shortname) . ')</strong><br />';
+echo get_string("modulename","glossary") . ': <strong>' . format_string($glossary->name, true) . '</strong>';
+if ( $allentries ) {
         foreach ($allentries as $entry) {
 
             // Setting the pivot for the current entry
             $pivot = $entry->glossarypivot;
             $upperpivot = $textlib->strtoupper($pivot);
+        $pivottoshow = $textlib->strtoupper(format_string($pivot, true, $fmtoptions));
             // Reduce pivot to 1cc if necessary
             if ( !$fullpivot ) {
                 $upperpivot = $textlib->substr($upperpivot, 0, 1);
+            $pivottoshow = $textlib->substr($pivottoshow, 0, 1);
             }            
             
             // If there's  group break
@@ -166,10 +196,9 @@
                 if ( $printpivot )  {
                     $currentpivot = $upperpivot;
 
-                    $pivottoshow = $currentpivot;
                     if ( isset($entry->userispivot) ) {
                         // printing the user icon if defined (only when browsing authors)
-                        $user = get_record("user","id",$entry->userid);
+                    $user = $DB->get_record("user", array("id"=>$entry->userid));
                         $pivottoshow = fullname($user);
                     }
 
@@ -179,7 +208,6 @@
 
             glossary_print_entry($course, $cm, $glossary, $entry, $mode, $hook,1,$displayformat,false,true);
         }
-    }
+}
 
-    print_footer('empty');
-?>
+echo $OUTPUT->footer();
