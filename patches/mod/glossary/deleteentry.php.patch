diff --git a/mod/glossary/deleteentry.php b/mod/glossary/deleteentry.php
index e3a8ab0..e02f291 100644
--- a/mod/glossary/deleteentry.php
+++ b/mod/glossary/deleteentry.php
@@ -1,92 +1,133 @@
-<?php // $Id$
+<?php
+
+require_once("../../config.php");
+require_once("lib.php");
+
+$id       = required_param('id', PARAM_INT);          // course module ID
+$confirm  = optional_param('confirm', 0, PARAM_INT);  // commit the operation?
+$entry    = optional_param('entry', 0, PARAM_INT);    // entry id
+$prevmode = required_param('prevmode', PARAM_ALPHA);
+$hook     = optional_param('hook', '', PARAM_CLEAN);
+
+$url = new moodle_url('/mod/glossary/deleteentry.php', array('id'=>$id,'prevmode'=>$prevmode));
+if ($confirm !== 0) {
+    $url->param('confirm', $confirm);
+}
+if ($entry !== 0) {
+    $url->param('entry', $entry);
+}
+if ($hook !== '') {
+    $url->param('hook', $hook);
+}
+$PAGE->set_url($url);
+
+$strglossary   = get_string("modulename", "glossary");
+$strglossaries = get_string("modulenameplural", "glossary");
+$stredit       = get_string("edit");
+$entrydeleted  = get_string("entrydeleted","glossary");
+
+
+if (! $cm = get_coursemodule_from_id('glossary', $id)) {
+    print_error("invalidcoursemodule");
+}
+
+if (! $course = $DB->get_record("course", array("id"=>$cm->course))) {
+    print_error('coursemisconf');
+}
+
+if (! $entry = $DB->get_record("glossary_entries", array("id"=>$entry))) {
+    print_error('invalidentry');
+}
+
+require_login($course->id, false, $cm);
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
+$manageentries = has_capability('mod/glossary:manageentries', $context);
+
+if (! $glossary = $DB->get_record("glossary", array("id"=>$cm->instance))) {
+    print_error('invalidid', 'glossary');
+}
+
+
+$strareyousuredelete = get_string("areyousuredelete","glossary");
+
+if (($entry->userid != $USER->id) and !$manageentries) { // guest id is never matched, no need for special check here
+    print_error('nopermissiontodelentry');
+}
+$ineditperiod = ((time() - $entry->timecreated <  $CFG->maxeditingtime) || $glossary->editalways);
+if (!$ineditperiod and !$manageentries) {
+    print_error('errdeltimeexpired', 'glossary');
+}
 
-    require_once("../../config.php");
-    require_once("lib.php");
-
-    $id      = required_param('id', PARAM_INT);          // course module ID
-    $confirm = optional_param('confirm', 0, PARAM_INT);  // commit the operation?
-    $entry   = optional_param('entry', 0, PARAM_INT);    // entry id
-
-    $prevmode = required_param('prevmode');
-    $hook = optional_param('hook', '', PARAM_CLEAN);
-
-    $strglossary = get_string("modulename", "glossary");
-    $strglossaries = get_string("modulenameplural", "glossary");
-    $stredit = get_string("edit");
-    $entrydeleted = get_string("entrydeleted","glossary");
-
-
-    if (! $cm = get_coursemodule_from_id('glossary', $id)) {
-        error("Course Module ID was incorrect");
-    }
-
-    if (! $course = get_record("course", "id", $cm->course)) {
-        error("Course is misconfigured");
-    }
-
-    if (! $entry = get_record("glossary_entries","id", $entry)) {
-        error("Entry ID was incorrect");
-    }
+/// If data submitted, then process and store.
 
-    require_login($course->id, false, $cm);
-    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
-    $manageentries = has_capability('mod/glossary:manageentries', $context); 
+if ($confirm and confirm_sesskey()) { // the operation was confirmed.
+    // if it is an imported entry, just delete the relation
     
-    if (! $glossary = get_record("glossary", "id", $cm->instance)) {
-        error("Glossary is incorrect");
+    if ($entry->sourceglossaryid) {
+        if (!$newcm = get_coursemodule_from_instance('glossary', $entry->sourceglossaryid)) {
+            print_error('invalidcoursemodule');
     }
+        $newcontext = get_context_instance(CONTEXT_MODULE, $newcm->id);
 
+        $entry->glossaryid       = $entry->sourceglossaryid;
+        $entry->sourceglossaryid = 0;
+        $DB->update_record('glossary_entries', $entry);
 
-    $strareyousuredelete = get_string("areyousuredelete","glossary");
-
-    $navigation = build_navigation('', $cm);
-    print_header_simple(format_string($glossary->name), "", $navigation,
-                  "", "", true, update_module_button($cm->id, $course->id, $strglossary),
-                  navmenu($course, $cm));
+        // move attachments too
+        $fs = get_file_storage();
 
-    if (($entry->userid != $USER->id) and !$manageentries) { // guest id is never matched, no need for special check here
-        error("You can't delete other people's entries!");
-    }
-    $ineditperiod = ((time() - $entry->timecreated <  $CFG->maxeditingtime) || $glossary->editalways);
-    if (!$ineditperiod and !$manageentries) {
-        error("You can't delete this. Time expired!");
+        if ($oldfiles = $fs->get_area_files($context->id, 'mod_glossary', 'attachment', $entry->id)) {
+            foreach ($oldfiles as $oldfile) {
+                $file_record = new stdClass();
+                $file_record->contextid = $newcontext->id;
+                $fs->create_file_from_storedfile($file_record, $oldfile);
     }
-
-/// If data submitted, then process and store.
-
-    if ($confirm) { // the operation was confirmed.
-        // if it is an imported entry, just delete the relation
-
-        if ( $entry->sourceglossaryid ) {
-            $dbentry = new stdClass;
-            $dbentry->id = $entry->id;
-            $dbentry->glossaryid = $entry->sourceglossaryid;
-            $dbentry->sourceglossaryid = 0;
-            if (! update_record('glossary_entries', $dbentry)) {
-                error("Could not update your glossary");
+            $fs->delete_area_files($context->id, 'mod_glossary', 'attachment', $entry->id);
+            $entry->attachment = '1';
+        } else {
+            $entry->attachment = '0';
             }
+        $DB->update_record('glossary_entries', $entry);
 
         } else {
-            if ( $entry->attachment ) {
-                glossary_delete_old_attachments($entry);
-            }
-            delete_records("glossary_comments", "entryid",$entry->id);
-            delete_records("glossary_alias", "entryid", $entry->id);
-            delete_records("glossary_ratings", "entryid", $entry->id);
-            delete_records("glossary_entries","id", $entry->id);
+        $fs = get_file_storage();
+        $fs->delete_area_files($context->id, 'mod_glossary', 'attachment', $entry->id);
+        $DB->delete_records("comments", array('itemid'=>$entry->id, 'commentarea'=>'glossary_entry', 'contextid'=>$context->id));
+        $DB->delete_records("glossary_alias", array("entryid"=>$entry->id));
+        $DB->delete_records("glossary_entries", array("id"=>$entry->id));
+
+        // Update completion state
+        $completion = new completion_info($course);
+        if ($completion->is_enabled($cm) == COMPLETION_TRACKING_AUTOMATIC && $glossary->completionentries) {
+            $completion->update_state($cm, COMPLETION_INCOMPLETE, $entry->userid);
         }
 
-        add_to_log($course->id, "glossary", "delete entry", "view.php?id=$cm->id&amp;mode=$prevmode&amp;hook=$hook", $entry->id,$cm->id);
-        redirect("view.php?id=$cm->id&amp;mode=$prevmode&amp;hook=$hook", $entrydeleted);
-
-    } else {        // the operation has not been confirmed yet so ask the user to do so
-
-        notice_yesno("<b>".format_string($entry->concept)."</b><p>$strareyousuredelete</p>",
-                      "deleteentry.php?id=$cm->id&amp;mode=delete&amp;confirm=1&amp;entry=".s($entry->id)."&amp;prevmode=$prevmode&amp;hook=$hook",
-                      "view.php?id=$cm->id&amp;mode=$prevmode&amp;hook=$hook");
-
+        //delete glossary entry ratings
+        require_once($CFG->dirroot.'/rating/lib.php');
+        $delopt = new stdClass;
+        $delopt->contextid = $context->id;
+        $delopt->component = 'mod_glossary';
+        $delopt->ratingarea = 'entry';
+        $delopt->itemid = $entry->id;
+        $rm = new rating_manager();
+        $rm->delete_ratings($delopt);
     }
 
-    print_footer($course);
-
-?>
+    add_to_log($course->id, "glossary", "delete entry", "view.php?id=$cm->id&amp;mode=$prevmode&amp;hook=$hook", $entry->id,$cm->id);
+    redirect("view.php?id=$cm->id&amp;mode=$prevmode&amp;hook=$hook");
+
+} else {        // the operation has not been confirmed yet so ask the user to do so
+    $PAGE->navbar->add(get_string('delete'));
+    $PAGE->set_title(format_string($glossary->name));
+    $PAGE->set_heading($course->fullname);
+    echo $OUTPUT->header();
+    $areyousure = "<b>".format_string($entry->concept)."</b><p>$strareyousuredelete</p>";
+    $linkyes    = 'deleteentry.php';
+    $linkno     = 'view.php';
+    $optionsyes = array('id'=>$cm->id, 'entry'=>$entry->id, 'confirm'=>1, 'sesskey'=>sesskey(), 'prevmode'=>$prevmode, 'hook'=>$hook);
+    $optionsno  = array('id'=>$cm->id, 'mode'=>$prevmode, 'hook'=>$hook);
+
+    echo $OUTPUT->confirm($areyousure, new moodle_url($linkyes, $optionsyes), new moodle_url($linkno, $optionsno));
+
+    echo $OUTPUT->footer();
+}
