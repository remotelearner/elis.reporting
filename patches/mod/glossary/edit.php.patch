diff --git a/mod/glossary/edit.php b/mod/glossary/edit.php
index c3ee5d5..d69ae54 100644
--- a/mod/glossary/edit.php
+++ b/mod/glossary/edit.php
@@ -1,219 +1,192 @@
-<?php // $Id$
+<?php
 
 require_once('../../config.php');
 require_once('lib.php');
 require_once('edit_form.php');
 
-global $CFG, $USER;
+$cmid = required_param('cmid', PARAM_INT);            // Course Module ID
+$id   = optional_param('id', 0, PARAM_INT);           // EntryID
 
-$id = required_param('id', PARAM_INT);                // Course Module ID
-$e  = optional_param('e', 0, PARAM_INT);              // EntryID
-$confirm = optional_param('confirm',0, PARAM_INT);    // proceed. Edit the edtry
-
-$mode = optional_param('mode', '', PARAM_ALPHA);      // categories if by category?
-$hook = optional_param('hook', '', PARAM_ALPHANUM);   // CategoryID
-
-if (! $cm = get_coursemodule_from_id('glossary', $id)) {
-    error("Course Module ID was incorrect");
+if (!$cm = get_coursemodule_from_id('glossary', $cmid)) {
+    print_error('invalidcoursemodule');
 }
 
-$context = get_context_instance(CONTEXT_MODULE, $cm->id);
-
-if (! $course = get_record("course", "id", $cm->course)) {
-    error("Course is misconfigured");
+if (!$course = $DB->get_record('course', array('id'=>$cm->course))) {
+    print_error('coursemisconf');
 }
 
-require_login($course->id, false, $cm);
+require_login($course, false, $cm);
 
-if ( isguest() ) {
-    error("Guests are not allowed to edit glossaries", $_SERVER["HTTP_REFERER"]);
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
+
+if (!$glossary = $DB->get_record('glossary', array('id'=>$cm->instance))) {
+    print_error('invalidid', 'glossary');
 }
 
-if (! $glossary = get_record("glossary", "id", $cm->instance)) {
-    error("Course module is incorrect");
+$url = new moodle_url('/mod/glossary/edit.php', array('cmid'=>$cm->id));
+if (!empty($id)) {
+    $url->param('id', $id);
 }
+$PAGE->set_url($url);
 
+if ($id) { // if entry is specified
+    if (isguestuser()) {
+        print_error('guestnoedit', 'glossary', "$CFG->wwwroot/mod/glossary/view.php?id=$cmid");
+    }
 
-if ($e) { // if entry is specified
-    if (!$entry  = get_record("glossary_entries", "id", $e)) {
-        error("Incorrect entry id");
+    if (!$entry = $DB->get_record('glossary_entries', array('id'=>$id, 'glossaryid'=>$glossary->id))) {
+        print_error('invalidentry');
     }
+
     $ineditperiod = ((time() - $entry->timecreated <  $CFG->maxeditingtime) || $glossary->editalways);
     if (!has_capability('mod/glossary:manageentries', $context) and !($entry->userid == $USER->id and ($ineditperiod and has_capability('mod/glossary:write', $context)))) {
-        //expired edit time is the most probable cause here
-        print_error('erredittimeexpired', 'glossary', "view.php?id=$cm->id&amp;mode=entry&amp;hook=$e");
+        if ($USER->id != $fromdb->userid) {
+            print_error('errcannoteditothers', 'glossary', "view.php?id=$cm->id&amp;mode=entry&amp;hook=$id");
+        } elseif (!$ineditperiod) {
+            print_error('erredittimeexpired', 'glossary', "view.php?id=$cm->id&amp;mode=entry&amp;hook=$id");
     }
+    }
+
+    //prepare extra data
+    if ($aliases = $DB->get_records_menu("glossary_alias", array("entryid"=>$id), '', 'id, alias')) {
+        $entry->aliases = implode("\n", $aliases) . "\n";
+    }
+    if ($categoriesarr = $DB->get_records_menu("glossary_entries_categories", array('entryid'=>$id), '', 'id, categoryid')) {
+        // TODO: this fetches cats from both main and secondary glossary :-(
+        $entry->categories = array_values($categoriesarr);
+    }
+
 } else { // new entry
     require_capability('mod/glossary:write', $context);
+    // note: guest user does not have any write capability
+    $entry = new stdClass();
+    $entry->id = null;
 }
 
-$mform =& new mod_glossary_entry_form(null, compact('cm', 'glossary', 'hook', 'mode', 'e', 'context'));
+$maxfiles = 99;                // TODO: add some setting
+$maxbytes = $course->maxbytes; // TODO: add some setting
+
+$definitionoptions = array('trusttext'=>true, 'subdirs'=>false, 'maxfiles'=>$maxfiles, 'maxbytes'=>$maxbytes, 'context'=>$context);
+$attachmentoptions = array('subdirs'=>false, 'maxfiles'=>$maxfiles, 'maxbytes'=>$maxbytes);
+
+$entry = file_prepare_standard_editor($entry, 'definition', $definitionoptions, $context, 'mod_glossary', 'entry', $entry->id);
+$entry = file_prepare_standard_filemanager($entry, 'attachment', $attachmentoptions, $context, 'mod_glossary', 'attachment', $entry->id);
+
+$entry->cmid = $cm->id;
+
+// create form and set initial data
+$mform = new mod_glossary_entry_form(null, array('current'=>$entry, 'cm'=>$cm, 'glossary'=>$glossary,
+                                                 'definitionoptions'=>$definitionoptions, 'attachmentoptions'=>$attachmentoptions));
+
 if ($mform->is_cancelled()){
-    if ($e){
-        redirect("view.php?id=$cm->id&amp;mode=entry&amp;hook=$e");
+    if ($id){
+        redirect("view.php?id=$cm->id&mode=entry&hook=$id");
     } else {
         redirect("view.php?id=$cm->id");
     }
 
-} elseif ($fromform = $mform->get_data()) {
-    trusttext_after_edit($fromform->definition, $context);
-
-    if ( !isset($fromform->usedynalink) ) {
-        $fromform->usedynalink = 0;
-    }
-    if ( !isset($fromform->casesensitive) ) {
-        $fromform->casesensitive = 0;
-    }
-    if ( !isset($fromform->fullmatch) ) {
-        $fromform->fullmatch = 0;
-    }
+} else if ($entry = $mform->get_data()) {
     $timenow = time();
 
-    $todb = new object();
-    $todb->course = $glossary->course;
-    $todb->glossaryid = $glossary->id;
+    $categories = empty($entry->categories) ? array() : $entry->categories;
+    unset($entry->categories);
+    $aliases = trim($entry->aliases);
+    unset($entry->aliases);
 
-    $todb->concept = trim($fromform->concept);
-    $todb->definition = $fromform->definition;
-    $todb->format = $fromform->format;
-    $todb->usedynalink = $fromform->usedynalink;
-    $todb->casesensitive = $fromform->casesensitive;
-    $todb->fullmatch = $fromform->fullmatch;
-    $todb->timemodified = $timenow;
-    $todb->approved = 0;
-    $todb->aliases = "";
-    if ( $glossary->defaultapproval or has_capability('mod/glossary:approve', $context) ) {
-        $todb->approved = 1;
+    if (empty($entry->id)) {
+        $entry->glossaryid       = $glossary->id;
+        $entry->timecreated      = $timenow;
+        $entry->userid           = $USER->id;
+        $entry->timecreated      = $timenow;
+        $entry->sourceglossaryid = 0;
+        $entry->teacherentry     = has_capability('mod/glossary:manageentries', $context);
     }
 
-    if ($e) {
-        $todb->id = $e;
-        $dir = glossary_file_area_name($todb);
-        if ($mform->save_files($dir) and $newfilename = $mform->get_new_filename()) {
-            $todb->attachment = $newfilename;
-        }
+    $entry->concept          = trim($entry->concept);
+    $entry->definition       = '';          // updated later
+    $entry->definitionformat = FORMAT_HTML; // updated later
+    $entry->definitiontrust  = 0;           // updated later
+    $entry->timemodified     = $timenow;
+    $entry->approved         = 0;
+    $entry->usedynalink      = isset($entry->usedynalink) ?   $entry->usedynalink : 0;
+    $entry->casesensitive    = isset($entry->casesensitive) ? $entry->casesensitive : 0;
+    $entry->fullmatch        = isset($entry->fullmatch) ?     $entry->fullmatch : 0;
 
-        if (update_record('glossary_entries', $todb)) {
-            add_to_log($course->id, "glossary", "update entry",
-                       "view.php?id=$cm->id&amp;mode=entry&amp;hook=$todb->id",
-                       $todb->id, $cm->id);
-        } else {
-            error("Could not update your glossary");
+    if ($glossary->defaultapproval or has_capability('mod/glossary:approve', $context)) {
+        $entry->approved = 1;
         }
-    } else {
-
-        $todb->userid = $USER->id;
-        $todb->timecreated = $timenow;
-        $todb->sourceglossaryid = 0;
-        $todb->teacherentry = has_capability('mod/glossary:manageentries', $context);
 
+    if (empty($entry->id)) {
+        //new entry
+        $entry->id = $DB->insert_record('glossary_entries', $entry);
 
-        if ($todb->id = insert_record("glossary_entries", $todb)) {
-            $e = $todb->id;
-            $dir = glossary_file_area_name($todb);
-            if ($mform->save_files($dir) and $newfilename = $mform->get_new_filename()) {
-                set_field("glossary_entries", "attachment", $newfilename, "id", $todb->id);
+        // Update completion state
+        $completion = new completion_info($course);
+        if ($completion->is_enabled($cm) == COMPLETION_TRACKING_AUTOMATIC && $glossary->completionentries && $entry->approved) {
+            $completion->update_state($cm, COMPLETION_COMPLETE);
             }
+
             add_to_log($course->id, "glossary", "add entry",
-                       "view.php?id=$cm->id&amp;mode=entry&amp;hook=$todb->id", $todb->id,$cm->id);
+                   "view.php?id=$cm->id&amp;mode=entry&amp;hook=$entry->id", $entry->id, $cm->id);
+
         } else {
-            error("Could not insert this new entry");
+        //existing entry
+        $DB->update_record('glossary_entries', $entry);
+        add_to_log($course->id, "glossary", "update entry",
+                   "view.php?id=$cm->id&amp;mode=entry&amp;hook=$entry->id",
+                   $entry->id, $cm->id);
         }
 
-    }
+    // save and relink embedded images and save attachments
+    $entry = file_postupdate_standard_editor($entry, 'definition', $definitionoptions, $context, 'mod_glossary', 'entry', $entry->id);
+    $entry = file_postupdate_standard_filemanager($entry, 'attachment', $attachmentoptions, $context, 'mod_glossary', 'attachment', $entry->id);
 
-    delete_records("glossary_entries_categories", "entryid", $e);
-    delete_records("glossary_alias", "entryid", $e);
+    // store the updated value values
+    $DB->update_record('glossary_entries', $entry);
 
-    if (empty($fromform->notcategorised) && isset($fromform->categories)) {
-        $newcategory->entryid = $e;
-        foreach ($fromform->categories as $category) {
-            if ( $category > 0 ) {
-                $newcategory->categoryid = $category;
-                insert_record("glossary_entries_categories", $newcategory, false);
-            } else {
-                break;
-            }
+    //refetch complete entry
+    $entry = $DB->get_record('glossary_entries', array('id'=>$entry->id));
+
+    // update entry categories
+    $DB->delete_records('glossary_entries_categories', array('entryid'=>$entry->id));
+    // TODO: this deletes cats from both both main and secondary glossary :-(
+    if (!empty($categories) and array_search(0, $categories) === false) {
+        foreach ($categories as $catid) {
+            $newcategory = new stdClass();
+            $newcategory->entryid    = $entry->id;
+            $newcategory->categoryid = $catid;
+            $DB->insert_record('glossary_entries_categories', $newcategory, false);
         }
     }
-    if ( isset($fromform->aliases) ) {
-        if ( $aliases = explode("\n", $fromform->aliases) ) {
+
+    // update aliases
+    $DB->delete_records('glossary_alias', array('entryid'=>$entry->id));
+    if ($aliases !== '') {
+        $aliases = explode("\n", $aliases);
             foreach ($aliases as $alias) {
                 $alias = trim($alias);
-                if ($alias) {
-                    unset($newalias);
-                    $newalias->entryid = $e;
+            if ($alias !== '') {
+                $newalias = new stdClass();
+                $newalias->entryid = $entry->id;
                     $newalias->alias = $alias;
-                    insert_record("glossary_alias", $newalias, false);
-                }
+                $DB->insert_record('glossary_alias', $newalias, false);
             }
         }
     }
-    redirect("view.php?id=$cm->id&amp;mode=entry&amp;hook=$todb->id");
-
-} else {
-    if ($e) {
-        $fromdb = get_record("glossary_entries", "id", $e);
-
-        $toform = new object();
 
-        if ($categoriesarr = get_records_menu("glossary_entries_categories", "entryid", $e, '', 'id, categoryid')){
-            $toform->categories = array_values($categoriesarr);
-        } else {
-            $toform->categories = array(0);
-        }
-        $toform->concept = $fromdb->concept;
-        $toform->definition = $fromdb->definition;
-        $toform->format = $fromdb->format;
-        trusttext_prepare_edit($toform->definition, $toform->format, can_use_html_editor(), $context);
-        $toform->approved = $glossary->defaultapproval or has_capability('mod/glossary:approve', $context);
-        $toform->usedynalink = $fromdb->usedynalink;
-        $toform->casesensitive = $fromdb->casesensitive;
-        $toform->fullmatch = $fromdb->fullmatch;
-        $toform->aliases = '';
-        $ineditperiod = ((time() - $fromdb->timecreated <  $CFG->maxeditingtime) || $glossary->editalways);
-        if ((!$ineditperiod  || $USER->id != $fromdb->userid) and !has_capability('mod/glossary:manageentries', $context)) {
-            if ( $USER->id != $fromdb->userid ) {
-                print_error('errcannoteditothers', 'glossary');
-            } elseif (!$ineditperiod) {
-                print_error('erredittimeexpired', 'glossary');
-            }
-            die;
-        }
-
-        if ( $aliases = get_records_menu("glossary_alias", "entryid", $e, '', 'id, alias') ) {
-            $toform->aliases = implode("\n", $aliases) . "\n";
-        }
-        $mform->set_data($toform);
-    }
+    redirect("view.php?id=$cm->id&mode=entry&hook=$entry->id");
 }
 
-$stredit = empty($e) ? get_string('addentry', 'glossary') : get_string("edit");
-$navigation = build_navigation($stredit, $cm);
-print_header_simple(format_string($glossary->name), "", $navigation, "",
-              "", true, "", navmenu($course, $cm));
-
-print_heading(format_string($glossary->name));
-
-/// Info box
-
-///if ( $glossary->intro ) {
-///    print_simple_box(format_text($glossary->intro), 'center', '70%', '', 5, 'generalbox', 'intro');
-///}
-
-/// Tabbed browsing sections
-///$tab = GLOSSARY_ADDENTRY_VIEW;
-///include("tabs.php");
-
-if (!$e) {
-    require_capability('mod/glossary:write', $context);
+if (!empty($id)) {
+    $PAGE->navbar->add(get_string('edit'));
 }
 
-$mform->display();
-
-///glossary_print_tabbed_table_end();
+$PAGE->set_title(format_string($glossary->name));
+$PAGE->set_heading($course->fullname);
+echo $OUTPUT->header();
+echo $OUTPUT->heading(format_string($glossary->name));
 
+$mform->display();
 
-print_footer($course);
+echo $OUTPUT->footer();
 
-?>
