diff --git a/mod/glossary/import.php b/mod/glossary/import.php
index a4bc1ce..9a20c88 100644
--- a/mod/glossary/import.php
+++ b/mod/glossary/import.php
@@ -1,142 +1,142 @@
-<?php   // $Id$
+<?php
 
-    require_once("../../config.php");
-    require_once("lib.php");
-    require_once("$CFG->dirroot/course/lib.php");
-    global $CFG, $USER;
+require_once("../../config.php");
+require_once("lib.php");
+require_once("$CFG->dirroot/course/lib.php");
+require_once('import_form.php');
 
-    $id = required_param('id', PARAM_INT);    // Course Module ID
+$id = required_param('id', PARAM_INT);    // Course Module ID
 
-    $step     = optional_param('step', 0, PARAM_INT);
-    $dest     = optional_param('dest', 'current', PARAM_ALPHA);   // current | new
-    $file     = optional_param('file', '', PARAM_FILE);         // file to import
-    $catsincl = optional_param('catsincl', 0, PARAM_INT);         // Import Categories too?
+$mode     = optional_param('mode', 'letter', PARAM_ALPHA );
+$hook     = optional_param('hook', 'ALL', PARAM_ALPHANUM);
 
-    $mode     = optional_param('mode', 'letter', PARAM_ALPHA );
-    $hook     = optional_param('hook', 'ALL', PARAM_ALPHANUM);
-
-    if (! $cm = get_coursemodule_from_id('glossary', $id)) {
-        error("Course Module ID was incorrect");
-    }
-    
-    if (! $course = get_record("course", "id", $cm->course)) {
-        error("Course is misconfigured");
-    }
-
-    if (! $glossary = get_record("glossary", "id", $cm->instance)) {
-        error("Course module is incorrect");
-    }
-
-    require_login($course->id, false, $cm);  
-    
-    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
-    require_capability('mod/glossary:import', $context);
-
-    if ($dest != 'new' and $dest != 'current') {
-        $dest = 'current';
-    }
-    $strglossaries = get_string("modulenameplural", "glossary");
-    $strglossary = get_string("modulename", "glossary");
-    $strallcategories = get_string("allcategories", "glossary");
-    $straddentry = get_string("addentry", "glossary");
-    $strnoentries = get_string("noentries", "glossary");
-    $strsearchconcept = get_string("searchconcept", "glossary");
-    $strsearchindefinition = get_string("searchindefinition", "glossary");
-    $strsearch = get_string("search");
-    $strimportentries = get_string('importentriesfromxml', 'glossary');
+$url = new moodle_url('/mod/glossary/import.php', array('id'=>$id));
+if ($mode !== 'letter') {
+    $url->param('mode', $mode);
+}
+if ($hook !== 'ALL') {
+    $url->param('hook', $hook);
+}
+$PAGE->set_url($url);
 
-    $navigation = build_navigation($strimportentries, $cm);
-    print_header_simple(format_string($glossary->name), "", $navigation,
-        "", "", true, update_module_button($cm->id, $course->id, $strglossary),
-        navmenu($course, $cm));
+if (! $cm = get_coursemodule_from_id('glossary', $id)) {
+    print_error('invalidcoursemodule');
+}
 
-    print_heading($strimportentries);
+if (! $course = $DB->get_record("course", array("id"=>$cm->course))) {
+    print_error('coursemisconf');
+}
 
-    if ( !$step ) {
-        print_box_start('glossarydisplay generalbox');
-        include("import.html");
-        print_box_end();
+if (! $glossary = $DB->get_record("glossary", array("id"=>$cm->instance))) {
+    print_error('invalidid', 'glossary');
+}
 
-        print_footer($course);
+require_login($course->id, false, $cm);
+
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
+require_capability('mod/glossary:import', $context);
+
+$strglossaries = get_string("modulenameplural", "glossary");
+$strglossary = get_string("modulename", "glossary");
+$strallcategories = get_string("allcategories", "glossary");
+$straddentry = get_string("addentry", "glossary");
+$strnoentries = get_string("noentries", "glossary");
+$strsearchindefinition = get_string("searchindefinition", "glossary");
+$strsearch = get_string("search");
+$strimportentries = get_string('importentriesfromxml', 'glossary');
+
+$PAGE->navbar->add($strimportentries);
+$PAGE->set_title(format_string($glossary->name));
+$PAGE->set_heading($course->fullname);
+
+echo $OUTPUT->header();
+echo $OUTPUT->heading($strimportentries);
+
+$form = new mod_glossary_import_form();
+
+if ( !$data = $form->get_data() ) {
+    echo $OUTPUT->box_start('glossarydisplay generalbox');
+    // display upload form
+    $data = new stdClass();
+    $data->id = $id;
+    $form->set_data($data);
+    $form->display();
+    echo $OUTPUT->box_end();
+    echo $OUTPUT->footer();
         exit;
-    }
-
-    require_sesskey();
-    $form = data_submitted();
-    $file = $_FILES["file"];
-
-    require_once($CFG->dirroot.'/lib/uploadlib.php');
-    $um = new upload_manager('file',false,false,$course,false,0);
+}
 
-    if (!$um->preprocess_files()) {
-        print_box_start('glossarydisplay generalbox');
-        print_continue('import.php?id='.$id);
-        print_box_end();
+$result = $form->get_file_content('file');
 
-        print_footer();
+if (empty($result)) {
+    echo $OUTPUT->box_start('glossarydisplay generalbox');
+    echo $OUTPUT->continue_button('import.php?id='.$id);
+    echo $OUTPUT->box_end();
+    echo $OUTPUT->footer();
         die();
-    }
-
-    if ($xml = glossary_read_imported_file($file['tmp_name']) ) {
+}
 
+if ($xml = glossary_read_imported_file($result)) {
         $importedentries = 0;
         $importedcats    = 0;
         $entriesrejected = 0;
         $rejections      = '';
-        if ($dest == 'new') {
+
+    if ($data->dest == 'newglossary') {
             // If the user chose to create a new glossary
             $xmlglossary = $xml['GLOSSARY']['#']['INFO'][0]['#'];
 
             if ( $xmlglossary['NAME'][0]['#'] ) {
                 unset($glossary);
-                $glossary->name = addslashes($xmlglossary['NAME'][0]['#']);
+            $glossary->name = ($xmlglossary['NAME'][0]['#']);
                 $glossary->course = $course->id;
-                $glossary->globalglossary = addslashes($xmlglossary['GLOBALGLOSSARY'][0]['#']);
-                $glossary->intro = addslashes($xmlglossary['INTRO'][0]['#']);
-                $glossary->showspecial = addslashes($xmlglossary['SHOWSPECIAL'][0]['#']);
-                $glossary->showalphabet = addslashes($xmlglossary['SHOWALPHABET'][0]['#']);
-                $glossary->showall = addslashes($xmlglossary['SHOWALL'][0]['#']);
+            $glossary->globalglossary = ($xmlglossary['GLOBALGLOSSARY'][0]['#']);
+            $glossary->intro = ($xmlglossary['INTRO'][0]['#']);
+            $glossary->introformat = isset($xmlglossary['INTROFORMAT'][0]['#']) ? $xmlglossary['INTROFORMAT'][0]['#'] : FORMAT_MOODLE;
+            $glossary->showspecial = ($xmlglossary['SHOWSPECIAL'][0]['#']);
+            $glossary->showalphabet = ($xmlglossary['SHOWALPHABET'][0]['#']);
+            $glossary->showall = ($xmlglossary['SHOWALL'][0]['#']);
                 $glossary->timecreated = time();
                 $glossary->timemodified = time();
+            $glossary->cmidnumber = $cm->idnumber;
 
                 // Setting the default values if no values were passed
                 if ( isset($xmlglossary['ENTBYPAGE'][0]['#']) ) {
-                    $glossary->entbypage = addslashes($xmlglossary['ENTBYPAGE'][0]['#']);
+                $glossary->entbypage = ($xmlglossary['ENTBYPAGE'][0]['#']);
                 } else {
                     $glossary->entbypage = $CFG->glossary_entbypage;
                 }
                 if ( isset($xmlglossary['ALLOWDUPLICATEDENTRIES'][0]['#']) ) {
-                    $glossary->allowduplicatedentries = addslashes($xmlglossary['ALLOWDUPLICATEDENTRIES'][0]['#']);
+                $glossary->allowduplicatedentries = ($xmlglossary['ALLOWDUPLICATEDENTRIES'][0]['#']);
                 } else {
                     $glossary->allowduplicatedentries = $CFG->glossary_dupentries;
                 }
                 if ( isset($xmlglossary['DISPLAYFORMAT'][0]['#']) ) {
-                    $glossary->displayformat = addslashes($xmlglossary['DISPLAYFORMAT'][0]['#']);
+                $glossary->displayformat = ($xmlglossary['DISPLAYFORMAT'][0]['#']);
                 } else {
                     $glossary->displayformat = 2;
                 }
                 if ( isset($xmlglossary['ALLOWCOMMENTS'][0]['#']) ) {
-                    $glossary->allowcomments = addslashes($xmlglossary['ALLOWCOMMENTS'][0]['#']);
+                $glossary->allowcomments = ($xmlglossary['ALLOWCOMMENTS'][0]['#']);
                 } else {
                     $glossary->allowcomments = $CFG->glossary_allowcomments;
                 }
                 if ( isset($xmlglossary['USEDYNALINK'][0]['#']) ) {
-                    $glossary->usedynalink = addslashes($xmlglossary['USEDYNALINK'][0]['#']);
+                $glossary->usedynalink = ($xmlglossary['USEDYNALINK'][0]['#']);
                 } else {
                     $glossary->usedynalink = $CFG->glossary_linkentries;
                 }
                 if ( isset($xmlglossary['DEFAULTAPPROVAL'][0]['#']) ) {
-                    $glossary->defaultapproval = addslashes($xmlglossary['DEFAULTAPPROVAL'][0]['#']);
+                $glossary->defaultapproval = ($xmlglossary['DEFAULTAPPROVAL'][0]['#']);
                 } else {
                     $glossary->defaultapproval = $CFG->glossary_defaultapproval;
                 }
 
                 // Include new glossary and return the new ID
                 if ( !$glossary->id = glossary_add_instance($glossary) ) {
-                    notify("Error while trying to create the new glossary.");
-                    echo '</center>';
+                echo $OUTPUT->notification("Error while trying to create the new glossary.");
                     glossary_print_tabbed_table_end();
-                    print_footer($course);
+                echo $OUTPUT->footer();
                     exit;
                 } else {
                     //The instance has been created, so lets do course_modules
@@ -147,8 +147,8 @@
                     // course_modules and course_sections each contain a reference
                     // to each other, so we have to update one of them twice.
 
-                    if (! $currmodule = get_record("modules", "name", 'glossary')) {
-                        error("Glossary module doesn't exist");
+                if (! $currmodule = $DB->get_record("modules", array("name"=>'glossary'))) {
+                    print_error('modulenotexist', 'debug', '', 'Glossary');
                     }
                     $mod->module = $currmodule->id;
                     $mod->course = $course->id;
@@ -156,22 +156,18 @@
                     $mod->section = 0;
 
                     if (! $mod->coursemodule = add_course_module($mod) ) {
-                        error("Could not add a new course module");
+                    print_error('cannotaddcoursemodule');
                     }
 
                     if (! $sectionid = add_mod_to_section($mod) ) {
-                        error("Could not add the new course module to that section");
+                    print_error('cannotaddcoursemoduletosection');
                     }
                     //We get the section's visible field status
-                    $visible = get_field("course_sections","visible","id",$sectionid);
+                $visible = $DB->get_field("course_sections", "visible", array("id"=>$sectionid));
 
-                    if (! set_field("course_modules", "visible", $visible, "id", $mod->coursemodule)) {
-                        error("Could not update the course module with the correct visibility");
-                    }
+                $DB->set_field("course_modules", "visible", $visible, array("id"=>$mod->coursemodule));
+                $DB->set_field("course_modules", "section", $sectionid, array("id"=>$mod->coursemodule));
 
-                    if (! set_field("course_modules", "section", $sectionid, "id", $mod->coursemodule)) {
-                        error("Could not update the course module with the correct section");
-                    }
                     add_to_log($course->id, "course", "add mod",
                                "../mod/$mod->modulename/view.php?id=$mod->coursemodule",
                                "$mod->modulename $mod->instance");
@@ -181,25 +177,25 @@
 
                     rebuild_course_cache($course->id);
 
-                    print_simple_box(get_string("newglossarycreated","glossary"),"center","70%");
-                    echo '<p>';
+                echo $OUTPUT->box(get_string("newglossarycreated","glossary"),'generalbox boxaligncenter boxwidthnormal');
                 }
             } else {
-                notify("Error while trying to create the new glossary.");
-                print_footer($course);
+            echo $OUTPUT->notification("Error while trying to create the new glossary.");
+            echo $OUTPUT->footer();
                 exit;
             }
         }
 
         $xmlentries = $xml['GLOSSARY']['#']['INFO'][0]['#']['ENTRIES'][0]['#']['ENTRY'];
-        for($i = 0; $i < sizeof($xmlentries); $i++) {
+    $sizeofxmlentries = sizeof($xmlentries);
+    for($i = 0; $i < $sizeofxmlentries; $i++) {
             // Inserting the entries
             $xmlentry = $xmlentries[$i];
             unset($newentry);
-            $newentry->concept = trim(addslashes($xmlentry['#']['CONCEPT'][0]['#']));
-            $newentry->definition = trusttext_strip(addslashes($xmlentry['#']['DEFINITION'][0]['#']));
+        $newentry->concept = trim($xmlentry['#']['CONCEPT'][0]['#']);
+        $newentry->definition = trusttext_strip($xmlentry['#']['DEFINITION'][0]['#']);
             if ( isset($xmlentry['#']['CASESENSITIVE'][0]['#']) ) {
-                $newentry->casesensitive    = addslashes($xmlentry['#']['CASESENSITIVE'][0]['#']);
+            $newentry->casesensitive = $xmlentry['#']['CASESENSITIVE'][0]['#'];
             } else {
                 $newentry->casesensitive      = $CFG->glossary_casesensitive;
             }
@@ -209,9 +205,15 @@
                 if ( !$glossary->allowduplicatedentries ) {
                     // checking if the entry is valid (checking if it is duplicated when should not be)
                     if ( $newentry->casesensitive ) {
-                        $dupentry = get_record("glossary_entries","concept",$newentry->concept,"glossaryid",$glossary->id);
+                    $dupentry = $DB->record_exists_select('glossary_entries',
+                                    'glossaryid = :glossaryid AND concept = :concept', array(
+                                        'glossaryid' => $glossary->id,
+                                        'concept'    => $newentry->concept));
                     } else {
-                        $dupentry = get_record("glossary_entries","lower(concept)",moodle_strtolower($newentry->concept),"glossaryid",$glossary->id);
+                    $dupentry = $DB->record_exists_select('glossary_entries',
+                                    'glossaryid = :glossaryid AND LOWER(concept) = :concept', array(
+                                        'glossaryid' => $glossary->id,
+                                        'concept'    => moodle_strtolower($newentry->concept)));
                     }
                     if ($dupentry) {
                         $permissiongranted = 0;
@@ -219,89 +221,76 @@
                 }
             } else {
                 $permissiongranted = 0;
-}
+        }
             if ($permissiongranted) {
                 $newentry->glossaryid       = $glossary->id;
                 $newentry->sourceglossaryid = 0;
                 $newentry->approved         = 1;
                 $newentry->userid           = $USER->id;
                 $newentry->teacherentry     = 1;
-                $newentry->format           = addslashes($xmlentry['#']['FORMAT'][0]['#']);
+            $newentry->definitionformat = $xmlentry['#']['FORMAT'][0]['#'];
                 $newentry->timecreated      = time();
                 $newentry->timemodified     = time();
 
                 // Setting the default values if no values were passed
                 if ( isset($xmlentry['#']['USEDYNALINK'][0]['#']) ) {
-                    $newentry->usedynalink      = addslashes($xmlentry['#']['USEDYNALINK'][0]['#']);
+                $newentry->usedynalink      = $xmlentry['#']['USEDYNALINK'][0]['#'];
                 } else {
                     $newentry->usedynalink      = $CFG->glossary_linkentries;
                 }
                 if ( isset($xmlentry['#']['FULLMATCH'][0]['#']) ) {
-                    $newentry->fullmatch        = addslashes($xmlentry['#']['FULLMATCH'][0]['#']);
+                $newentry->fullmatch        = $xmlentry['#']['FULLMATCH'][0]['#'];
                 } else {
                     $newentry->fullmatch      = $CFG->glossary_fullmatch;
                 }
 
-                if ( $newentry->id = insert_record("glossary_entries",$newentry) )  {
+            $newentry->id = $DB->insert_record("glossary_entries",$newentry);
                     $importedentries++;
 
                     $xmlaliases = @$xmlentry['#']['ALIASES'][0]['#']['ALIAS']; // ignore missing ALIASES
-                    for($k = 0; $k < sizeof($xmlaliases); $k++) {
+            $sizeofxmlaliases = sizeof($xmlaliases);
+            for($k = 0; $k < $sizeofxmlaliases; $k++) {
                     /// Importing aliases
                         $xmlalias = $xmlaliases[$k];
                         $aliasname = $xmlalias['#']['NAME'][0]['#'];
 
                         if (!empty($aliasname)) {
-                            unset($newalias);
+                    $newalias = new stdClass();
                             $newalias->entryid = $newentry->id;
-                            $newalias->alias = trim(addslashes($aliasname));
-                            $newalias->id = insert_record("glossary_alias",$newalias);
+                    $newalias->alias = trim($aliasname);
+                    $newalias->id = $DB->insert_record("glossary_alias",$newalias);
                         }
                     }
 
-                    if ( $catsincl ) {
+            if (!empty($data->catsincl)) {
                         // If the categories must be imported...
                         $xmlcats = @$xmlentry['#']['CATEGORIES'][0]['#']['CATEGORY']; // ignore missing CATEGORIES
-                        for($k = 0; $k < sizeof($xmlcats); $k++) {
+                $sizeofxmlcats = sizeof($xmlcats);
+                for($k = 0; $k < $sizeofxmlcats; $k++) {
                             $xmlcat = $xmlcats[$k];
-                            unset($newcat);
 
-                            $newcat->name = addslashes($xmlcat['#']['NAME'][0]['#']);
-                            $newcat->usedynalink = addslashes($xmlcat['#']['USEDYNALINK'][0]['#']);
-                            if ( !$category = get_record("glossary_categories","glossaryid",$glossary->id,"name",$newcat->name) ) {
+                    $newcat = new stdClass();
+                    $newcat->name = $xmlcat['#']['NAME'][0]['#'];
+                    $newcat->usedynalink = $xmlcat['#']['USEDYNALINK'][0]['#'];
+                    if ( !$category = $DB->get_record("glossary_categories", array("glossaryid"=>$glossary->id,"name"=>$newcat->name))) {
                                 // Create the category if it does not exist
-                                unset($category);
+                        $category = new stdClass();
                                 $category->name = $newcat->name;
                                 $category->glossaryid = $glossary->id;
-                                if ( !$category->id = insert_record("glossary_categories",$category)) {
-                                    // add to exception report (can't insert category)
-                                    $rejections .= "<tr><td>&nbsp;<strong>" . get_string("category","glossary") . ":</strong>$newcat->name</td>" .
-                                                   "<td>" . get_string("cantinsertcat","glossary"). "</td></tr>";
-                                } else {
+                        $category->id = $DB->insert_record("glossary_categories",$category);
                                     $importedcats++;
                                 }
-                            }
                             if ( $category ) {
                                 // inserting the new relation
-                                unset($entrycat);
+                        $entrycat = new stdClass();
                                 $entrycat->entryid    = $newentry->id;
                                 $entrycat->categoryid = $category->id;
-                                if ( !insert_record("glossary_entries_categories",$entrycat) ) {
-                                    // add to exception report (can't insert relation)
-                                    $rejections .= "<tr><td>&nbsp;<strong>" . get_string("category","glossary") . ":</strong>$newcat->name</td>" .
-                                                   "<td>" . get_string("cantinsertrel","glossary"). "</td></tr>";
-                                }
+                        $DB->insert_record("glossary_entries_categories",$entrycat);
                             }
                         }
                     }
                 } else {
                     $entriesrejected++;
-                    // add to exception report (can't insert new record)
-                    $rejections .= "<tr><td>$newentry->concept</td>" .
-                                   "<td>" . get_string("cantinsertrec","glossary"). "</td></tr>";
-                }
-            } else {
-                $entriesrejected++;
                 if ( $newentry->concept and $newentry->definition ) {
                     // add to exception report (duplicated entry))
                     $rejections .= "<tr><td>$newentry->concept</td>" .
@@ -314,7 +303,7 @@
             }
         }
         // processed entries
-        print_box_start('glossarydisplay generalbox');
+    echo $OUTPUT->box_start('glossarydisplay generalbox');
         echo '<table class="glossaryimportexport">';
         echo '<tr>';
         echo '<td width="50%" align="right">';
@@ -335,7 +324,7 @@
         }
         echo '</td>';
         echo '</tr>';
-        if ( $catsincl ) {
+    if (!empty($data->catsincl)) {
             echo '<tr>';
             echo '<td width="50%" align="right">';
             echo get_string("importedcategories","glossary");
@@ -349,23 +338,24 @@
 
         // rejected entries
         if ($rejections) {
+        echo $OUTPUT->heading(get_string("rejectionrpt","glossary"), 4);
             echo '<table class="glossaryimportexport">';
-            echo '<tr><td align="center" colspan="2" width="100%"><strong>' . get_string("rejectionrpt","glossary") . '</strong></tr>';
             echo $rejections;
             echo '</table><hr />';
         }
-    /// Print continue button, based on results
+/// Print continue button, based on results
         if ($importedentries) {
-            print_continue('view.php?id='.$id);
+        echo $OUTPUT->continue_button('view.php?id='.$id);
         } else {
-            print_continue('import.php?id='.$id);
-        }
-        print_box_end();
-    } else {
-        notice(get_string('errorparsingxml', 'glossary'));
-    }
+        echo $OUTPUT->continue_button('import.php?id='.$id);
+    }
+    echo $OUTPUT->box_end();
+} else {
+    echo $OUTPUT->box_start('glossarydisplay generalbox');
+    echo get_string('errorparsingxml', 'glossary');
+    echo $OUTPUT->continue_button('import.php?id='.$id);
+    echo $OUTPUT->box_end();
+}
 
 /// Finish the page
-    print_footer($course);
-
-?>
+echo $OUTPUT->footer();
