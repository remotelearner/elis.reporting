diff --git a/mod/forum/post.php b/mod/forum/post.php
index a3d3176..197d3c2 100644
--- a/mod/forum/post.php
+++ b/mod/forum/post.php
@@ -1,94 +1,126 @@
-<?php // $Id$
-
-//  Edit and save a new post to a discussion
-
-    require_once('../../config.php');
-    require_once('lib.php');
-
-    $reply   = optional_param('reply', 0, PARAM_INT);
-    $forum   = optional_param('forum', 0, PARAM_INT);
-    $edit    = optional_param('edit', 0, PARAM_INT);
-    $delete  = optional_param('delete', 0, PARAM_INT);
-    $prune   = optional_param('prune', 0, PARAM_INT);
-    $name    = optional_param('name', '', PARAM_CLEAN);
-    $confirm = optional_param('confirm', 0, PARAM_INT);
-    $groupid = optional_param('groupid', null, PARAM_INT);
-
-
-    //these page_params will be passed as hidden variables later in the form.
-    $page_params = array('reply'=>$reply, 'forum'=>$forum, 'edit'=>$edit);
-
-    $sitecontext = get_context_instance(CONTEXT_SYSTEM);
-
-    if (has_capability('moodle/legacy:guest', $sitecontext, NULL, false)) {
-
-        $wwwroot = $CFG->wwwroot.'/login/index.php';
-        if (!empty($CFG->loginhttps)) {
-            $wwwroot = str_replace('http:', 'https:', $wwwroot);
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Edit and save a new post to a discussion
+ *
+ * @package mod-forum
+ * @copyright 1999 onwards Martin Dougiamas  {@link http://moodle.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+require_once('../../config.php');
+require_once('lib.php');
+require_once($CFG->libdir.'/completionlib.php');
+
+$reply   = optional_param('reply', 0, PARAM_INT);
+$forum   = optional_param('forum', 0, PARAM_INT);
+$edit    = optional_param('edit', 0, PARAM_INT);
+$delete  = optional_param('delete', 0, PARAM_INT);
+$prune   = optional_param('prune', 0, PARAM_INT);
+$name    = optional_param('name', '', PARAM_CLEAN);
+$confirm = optional_param('confirm', 0, PARAM_INT);
+$groupid = optional_param('groupid', null, PARAM_INT);
+
+$PAGE->set_url('/mod/forum/post.php', array(
+        'reply' => $reply,
+        'forum' => $forum,
+        'edit'  => $edit,
+        'delete'=> $delete,
+        'prune' => $prune,
+        'name'  => $name,
+        'confirm'=>$confirm,
+        'groupid'=>$groupid,
+        ));
+//these page_params will be passed as hidden variables later in the form.
+$page_params = array('reply'=>$reply, 'forum'=>$forum, 'edit'=>$edit);
+
+$sitecontext = get_context_instance(CONTEXT_SYSTEM);
+
+if (!isloggedin() or isguestuser()) {
+
+    if (!isloggedin() and !get_referer()) {
+        // No referer+not logged in - probably coming in via email  See MDL-9052
+        require_login();
         }
 
         if (!empty($forum)) {      // User is starting a new discussion in a forum
-            if (! $forum = get_record('forum', 'id', $forum)) {
-                error('The forum number was incorrect');
+        if (! $forum = $DB->get_record('forum', array('id' => $forum))) {
+            print_error('invalidforumid', 'forum');
             }
         } else if (!empty($reply)) {      // User is writing a new reply
             if (! $parent = forum_get_post_full($reply)) {
-                error('Parent post ID was incorrect');
+            print_error('invalidparentpostid', 'forum');
             }
-            if (! $discussion = get_record('forum_discussions', 'id', $parent->discussion)) {
-                error('This post is not part of a discussion!');
+        if (! $discussion = $DB->get_record('forum_discussions', array('id' => $parent->discussion))) {
+            print_error('notpartofdiscussion', 'forum');
             }
-            if (! $forum = get_record('forum', 'id', $discussion->forum)) {
-                error('The forum number was incorrect');
+        if (! $forum = $DB->get_record('forum', array('id' => $discussion->forum))) {
+            print_error('invalidforumid');
             }
         }
-        if (! $course = get_record('course', 'id', $forum->course)) {
-            error('The course number was incorrect');
+    if (! $course = $DB->get_record('course', array('id' => $forum->course))) {
+        print_error('invalidcourseid');
         }
 
         if (!$cm = get_coursemodule_from_instance('forum', $forum->id, $course->id)) { // For the logs
-            error('Could not get the course module for the forum instance.');
+        print_error('invalidcoursemodule');
         } else {
             $modcontext = get_context_instance(CONTEXT_MODULE, $cm->id);
         }
 
-        if (!get_referer()) {   // No referer - probably coming in via email  See MDL-9052
-            require_login();
-        }
-
-        $navigation = build_navigation('', $cm);
-        print_header($course->shortname, $course->fullname, $navigation, '' , '', true, "", navmenu($course, $cm));
+    $PAGE->set_cm($cm, $course, $forum);
+    $PAGE->set_context($modcontext);
+    $PAGE->set_title($course->shortname);
+    $PAGE->set_heading($course->fullname);
 
-        notice_yesno(get_string('noguestpost', 'forum').'<br /><br />'.get_string('liketologin'),
-                     $wwwroot, get_referer(false));
-        print_footer($course);
+    echo $OUTPUT->header();
+    echo $OUTPUT->confirm(get_string('noguestpost', 'forum').'<br /><br />'.get_string('liketologin'), get_login_url(), get_referer(false));
+    echo $OUTPUT->footer();
         exit;
-    }
+}
 
-    require_login(0, false);   // Script is useless unless they're logged in
+require_login(0, false);   // Script is useless unless they're logged in
 
-    if (!empty($forum)) {      // User is starting a new discussion in a forum
-        if (! $forum = get_record("forum", "id", $forum)) {
-            error("The forum number was incorrect ($forum)");
+if (!empty($forum)) {      // User is starting a new discussion in a forum
+    if (! $forum = $DB->get_record("forum", array("id" => $forum))) {
+        print_error('invalidforumid', 'forum');
         }
-        if (! $course = get_record("course", "id", $forum->course)) {
-            error("The course number was incorrect ($forum->course)");
+    if (! $course = $DB->get_record("course", array("id" => $forum->course))) {
+        print_error('invalidcourseid');
         }
         if (! $cm = get_coursemodule_from_instance("forum", $forum->id, $course->id)) {
-            error("Incorrect course module");
+        print_error("invalidcoursemodule");
         }
 
         $coursecontext = get_context_instance(CONTEXT_COURSE, $course->id);
 
         if (! forum_user_can_post_discussion($forum, $groupid, -1, $cm)) {
-            if (has_capability('moodle/legacy:guest', $coursecontext, NULL, false)) {  // User is a guest here!
+        if (!isguestuser()) {
+            if (!is_enrolled($coursecontext)) {
+                if (enrol_selfenrol_available($course->id)) {
                 $SESSION->wantsurl = $FULLME;
                 $SESSION->enrolcancel = $_SERVER['HTTP_REFERER'];
-                redirect($CFG->wwwroot.'/course/enrol.php?id='.$course->id, get_string('youneedtoenrol'));
-            } else {
-                print_error('nopostforum', 'forum');
+                    redirect($CFG->wwwroot.'/enrol/index.php?id='.$course->id, get_string('youneedtoenrol'));
+                }
             }
         }
+        print_error('nopostforum', 'forum');
+    }
 
         if (!$cm->visible and !has_capability('moodle/course:viewhiddenactivities', $coursecontext)) {
             print_error("activityiscurrentlyhidden");
@@ -103,7 +135,7 @@
 
         // Load up the $post variable.
 
-        $post = new object();
+    $post = new stdClass();
         $post->course     = $course->id;
         $post->forum      = $forum->id;
         $post->discussion = 0;           // ie discussion # not defined yet
@@ -111,6 +143,8 @@
         $post->subject    = '';
         $post->userid     = $USER->id;
         $post->message    = '';
+    $post->messageformat = editors_get_preferred_format();
+    $post->messagetrust  = 0;
 
         if (isset($groupid)) {
             $post->groupid = $groupid;
@@ -120,42 +154,48 @@
 
         forum_set_return();
 
-    } else if (!empty($reply)) {      // User is writing a new reply
+} else if (!empty($reply)) {      // User is writing a new reply
 
         if (! $parent = forum_get_post_full($reply)) {
-            error("Parent post ID was incorrect");
+        print_error('invalidparentpostid', 'forum');
         }
-        if (! $discussion = get_record("forum_discussions", "id", $parent->discussion)) {
-            error("This post is not part of a discussion!");
+    if (! $discussion = $DB->get_record("forum_discussions", array("id" => $parent->discussion))) {
+        print_error('notpartofdiscussion', 'forum');
         }
-        if (! $forum = get_record("forum", "id", $discussion->forum)) {
-            error("The forum number was incorrect ($discussion->forum)");
+    if (! $forum = $DB->get_record("forum", array("id" => $discussion->forum))) {
+        print_error('invalidforumid', 'forum');
         }
-        if (! $course = get_record("course", "id", $discussion->course)) {
-            error("The course number was incorrect ($discussion->course)");
+    if (! $course = $DB->get_record("course", array("id" => $discussion->course))) {
+        print_error('invalidcourseid');
         }
         if (! $cm = get_coursemodule_from_instance("forum", $forum->id, $course->id)) {
-            error("Incorrect cm");
+        print_error('invalidcoursemodule');
         }
 
-        // call course_setup to use forced language, MDL-6926
-        course_setup($course->id);
+    // Ensure lang, theme, etc. is set up properly. MDL-6926
+    $PAGE->set_cm($cm, $course, $forum);
 
         $coursecontext = get_context_instance(CONTEXT_COURSE, $course->id);
         $modcontext    = get_context_instance(CONTEXT_MODULE, $cm->id);
 
         if (! forum_user_can_post($forum, $discussion, $USER, $cm, $course, $modcontext)) {
-            if (has_capability('moodle/legacy:guest', $coursecontext, NULL, false)) {  // User is a guest here!
+        if (!isguestuser()) {
+            if (!is_enrolled($coursecontext)) {  // User is a guest here!
                 $SESSION->wantsurl = $FULLME;
                 $SESSION->enrolcancel = $_SERVER['HTTP_REFERER'];
-                redirect($CFG->wwwroot.'/course/enrol.php?id='.$course->id, get_string('youneedtoenrol'));
-            } else {
-                print_error('nopostforum', 'forum');
+                redirect($CFG->wwwroot.'/enrol/index.php?id='.$course->id, get_string('youneedtoenrol'));
             }
         }
+        print_error('nopostforum', 'forum');
+    }
 
         // Make sure user can post here
-        if (groupmode($course, $cm) == SEPARATEGROUPS and !has_capability('moodle/site:accessallgroups', $modcontext)) {
+    if (isset($cm->groupmode) && empty($course->groupmodeforce)) {
+        $groupmode =  $cm->groupmode;
+    } else {
+        $groupmode = $course->groupmode;
+    }
+    if ($groupmode == SEPARATEGROUPS and !has_capability('moodle/site:accessallgroups', $modcontext)) {
             if ($discussion->groupid == -1) {
                 print_error('nopostforum', 'forum');
             } else {
@@ -171,7 +211,7 @@
 
         // Load up the $post variable.
 
-        $post = new object();
+    $post = new stdClass();
         $post->course      = $course->id;
         $post->forum       = $forum->id;
         $post->discussion  = $parent->discussion;
@@ -189,40 +229,43 @@
 
         unset($SESSION->fromdiscussion);
 
-    } else if (!empty($edit)) {  // User is editing their own post
+} else if (!empty($edit)) {  // User is editing their own post
 
         if (! $post = forum_get_post_full($edit)) {
-            error("Post ID was incorrect");
+        print_error('invalidpostid', 'forum');
         }
         if ($post->parent) {
             if (! $parent = forum_get_post_full($post->parent)) {
-                error("Parent post ID was incorrect ($post->parent)");
+            print_error('invalidparentpostid', 'forum');
             }
         }
 
-        if (! $discussion = get_record("forum_discussions", "id", $post->discussion)) {
-            error("This post is not part of a discussion! ($edit)");
+    if (! $discussion = $DB->get_record("forum_discussions", array("id" => $post->discussion))) {
+        print_error('notpartofdiscussion', 'forum');
         }
-        if (! $forum = get_record("forum", "id", $discussion->forum)) {
-            error("The forum number was incorrect ($discussion->forum)");
+    if (! $forum = $DB->get_record("forum", array("id" => $discussion->forum))) {
+        print_error('invalidforumid', 'forum');
         }
-        if (! $course = get_record("course", "id", $discussion->course)) {
-            error("The course number was incorrect ($discussion->course)");
+    if (! $course = $DB->get_record("course", array("id" => $discussion->course))) {
+        print_error('invalidcourseid');
         }
         if (!$cm = get_coursemodule_from_instance("forum", $forum->id, $course->id)) {
-            error('Could not get the course module for the forum instance.');
+        print_error('invalidcoursemodule');
         } else {
             $modcontext = get_context_instance(CONTEXT_MODULE, $cm->id);
         }
+
+    $PAGE->set_cm($cm, $course, $forum);
+
         if (!($forum->type == 'news' && !$post->parent && $discussion->timestart > time())) {
             if (((time() - $post->created) > $CFG->maxeditingtime) and
                         !has_capability('mod/forum:editanypost', $modcontext)) {
-                error( get_string("maxtimehaspassed", "forum", format_time($CFG->maxeditingtime)) );
+            print_error('maxtimehaspassed', 'forum', '', format_time($CFG->maxeditingtime));
             }
         }
         if (($post->userid <> $USER->id) and
                     !has_capability('mod/forum:editanypost', $modcontext)) {
-            error("You can't edit other people's posts!");
+        print_error('cannoteditposts', 'forum');
         }
 
 
@@ -232,27 +275,27 @@
         $post->forum  = $forum->id;
         $post->groupid = ($discussion->groupid == -1) ? 0 : $discussion->groupid;
 
-        trusttext_prepare_edit($post->message, $post->format, can_use_html_editor(), $modcontext);
+    $post = trusttext_pre_edit($post, 'message', $modcontext);
 
         unset($SESSION->fromdiscussion);
 
 
-    }else if (!empty($delete)) {  // User is deleting a post
+}else if (!empty($delete)) {  // User is deleting a post
 
         if (! $post = forum_get_post_full($delete)) {
-            error("Post ID was incorrect");
+        print_error('invalidpostid', 'forum');
         }
-        if (! $discussion = get_record("forum_discussions", "id", $post->discussion)) {
-            error("This post is not part of a discussion!");
+    if (! $discussion = $DB->get_record("forum_discussions", array("id" => $post->discussion))) {
+        print_error('notpartofdiscussion', 'forum');
         }
-        if (! $forum = get_record("forum", "id", $discussion->forum)) {
-            error("The forum number was incorrect ($discussion->forum)");
+    if (! $forum = $DB->get_record("forum", array("id" => $discussion->forum))) {
+        print_error('invalidforumid', 'forum');
         }
         if (!$cm = get_coursemodule_from_instance("forum", $forum->id, $forum->course)) {
-            error('Could not get the course module for the forum instance.');
+        print_error('invalidcoursemodule');
         }
-        if (!$course = get_record('course', 'id', $forum->course)) {
-            error('Incorrect course');
+    if (!$course = $DB->get_record('course', array('id' => $forum->course))) {
+        print_error('invalidcourseid');
         }
 
         require_login($course, false, $cm);
@@ -260,7 +303,7 @@
 
         if ( !(($post->userid == $USER->id && has_capability('mod/forum:deleteownpost', $modcontext))
                     || has_capability('mod/forum:deleteanypost', $modcontext)) ) {
-            error("You can't delete this post!");
+        print_error('cannotdeletepost', 'forum');
         }
 
 
@@ -275,7 +318,7 @@
             }
 
             if ($post->totalscore) {
-                notice(get_string("couldnotdeleteratings", "forum"),
+            notice(get_string('couldnotdeleteratings', 'rating'),
                         forum_go_back_to("discuss.php?d=$post->discussion"));
 
             } else if ($replycount && !has_capability('mod/forum:deleteanypost', $modcontext)) {
@@ -288,14 +331,15 @@
                         notice("Sorry, but you are not allowed to delete that discussion!",
                                 forum_go_back_to("discuss.php?d=$post->discussion"));
                     }
-                    forum_delete_discussion($discussion);
+                forum_delete_discussion($discussion, false, $course, $cm, $forum);
 
                     add_to_log($discussion->course, "forum", "delete discussion",
                                "view.php?id=$cm->id", "$forum->id", $cm->id);
 
                     redirect("view.php?f=$discussion->forum");
 
-                } else if (forum_delete_post($post, has_capability('mod/forum:deleteanypost', $modcontext))) {
+            } else if (forum_delete_post($post, has_capability('mod/forum:deleteanypost', $modcontext),
+                $course, $cm, $forum)) {
 
                     if ($forum->type == 'single') {
                         // Single discussion forums are an exception. We show
@@ -310,7 +354,7 @@
 
                     redirect(forum_go_back_to($discussionurl));
                 } else {
-                    error("An error occurred while deleting record $post->id");
+                print_error('errorwhiledelete', 'forum');
                 }
             }
 
@@ -318,15 +362,18 @@
         } else { // User just asked to delete something
 
             forum_set_return();
+        $PAGE->navbar->add(get_string('delete', 'forum'));
+        $PAGE->set_title($course->shortname);
+        $PAGE->set_heading($course->fullname);
 
             if ($replycount) {
                 if (!has_capability('mod/forum:deleteanypost', $modcontext)) {
                     print_error("couldnotdeletereplies", "forum",
                           forum_go_back_to("discuss.php?d=$post->discussion"));
                 }
-                print_header();
-                notice_yesno(get_string("deletesureplural", "forum", $replycount+1),
-                             "post.php?delete=$delete&amp;confirm=$delete&amp;sesskey=".sesskey(),
+            echo $OUTPUT->header();
+            echo $OUTPUT->confirm(get_string("deletesureplural", "forum", $replycount+1),
+                         "post.php?delete=$delete&confirm=$delete",
                              $CFG->wwwroot.'/mod/forum/discuss.php?d='.$post->discussion.'#p'.$post->id);
 
                 forum_print_post($post, $discussion, $forum, $cm, $course, false, false, false);
@@ -337,47 +384,47 @@
                     forum_print_posts_nested($course, $cm, $forum, $discussion, $post, false, false, $forumtracked, $posts);
                 }
             } else {
-                print_header();
-                notice_yesno(get_string("deletesure", "forum", $replycount),
-                             "post.php?delete=$delete&amp;confirm=$delete&amp;sesskey=".sesskey(),
+            echo $OUTPUT->header();
+            echo $OUTPUT->confirm(get_string("deletesure", "forum", $replycount),
+                         "post.php?delete=$delete&confirm=$delete",
                              $CFG->wwwroot.'/mod/forum/discuss.php?d='.$post->discussion.'#p'.$post->id);
                 forum_print_post($post, $discussion, $forum, $cm, $course, false, false, false);
             }
 
         }
-        print_footer($course);
+    echo $OUTPUT->footer();
         die;
 
 
-    } else if (!empty($prune)) {  // Pruning
+} else if (!empty($prune)) {  // Pruning
 
         if (!$post = forum_get_post_full($prune)) {
-            error("Post ID was incorrect");
+        print_error('invalidpostid', 'forum');
         }
-        if (!$discussion = get_record("forum_discussions", "id", $post->discussion)) {
-            error("This post is not part of a discussion!");
+    if (!$discussion = $DB->get_record("forum_discussions", array("id" => $post->discussion))) {
+        print_error('notpartofdiscussion', 'forum');
         }
-        if (!$forum = get_record("forum", "id", $discussion->forum)) {
-            error("The forum number was incorrect ($discussion->forum)");
+    if (!$forum = $DB->get_record("forum", array("id" => $discussion->forum))) {
+        print_error('invalidforumid', 'forum');
         }
         if ($forum->type == 'single') {
-            error('Discussions from this forum cannot be split');
+        print_error('cannotsplit', 'forum');
         }
         if (!$post->parent) {
-            error('This is already the first post in the discussion');
+        print_error('alreadyfirstpost', 'forum');
         }
         if (!$cm = get_coursemodule_from_instance("forum", $forum->id, $forum->course)) { // For the logs
-            error('Could not get the course module for the forum instance.');
+        print_error('invalidcoursemodule');
         } else {
             $modcontext = get_context_instance(CONTEXT_MODULE, $cm->id);
         }
         if (!has_capability('mod/forum:splitdiscussions', $modcontext)) {
-            error("You can't split discussions!");
+        print_error('cannotsplit', 'forum');
         }
 
         if (!empty($name) && confirm_sesskey()) {    // User has confirmed the prune
 
-            $newdiscussion = new object();
+        $newdiscussion = new stdClass();
             $newdiscussion->course       = $discussion->course;
             $newdiscussion->forum        = $discussion->forum;
             $newdiscussion->name         = $name;
@@ -389,18 +436,14 @@
             $newdiscussion->timestart    = $discussion->timestart;
             $newdiscussion->timeend      = $discussion->timeend;
 
-            if (!$newid = insert_record('forum_discussions', $newdiscussion)) {
-                error('Could not create new discussion');
-            }
+        $newid = $DB->insert_record('forum_discussions', $newdiscussion);
 
-            $newpost = new object();
+        $newpost = new stdClass();
             $newpost->id      = $post->id;
             $newpost->parent  = 0;
             $newpost->subject = $name;
 
-            if (!update_record("forum_posts", $newpost)) {
-                error('Could not update the original post');
-            }
+        $DB->update_record("forum_posts", $newpost);
 
             forum_change_discussionid($post->id, $newid);
 
@@ -415,15 +458,16 @@
 
         } else { // User just asked to prune something
 
-            $course = get_record('course', 'id', $forum->course);
-
-            $navlinks = array();
-            $navlinks[] = array('name' => format_string($post->subject, true), 'link' => "discuss.php?d=$discussion->id", 'type' => 'title');
-            $navlinks[] = array('name' => get_string("prune", "forum"), 'link' => '', 'type' => 'title');
-            $navigation = build_navigation($navlinks, $cm);
-            print_header_simple(format_string($discussion->name).": ".format_string($post->subject), "", $navigation, '', "", true, "", navmenu($course, $cm));
+        $course = $DB->get_record('course', array('id' => $forum->course));
 
-            print_heading(get_string('pruneheading', 'forum'));
+        $PAGE->set_cm($cm);
+        $PAGE->set_context($modcontext);
+        $PAGE->navbar->add(format_string($post->subject, true), new moodle_url('/mod/forum/discuss.php', array('d'=>$discussion->id)));
+        $PAGE->navbar->add(get_string("prune", "forum"));
+        $PAGE->set_title(format_string($discussion->name).": ".format_string($post->subject));
+        $PAGE->set_heading($course->fullname);
+        echo $OUTPUT->header();
+        echo $OUTPUT->heading(get_string('pruneheading', 'forum'));
             echo '<center>';
 
             include('prune.html');
@@ -431,34 +475,117 @@
             forum_print_post($post, $discussion, $forum, $cm, $course, false, false, false);
             echo '</center>';
         }
-        print_footer($course);
+    echo $OUTPUT->footer();
         die;
-    } else {
-        error("No operation specified");
+} else {
+    print_error('unknowaction');
 
-    }
+}
 
-    if (!isset($coursecontext)) {
+if (!isset($coursecontext)) {
         // Has not yet been set by post.php.
         $coursecontext = get_context_instance(CONTEXT_COURSE, $forum->course);
+}
+
+
+// from now on user must be logged on properly
+
+if (!$cm = get_coursemodule_from_instance('forum', $forum->id, $course->id)) { // For the logs
+    print_error('invalidcoursemodule');
+}
+$modcontext = get_context_instance(CONTEXT_MODULE, $cm->id);
+require_login($course, false, $cm);
+
+if (isguestuser()) {
+    // just in case
+    print_error('noguest');
+}
+
+if (!isset($forum->maxattachments)) {  // TODO - delete this once we add a field to the forum table
+    $forum->maxattachments = 3;
+}
+
+require_once('post_form.php');
+
+$mform_post = new mod_forum_post_form('post.php', array('course'=>$course, 'cm'=>$cm, 'coursecontext'=>$coursecontext, 'modcontext'=>$modcontext, 'forum'=>$forum, 'post'=>$post));
+
+$draftitemid = file_get_submitted_draft_itemid('attachments');
+file_prepare_draft_area($draftitemid, $modcontext->id, 'mod_forum', 'attachment', empty($post->id)?null:$post->id);
+
+//load data into form NOW!
+
+if ($USER->id != $post->userid) {   // Not the original author, so add a message to the end
+    $data->date = userdate($post->modified);
+    if ($post->messageformat == FORMAT_HTML) {
+        $data->name = '<a href="'.$CFG->wwwroot.'/user/view.php?id='.$USER->id.'&course='.$post->course.'">'.
+                       fullname($USER).'</a>';
+        $post->message .= '<p>(<span class="edited">'.get_string('editedby', 'forum', $data).'</span>)</p>';
+    } else {
+        $data->name = fullname($USER);
+        $post->message .= "\n\n(".get_string('editedby', 'forum', $data).')';
     }
+}
 
-    if (!$cm = get_coursemodule_from_instance('forum', $forum->id, $course->id)) { // For the logs
-        error('Could not get the course module for the forum instance.');
+if (!empty($parent)) {
+    $heading = get_string("yourreply", "forum");
+} else {
+    if ($forum->type == 'qanda') {
+        $heading = get_string('yournewquestion', 'forum');
+    } else {
+        $heading = get_string('yournewtopic', 'forum');
     }
-    $modcontext = get_context_instance(CONTEXT_MODULE, $cm->id);
+}
 
-    // setup course variable to force form language
-    // fix for MDL-6926
-    course_setup($course->id);
-    require_once('post_form.php');
+if (forum_is_subscribed($USER->id, $forum->id)) {
+    $subscribe = true;
 
-    $mform_post = new mod_forum_post_form('post.php', array('course'=>$course, 'cm'=>$cm, 'coursecontext'=>$coursecontext, 'modcontext'=>$modcontext, 'forum'=>$forum, 'post'=>$post));
+} else if (forum_user_has_posted($forum->id, 0, $USER->id)) {
+    $subscribe = false;
 
-    if ($fromform = $mform_post->get_data()) {
+} else {
+    // user not posted yet - use subscription default specified in profile
+    $subscribe = !empty($USER->autosubscribe);
+}
 
+$draftid_editor = file_get_submitted_draft_itemid('message');
+$currenttext = file_prepare_draft_area($draftid_editor, $modcontext->id, 'mod_forum', 'post', empty($post->id) ? null : $post->id, array('subdirs'=>true), $post->message);
+$mform_post->set_data(array(        'attachments'=>$draftitemid,
+                                    'general'=>$heading,
+                                    'subject'=>$post->subject,
+                                    'message'=>array(
+                                        'text'=>$currenttext,
+                                        'format'=>empty($post->messageformat) ? editors_get_preferred_format() : $post->messageformat,
+                                        'itemid'=>$draftid_editor
+                                    ),
+                                    'subscribe'=>$subscribe?1:0,
+                                    'mailnow'=>!empty($post->mailnow),
+                                    'userid'=>$post->userid,
+                                    'parent'=>$post->parent,
+                                    'discussion'=>$post->discussion,
+                                    'course'=>$course->id) +
+                                    $page_params +
 
-        require_login($course, false, $cm);
+                            (isset($post->format)?array(
+                                    'format'=>$post->format):
+                                array())+
+
+                            (isset($discussion->timestart)?array(
+                                    'timestart'=>$discussion->timestart):
+                                array())+
+
+                            (isset($discussion->timeend)?array(
+                                    'timeend'=>$discussion->timeend):
+                                array())+
+
+                            (isset($post->groupid)?array(
+                                    'groupid'=>$post->groupid):
+                                array())+
+
+                            (isset($discussion->id)?
+                                    array('discussion'=>$discussion->id):
+                                    array()));
+
+if ($fromform = $mform_post->get_data()) {
 
         if (empty($SESSION->fromurl)) {
             $errordestination = "$CFG->wwwroot/mod/forum/view.php?f=$forum->id";
@@ -466,10 +593,11 @@
             $errordestination = $SESSION->fromurl;
         }
 
-        // TODO add attachment processing
-        //$fromform->attachment = isset($_FILES['attachment']) ? $_FILES['attachment'] : NULL;
-
-        trusttext_after_edit($fromform->message, $modcontext);
+    $fromform->itemid        = $fromform->message['itemid'];
+    $fromform->messageformat = $fromform->message['format'];
+    $fromform->message       = $fromform->message['text'];
+    // WARNING: the $fromform->message array has been overwritten, do not use it anymore!
+    $fromform->messagetrust  = trusttext_trusted($modcontext);
 
         if ($fromform->edit) {           // Updating a post
             unset($fromform->groupid);
@@ -477,8 +605,8 @@
             $message = '';
 
             //fix for bug #4314
-            if (!$realpost = get_record('forum_posts', 'id', $fromform->id)) {
-                $realpost = new object;
+        if (!$realpost = $DB->get_record('forum_posts', array('id' => $fromform->id))) {
+            $realpost = new stdClass();
                 $realpost->userid = -1;
             }
 
@@ -490,22 +618,20 @@
             if ( !(($realpost->userid == $USER->id && (has_capability('mod/forum:replypost', $modcontext)
                                 || has_capability('mod/forum:startdiscussion', $modcontext))) ||
                                 has_capability('mod/forum:editanypost', $modcontext)) ) {
-                error("You can not update this post");
+            print_error('cannotupdatepost', 'forum');
             }
 
             $updatepost = $fromform; //realpost
             $updatepost->forum = $forum->id;
-            if (!forum_update_post($updatepost, $message)) {
+        if (!forum_update_post($updatepost, $mform_post, $message)) {
                 print_error("couldnotupdate", "forum", $errordestination);
             }
 
             // MDL-11818
             if (($forum->type == 'single') && ($updatepost->parent == '0')){ // updating first post of single discussion type -> updating forum intro
-                $forum->intro = stripslashes($updatepost->message);
+            $forum->intro = $updatepost->message;
                 $forum->timemodified = time();
-                if (!update_record("forum", addslashes_recursive($forum))) {
-                    print_error("couldnotupdate", "forum", $errordestination);
-                }
+            $DB->update_record("forum", $forum);
             }
 
             $timemessage = 2;
@@ -536,9 +662,9 @@
         } else if ($fromform->discussion) { // Adding a new post to an existing discussion
             unset($fromform->groupid);
             $message = '';
-            $addpost=$fromform;
+        $addpost = $fromform;
             $addpost->forum=$forum->id;
-            if ($fromform->id = forum_add_new_post($addpost, $message)) {
+        if ($fromform->id = forum_add_new_post($addpost, $mform_post, $message)) {
 
                 $timemessage = 2;
                 if (!empty($message)) { // if we're printing stuff about the file upload
@@ -568,6 +694,13 @@
                 add_to_log($course->id, "forum", "add post",
                           "$discussionurl&amp;parent=$fromform->id", "$fromform->id", $cm->id);
 
+            // Update completion state
+            $completion=new completion_info($course);
+            if($completion->is_enabled($cm) &&
+                ($forum->completionreplies || $forum->completionposts)) {
+                $completion->update_state($cm,COMPLETION_COMPLETE);
+            }
+
                 redirect(forum_go_back_to("$discussionurl#p$fromform->id"), $message.$subscribemessage, $timemessage);
 
             } else {
@@ -577,18 +710,18 @@
 
         } else {                     // Adding a new discussion
             if (!forum_user_can_post_discussion($forum, $fromform->groupid, -1, $cm, $modcontext)) {
-                error('Can not add discussion, sorry.');
+            print_error('cannotcreatediscussion', 'forum');
             }
             if (empty($fromform->groupid)) {
                 $fromform->groupid = -1;
             }
 
             $fromform->mailnow = empty($fromform->mailnow) ? 0 : 1;
+
             $discussion = $fromform;
             $discussion->name  = $fromform->subject;
-            $discussion->intro = $fromform->message;
-            $newstopic = false;
 
+        $newstopic = false;
             if ($forum->type == 'news' && !$fromform->parent) {
                 $newstopic = true;
             }
@@ -596,7 +729,7 @@
             $discussion->timeend = $fromform->timeend;
 
             $message = '';
-            if ($discussion->id = forum_add_discussion($discussion, $message)) {
+        if ($discussion->id = forum_add_discussion($discussion, $mform_post, $message)) {
 
                 add_to_log($course->id, "forum", "add discussion",
                         "discuss.php?d=$discussion->id", "$discussion->id", $cm->id);
@@ -618,6 +751,13 @@
                     $timemessage = 4;
                 }
 
+            // Update completion status
+            $completion=new completion_info($course);
+            if($completion->is_enabled($cm) &&
+                ($forum->completiondiscussions || $forum->completionposts)) {
+                $completion->update_state($cm,COMPLETION_COMPLETE);
+            }
+
                 redirect(forum_go_back_to("view.php?f=$fromform->forum"), $message.$subscribemessage, $timemessage);
 
             } else {
@@ -626,86 +766,84 @@
 
             exit;
         }
-    }
+}
 
 
 
-    // To get here they need to edit a post, and the $post
-    // variable will be loaded with all the particulars,
-    // so bring up the form.
+// To get here they need to edit a post, and the $post
+// variable will be loaded with all the particulars,
+// so bring up the form.
 
-    // $course, $forum are defined.  $discussion is for edit and reply only.
+// $course, $forum are defined.  $discussion is for edit and reply only.
 
-    $cm = get_coursemodule_from_instance("forum", $forum->id, $course->id);
-
-    require_login($course->id, false, $cm);
-
-    $modcontext = get_context_instance(CONTEXT_MODULE, $cm->id);
-
-    if ($post->discussion) {
-        if (! $toppost = get_record("forum_posts", "discussion", $post->discussion, "parent", 0)) {
-            error("Could not find top parent of post $post->id");
+if ($post->discussion) {
+    if (! $toppost = $DB->get_record("forum_posts", array("discussion" => $post->discussion, "parent" => 0))) {
+        print_error('cannotfindparentpost', 'forum', '', $post->id);
         }
-    } else {
+} else {
         $toppost->subject = ($forum->type == "news") ? get_string("addanewtopic", "forum") :
                                                        get_string("addanewdiscussion", "forum");
-    }
+}
 
-    if (empty($post->edit)) {
+if (empty($post->edit)) {
         $post->edit = '';
-    }
+}
 
-    if (empty($discussion->name)) {
+if (empty($discussion->name)) {
         if (empty($discussion)) {
-            $discussion = new object;
+        $discussion = new stdClass();
         }
         $discussion->name = $forum->name;
-    }
-    if ($forum->type == 'single') {
+}
+if ($forum->type == 'single') {
         // There is only one discussion thread for this forum type. We should
         // not show the discussion name (same as forum name in this case) in
         // the breadcrumbs.
         $strdiscussionname = '';
-    } else {
+} else {
         // Show the discussion name in the breadcrumbs.
         $strdiscussionname = format_string($discussion->name).':';
-    }
+}
 
-    $forcefocus = empty($reply) ? NULL : 'message';
+$forcefocus = empty($reply) ? NULL : 'message';
 
-    $navlinks = array();
-    if ($post->parent) {
-        $navlinks[] = array('name' => format_string($toppost->subject, true), 'link' => "discuss.php?d=$discussion->id", 'type' => 'title');
-        $navlinks[] = array('name' => get_string('editing', 'forum'), 'link' => '', 'type' => 'title');
-    } else {
-        $navlinks[] = array('name' => format_string($toppost->subject), 'link' => '', 'type' => 'title');
-    }
-    $navigation = build_navigation($navlinks, $cm);
+if (!empty($discussion->id)) {
+    $PAGE->navbar->add(format_string($toppost->subject, true), "discuss.php?d=$discussion->id");
+}
 
-    print_header("$course->shortname: $strdiscussionname ".
-                  format_string($toppost->subject), $course->fullname,
-                  $navigation, $mform_post->focus($forcefocus), "", true, "", navmenu($course, $cm));
+if ($post->parent) {
+    $PAGE->navbar->add(get_string('reply', 'forum'));
+}
 
-// checkup
-    if (!empty($parent) && !forum_user_can_see_post($forum, $discussion, $post, null, $cm)) {
-        error("You cannot reply to this post");
-    }
-    if (empty($parent) && empty($edit) && !forum_user_can_post_discussion($forum, $groupid, -1, $cm, $modcontext)) {
-        error("You cannot start a new discussion in this forum");
-    }
+if ($edit) {
+    $PAGE->navbar->add(get_string('edit', 'forum'));
+}
+
+$PAGE->set_title("$course->shortname: $strdiscussionname ".format_string($toppost->subject));
+$PAGE->set_heading($course->fullname);
+
+echo $OUTPUT->header();
 
-    if ($forum->type == 'qanda'
+// checkup
+if (!empty($parent) && !forum_user_can_see_post($forum, $discussion, $post, null, $cm)) {
+    print_error('cannotreply', 'forum');
+}
+if (empty($parent) && empty($edit) && !forum_user_can_post_discussion($forum, $groupid, -1, $cm, $modcontext)) {
+    print_error('cannotcreatediscussion', 'forum');
+}
+
+if ($forum->type == 'qanda'
                 && !has_capability('mod/forum:viewqandawithoutposting', $modcontext)
                 && !empty($discussion->id)
                 && !forum_user_has_posted($forum->id, $discussion->id, $USER->id)) {
-        notify(get_string('qandanotify','forum'));
-    }
+    echo $OUTPUT->notification(get_string('qandanotify','forum'));
+}
 
-    forum_check_throttling($forum, $cm);
+forum_check_throttling($forum, $cm);
 
-    if (!empty($parent)) {
-        if (! $discussion = get_record('forum_discussions', 'id', $parent->discussion)) {
-            error('This post is not part of a discussion!');
+if (!empty($parent)) {
+    if (! $discussion = $DB->get_record('forum_discussions', array('id' => $parent->discussion))) {
+        print_error('notpartofdiscussion', 'forum');
         }
 
         forum_print_post($parent, $discussion, $forum, $cm, $course, false, false, false);
@@ -713,85 +851,16 @@
             if ($forum->type != 'qanda' || forum_user_can_see_discussion($forum, $discussion, $modcontext)) {
                 $forumtracked = forum_tp_is_tracked($forum);
                 $posts = forum_get_all_discussion_posts($discussion->id, "created ASC", $forumtracked);
-                forum_print_posts_threaded($course, $cm, $forum, $discussion, $parent, 0, false, false, $forumtracked, $posts);
+            forum_print_posts_threaded($course, $cm, $forum, $discussion, $parent, 0, false, $forumtracked, $posts);
             }
         }
-        $heading = get_string("yourreply", "forum");
-    } else {
-        $forum->intro = trim($forum->intro);
+} else {
         if (!empty($forum->intro)) {
-            print_box(format_text($forum->intro), 'generalbox', 'intro');
-        }
-        if ($forum->type == 'qanda') {
-            $heading = get_string('yournewquestion', 'forum');
-        } else {
-            $heading = get_string('yournewtopic', 'forum');
-        }
-    }
-
-    if ($USER->id != $post->userid) {   // Not the original author, so add a message to the end
-        $data->date = userdate($post->modified);
-        if ($post->format == FORMAT_HTML) {
-            $data->name = '<a href="'.$CFG->wwwroot.'/user/view.php?id='.$USER->id.'&course='.$post->course.'">'.
-                           fullname($USER).'</a>';
-            $post->message .= '<p>(<span class="edited">'.get_string('editedby', 'forum', $data).'</span>)</p>';
-        } else {
-            $data->name = fullname($USER);
-            $post->message .= "\n\n(".get_string('editedby', 'forum', $data).')';
+        echo $OUTPUT->box(format_module_intro('forum', $forum, $cm->id), 'generalbox', 'intro');
         }
-    }
-
-    //load data into form
-
-    if (forum_is_subscribed($USER->id, $forum->id)) {
-        $subscribe = true;
-
-    } else if (forum_user_has_posted($forum->id, 0, $USER->id)) {
-        $subscribe = false;
-
-    } else {
-        // user not posted yet - use subscription default specified in profile
-        $subscribe = !empty($USER->autosubscribe);
-    }
-
-    // HACK ALERT: this is very wrong, the defaults should be always initialized before calling $mform->get_data() !!!
-    $mform_post->set_data(array(    'general'=>$heading,
-                                        'subject'=>$post->subject,
-                                        'message'=>$post->message,
-                                        'subscribe'=>$subscribe?1:0,
-                                        'mailnow'=>!empty($post->mailnow),
-                                        'userid'=>$post->userid,
-                                        'parent'=>$post->parent,
-                                        'discussion'=>$post->discussion,
-                                        'course'=>$course->id)+
-
-                                        $page_params+
-
-                                (isset($post->format)?array(
-                                        'format'=>$post->format):
-                                    array())+
-
-                                (isset($discussion->timestart)?array(
-                                        'timestart'=>$discussion->timestart):
-                                    array())+
-
-                                (isset($discussion->timeend)?array(
-                                        'timeend'=>$discussion->timeend):
-                                    array())+
-
-                                (isset($post->groupid)?array(
-                                        'groupid'=>$post->groupid):
-                                    array())+
-
-                                (isset($discussion->id)?
-                                        array('discussion'=>$discussion->id):
-                                        array()));
-
-
-    $mform_post->display();
-
+}
 
-    print_footer($course);
+$mform_post->display();
 
+echo $OUTPUT->footer();
 
-?>
