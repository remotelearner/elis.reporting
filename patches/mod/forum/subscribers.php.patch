diff --git a/mod/forum/subscribers.php b/mod/forum/subscribers.php
index 72b7ceb..086ed3a 100644
--- a/mod/forum/subscribers.php
+++ b/mod/forum/subscribers.php
@@ -1,156 +1,116 @@
-<?php  // $Id$
-
-    require_once("../../config.php");
-    require_once("lib.php");
-
-    $id    = required_param('id',PARAM_INT);           // forum
-    $group = optional_param('group',0,PARAM_INT);      // change of group
-    $edit  = optional_param('edit',-1,PARAM_BOOL);     // Turn editing on and off
-
-    if (! $forum = get_record("forum", "id", $id)) {
-        error("Forum ID is incorrect");
-    }
-
-    if (! $course = get_record("course", "id", $forum->course)) {
-        error("Could not find this course!");
-    }
-
-    if (! $cm = get_coursemodule_from_instance("forum", $forum->id, $course->id)) {
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file is used to display and organise forum subscribers
+ *
+ * @package mod-forum
+ * @copyright 1999 onwards Martin Dougiamas  {@link http://moodle.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+require_once("../../config.php");
+require_once("lib.php");
+
+$id    = required_param('id',PARAM_INT);           // forum
+$group = optional_param('group',0,PARAM_INT);      // change of group
+$edit  = optional_param('edit',-1,PARAM_BOOL);     // Turn editing on and off
+
+$url = new moodle_url('/mod/forum/subscribers.php', array('id'=>$id));
+if ($group !== 0) {
+    $url->param('group', $group);
+}
+if ($edit !== 0) {
+    $url->param('edit', $edit);
+}
+$PAGE->set_url($url);
+
+$forum = $DB->get_record('forum', array('id'=>$id), '*', MUST_EXIST);
+$course = $DB->get_record('course', array('id'=>$forum->course), '*', MUST_EXIST);
+if (! $cm = get_coursemodule_from_instance('forum', $forum->id, $course->id)) {
         $cm->id = 0;
-    }
-
-    require_login($course->id, false, $cm);
+}
 
-    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
+require_login($course->id, false, $cm);
 
-    if (!has_capability('mod/forum:viewsubscribers', $context)) {
-        error('You do not have the permission to view forum subscribers');
-    }
-
-    unset($SESSION->fromdiscussion);
+$context = get_context_instance(CONTEXT_MODULE, $cm->id);
+if (!has_capability('mod/forum:viewsubscribers', $context)) {
+    print_error('nopermissiontosubscribe', 'forum');
+}
 
-    add_to_log($course->id, "forum", "view subscribers", "subscribers.php?id=$forum->id", $forum->id, $cm->id);
+unset($SESSION->fromdiscussion);
 
-    $strsubscribeall = get_string("subscribeall", "forum");
-    $strsubscribenone = get_string("subscribenone", "forum");
-    $strsubscribers = get_string("subscribers", "forum");
-    $strforums = get_string("forums", "forum");
+add_to_log($course->id, "forum", "view subscribers", "subscribers.php?id=$forum->id", $forum->id, $cm->id);
 
-    $navigation = build_navigation($strsubscribers, $cm);
+$forumoutput = $PAGE->get_renderer('mod_forum');
+$currentgroup = groups_get_activity_group($cm);
+$options = array('forumid'=>$forum->id, 'currentgroup'=>$currentgroup, 'context'=>$context);
+$existingselector = new forum_existing_subscriber_selector('existingsubscribers', $options);
+$subscriberselector = new forum_potential_subscriber_selector('potentialsubscribers', $options);
+$subscriberselector->set_existing_subscribers($existingselector->find_users(''));
 
-    if (has_capability('mod/forum:managesubscriptions', $context)) {
-        print_header_simple("$strsubscribers", "", $navigation,
-            "", "", true, forum_update_subscriptions_button($course->id, $id));
-        if ($edit != -1) {
-            $USER->subscriptionsediting = $edit;
-        }
-    } else {
-        print_header_simple("$strsubscribers", "", $navigation, "", "", true, '');
-        unset($USER->subscriptionsediting);
+if (data_submitted()) {
+    require_sesskey();
+    $subscribe = (bool)optional_param('subscribe', false, PARAM_RAW);
+    $unsubscribe = (bool)optional_param('unsubscribe', false, PARAM_RAW);
+    /** It has to be one or the other, not both or neither */
+    if (!($subscribe xor $unsubscribe)) {
+        print_error('invalidaction');
     }
-
-/// Check to see if groups are being used in this forum
-    groups_print_activity_menu($cm, $CFG->wwwroot . "/mod/forum/subscribers.php?id=$forum->id");
-    $currentgroup = groups_get_activity_group($cm);
-    $groupmode = groups_get_activity_groupmode($cm);
-
-    if (empty($USER->subscriptionsediting)) {         /// Display an overview of subscribers
-
-        if (! $users = forum_subscribed_users($course, $forum, $currentgroup, $context) ) {
-
-            print_heading(get_string("nosubscribers", "forum"));
-
-        } else {
-
-            print_heading(get_string("subscribersto","forum", "'".format_string($forum->name)."'"));
-
-            echo '<table align="center" cellpadding="5" cellspacing="5">';
+    if ($subscribe) {
+        $users = $subscriberselector->get_selected_users();
             foreach ($users as $user) {
-                echo '<tr><td>';
-                print_user_picture($user, $course->id);
-                echo '</td><td>';
-                echo fullname($user);
-                echo '</td><td>';
-                echo $user->email;
-                echo '</td></tr>';
-            }
-            echo "</table>";
+            if (!forum_subscribe($user->id, $id)) {
+                print_error('cannotaddsubscriber', 'forum', '', $user->id);
         }
-
-        print_footer($course);
-        exit;
     }
-
-/// We are in editing mode.
-
-    $strexistingsubscribers   = get_string("existingsubscribers", 'forum');
-    $strpotentialsubscribers  = get_string("potentialsubscribers", 'forum');
-    $straddsubscriber    = get_string("addsubscriber", 'forum');
-    $strremovesubscriber = get_string("removesubscriber", 'forum');
-    $strsearch        = get_string("search");
-    $strsearchresults  = get_string("searchresults");
-    $strshowall = get_string("showall");
-    $strsubscribers = get_string("subscribers", "forum");
-    $strforums      = get_string("forums", "forum");
-
-    $searchtext = optional_param('searchtext', '', PARAM_RAW);
-    if ($frm = data_submitted() and confirm_sesskey()) {
-
-/// A form was submitted so process the input
-        if (!empty($frm->add) and !empty($frm->addselect)) {
-            foreach ($frm->addselect as $addsubscriber) {
-                if (! forum_subscribe($addsubscriber, $id)) {
-                    error("Could not add subscriber with id $addsubscriber to this forum!");
-                }
-            }
-        } else if (!empty($frm->remove) and !empty($frm->removeselect)) {
-            foreach ($frm->removeselect as $removesubscriber) {
-                if (! forum_unsubscribe($removesubscriber, $id)) {
-                    error("Could not remove subscriber with id $removesubscriber from this forum!");
-                }
-            }
-        } else if (!empty($frm->showall)) {
-            $searchtext = '';
+    } else if ($unsubscribe) {
+        $users = $existingselector->get_selected_users();
+        foreach ($users as $user) {
+            if (!forum_unsubscribe($user->id, $id)) {
+                print_error('cannotremovesubscriber', 'forum', '', $user->id);
         }
     }
-
-/// Get all existing subscribers for this forum.
-    if (!$subscribers = forum_subscribed_users($course, $forum, $currentgroup, $context)) {
-        $subscribers = array();
     }
+    $subscriberselector->invalidate_selected_users();
+    $existingselector->invalidate_selected_users();
+    $subscriberselector->set_existing_subscribers($existingselector->find_users(''));
+}
 
-/// Get all the potential subscribers excluding users already subscribed
-    $users = forum_get_potential_subscribers($context, $currentgroup, 'u.id,u.email,u.firstname,u.lastname', 'u.firstname ASC, u.lastname ASC');
-    if (!$users) {
-        $users = array();
-    }
-    foreach ($subscribers as $subscriber) {
-        unset($users[$subscriber->id]);
-    }
-
-/// This is yucky, but do the search in PHP, becuase the list we are using comes from get_users_by_capability,
-/// which does not allow searching in the database. Fortunately the list is only this list of users in this
-/// course, which is normally OK, except on the site course of a big site. But before you can enter a search
-/// term, you have already seen a page that lists everyone, since this code never does paging, so you have probably
-/// already crashed your server if you are going to. This will be fixed properly for Moodle 2.0: MDL-17550.
-    if ($searchtext) {
-        $searchusers = array();
-        $lcsearchtext = moodle_strtolower($searchtext);
-        foreach ($users as $userid => $user) {
-            if (strpos(moodle_strtolower($user->email), $lcsearchtext) !== false ||
-                    strpos(moodle_strtolower($user->firstname . ' ' . $user->lastname), $lcsearchtext) !== false) {
-                $searchusers[$userid] = $user;
-            }
-            unset($users[$userid]);
-        }
+$strsubscribers = get_string("subscribers", "forum");
+$PAGE->navbar->add($strsubscribers);
+$PAGE->set_title($strsubscribers);
+$PAGE->set_heading($COURSE->fullname);
+if (has_capability('mod/forum:managesubscriptions', $context)) {
+    $PAGE->set_button(forum_update_subscriptions_button($course->id, $id));
+    if ($edit != -1) {
+        $USER->subscriptionsediting = $edit;
     }
-
-    print_simple_box_start('center');
-
-    include('subscriber.html');
-
-    print_simple_box_end();
-
-    print_footer($course);
-
-?>
+} else {
+    unset($USER->subscriptionsediting);
+}
+echo $OUTPUT->header();
+echo $OUTPUT->heading(get_string('forum', 'forum').' '.$strsubscribers);
+if (empty($USER->subscriptionsediting)) {
+    echo $forumoutput->subscriber_overview(forum_subscribed_users($course, $forum, $currentgroup, $context), $forum, $course);
+} else if (forum_is_forcesubscribed($forum)) {
+    $subscriberselector->set_force_subscribed(true);
+    echo $forumoutput->subscribed_users($subscriberselector);
+} else {
+    echo $forumoutput->subscriber_selection_form($existingselector, $subscriberselector);
+}
+echo $OUTPUT->footer();
\ No newline at end of file
