diff --git a/mod/survey/report.php b/mod/survey/report.php
index 16eb8e6..2adb15e 100644
--- a/mod/survey/report.php
+++ b/mod/survey/report.php
@@ -1,4 +1,27 @@
-<?php // $Id$
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file is responsible for producing the survey reports
+ *
+ * @package   mod-survey
+ * @copyright 1999 onwards Martin Dougiamas  {@link http://moodle.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
     require_once("../../config.php");
     require_once("lib.php");
@@ -16,25 +39,40 @@
     $qid = implode (',', $qids);
 
     if (! $cm = get_coursemodule_from_id('survey', $id)) {
-        error("Course Module ID was incorrect");
+        print_error('invalidcoursemodule');
     }
 
-    if (! $course = get_record("course", "id", $cm->course)) {
-        error("Course is misconfigured");
+    if (! $course = $DB->get_record("course", array("id"=>$cm->course))) {
+        print_error('coursemisconf');
     }
 
+    $url = new moodle_url('/mod/survey/report.php', array('id'=>$id));
+    if ($action !== '') {
+        $url->param('action', $action);
+    }
+    if ($qid !== 0) {
+        $url->param('qid', $qid);
+    }
+    if ($student !== 0) {
+        $url->param('student', $student);
+    }
+    if ($notes !== '') {
+        $url->param('notes', $notes);
+    }
+    $PAGE->set_url($url);
+
     require_login($course->id, false, $cm);
     
     $context = get_context_instance(CONTEXT_MODULE, $cm->id);
 
     require_capability('mod/survey:readresponses', $context);
 
-    if (! $survey = get_record("survey", "id", $cm->instance)) {
-        error("Survey ID was incorrect");
+    if (! $survey = $DB->get_record("survey", array("id"=>$cm->instance))) {
+        print_error('invalidsurveyid', 'survey');
     }
 
-    if (! $template = get_record("survey", "id", $survey->template)) {
-        error("Template ID was incorrect");
+    if (! $template = $DB->get_record("survey", array("id"=>$survey->template))) {
+        print_error('invalidtmptid', 'survey');
     }
 
     $showscales = ($template->name != 'ciqname');
@@ -56,19 +94,32 @@
 
     add_to_log($course->id, "survey", "view report", "report.php?id=$cm->id", "$survey->id", $cm->id);
 
-    if ($course->id != SITEID) {
-        $navigation = "<a href=\"../../course/view.php?id=$course->id\">$course->shortname</a> ->
-                       <a href=\"index.php?id=$course->id\">$strsurveys</a> ->
-                       <a href=\"view.php?id=$cm->id\">".format_string($survey->name,true)."</a> -> ";
-    } else {
-        $navigation = "<a href=\"index.php?id=$course->id\">$strsurveys</a> ->
-                       <a href=\"view.php?id=$cm->id\">".format_string($survey->name,true)."</a> -> ";
+    switch ($action) {
+        case 'download':
+            $PAGE->navbar->add(get_string('downloadresults', 'survey'));
+            break;
+        case 'summary':
+        case 'scales':
+        case 'questions':
+            $PAGE->navbar->add($strreport);
+            $PAGE->navbar->add(${'str'.$action});
+            break;
+        case 'students':
+            $PAGE->navbar->add($strreport);
+            $PAGE->navbar->add(get_string('participants'));
+            break;
+        case '':
+            $PAGE->navbar->add($strreport);
+            $PAGE->navbar->add($strsummary);
+            break;
+        default:
+            $PAGE->navbar->add($strreport);
+            break;
     }
     
-    $navigation = build_navigation($strreport, $cm);
-    print_header("$course->shortname: ".format_string($survey->name), $course->fullname, $navigation,
-                 "", "", true,
-                 update_module_button($cm->id, $course->id, $strsurvey), navmenu($course, $cm));
+    $PAGE->set_title("$course->shortname: ".format_string($survey->name));
+    $PAGE->set_heading($course->fullname);
+    echo $OUTPUT->header();
 
 /// Check to see if groups are being used in this survey
     if ($groupmode = groups_get_activity_groupmode($cm)) {   // Groups are being used
@@ -80,20 +131,24 @@
     }
 
     if ($currentgroup) {
-        $users = groups_get_members($currentgroup);
-    } else if (!empty($CFG->enablegroupings) && !empty($cm->groupingid)) { 
-        $users = groups_get_grouping_members($cm->groupingid);
+        $users = get_users_by_capability($context, 'mod/survey:participate', '', '', '', '', $currentgroup, null, false);
+    } else if (!empty($cm->groupingid)) {
+        $groups = groups_get_all_groups($courseid, 0, $cm->groupingid);
+        $groups = array_keys($groups);
+        $users = get_users_by_capability($context, 'mod/survey:participate', '', '', '', '', $groups, null, false);
     } else {
-        $users = get_course_users($course->id);
+        $users = get_users_by_capability($context, 'mod/survey:participate', '', '', '', '', '', null, false);
+        $group = false;
     }
+
     $groupingid = $cm->groupingid;
     
-    print_simple_box_start("center");
+    echo $OUTPUT->box_start("generalbox boxaligncenter");
     if ($showscales) {
         echo "<a href=\"report.php?action=summary&amp;id=$id\">$strsummary</a>";
         echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=scales&amp;id=$id\">$strscales</a>";
         echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=questions&amp;id=$id\">$strquestions</a>";
-        echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=students&amp;id=$id\">$course->students</a>";
+        echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=students&amp;id=$id\">".get_string('participants')."</a>";
         if (has_capability('mod/survey:download', $context)) {
             echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=download&amp;id=$id\">$strdownload</a>";
         }
@@ -102,7 +157,7 @@
         }
     } else {
         echo "<a href=\"report.php?action=questions&amp;id=$id\">$strquestions</a>";
-        echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=students&amp;id=$id\">$course->students</a>";
+        echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=students&amp;id=$id\">".get_string('participants')."</a>";
         if (has_capability('mod/survey:download', $context)) {
             echo "&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"report.php?action=download&amp;id=$id\">$strdownload</a>";
         }
@@ -110,9 +165,9 @@
             $action = "questions";
         }
     }
-    print_simple_box_end();
+    echo $OUTPUT->box_end();
 
-    print_spacer(30,30);
+    echo $OUTPUT->spacer(array('height'=>30, 'width'=>30, 'br'=>true)); // should be done with CSS instead
 
 
 /// Print the menu across the top
@@ -122,26 +177,26 @@
     switch ($action) {
 
       case "summary":
-        print_heading($strsummary);
+        echo $OUTPUT->heading($strsummary);
 
         if (survey_count_responses($survey->id, $currentgroup, $groupingid)) {
             echo "<div class='reportsummary'><a href=\"report.php?action=scales&amp;id=$id\">";
             survey_print_graph("id=$id&amp;group=$currentgroup&amp;type=overall.png");
             echo "</a></div>";
         } else {
-            notify(get_string("nobodyyet","survey"));
+            echo $OUTPUT->notification(get_string("nobodyyet","survey"));
         }
         break;
 
       case "scales":
-        print_heading($strscales);
+        echo $OUTPUT->heading($strscales);
 
         if (! $results = survey_get_responses($survey->id, $currentgroup, $groupingid) ) {
-            notify(get_string("nobodyyet","survey"));
+            echo $OUTPUT->notification(get_string("nobodyyet","survey"));
 
         } else {
 
-            $questions = get_records_list("survey_questions", "id", $survey->questions);
+            $questions = $DB->get_records_list("survey_questions", "id", explode(',', $survey->questions));
             $questionorder = explode(",", $survey->questions);
 
             foreach ($questionorder as $key => $val) {
@@ -170,25 +225,25 @@
       case "questions":
 
         if ($qid) {     // just get one multi-question
-            $questions = get_records_list("survey_questions", "id", $qid);
+            $questions = $DB->get_records_select("survey_questions", "id in ($qid)");
             $questionorder = explode(",", $qid);
 
-            if ($scale = get_records("survey_questions", "multi", "$qid")) {
+            if ($scale = $DB->get_records("survey_questions", array("multi"=>$qid))) {
                 $scale = array_pop($scale);
-                print_heading("$scale->text - $strselectedquestions");
+                echo $OUTPUT->heading("$scale->text - $strselectedquestions");
             } else {
-                print_heading($strselectedquestions);
+                echo $OUTPUT->heading($strselectedquestions);
             }
 
         } else {        // get all top-level questions
-            $questions = get_records_list("survey_questions", "id", $survey->questions);
+            $questions = $DB->get_records_list("survey_questions", "id", explode(',',$survey->questions));
             $questionorder = explode(",", $survey->questions);
 
-            print_heading($strallquestions);
+            echo $OUTPUT->heading($strallquestions);
         }
 
         if (! $results = survey_get_responses($survey->id, $currentgroup, $groupingid) ) {
-            notify(get_string("nobodyyet","survey"));
+            echo $OUTPUT->notification(get_string("nobodyyet","survey"));
 
         } else {
 
@@ -211,7 +266,7 @@
                 if ($question->multi) {
                     echo "<h3>$question->text:</h3>";
 
-                    $subquestions = get_records_list("survey_questions", "id", $question->multi);
+                    $subquestions = $DB->get_records_list("survey_questions", "id", explode(',', $question->multi));
                     $subquestionorder = explode(",", $question->multi);
                     foreach ($subquestionorder as $key => $val) {
                         $subquestion = $subquestions[$val];
@@ -229,7 +284,7 @@
                     echo "</a></p>";
 
                 } else {
-                    $table = NULL;
+                    $table = new html_table();
                     $table->head = array($question->text);
                     $table->align = array ("left");
 
@@ -247,8 +302,9 @@
 
                     $table->data[] = array($contents);
 
-                    print_table($table);
-                    print_spacer(30);
+                    echo html_writer::table($table);
+
+                    echo $OUTPUT->spacer(array('height'=>30)); // should be done with CSS instead
                 }
             }
         }
@@ -256,14 +312,14 @@
         break;
 
       case "question":
-        if (!$question = get_record("survey_questions", "id", $qid)) {
-            error("Question doesn't exist");
+        if (!$question = $DB->get_record("survey_questions", array("id"=>$qid))) {
+            print_error('cannotfindquestion', 'survey');
         }
         $question->text = get_string($question->text, "survey");
 
         $answers =  explode(",", get_string($question->options, "survey"));
 
-        print_heading("$strquestion: $question->text");
+        echo $OUTPUT->heading("$strquestion: $question->text");
 
 
         $strname = get_string("name", "survey");
@@ -272,7 +328,7 @@
         $strpreferred = get_string("preferred", "survey");
         $strdateformat = get_string("strftimedatetime");
 
-        $table = NULL;
+        $table = new html_table();
         $table->head = array("", $strname, $strtime, $stractual, $strpreferred);
         $table->align = array ("left", "left", "left", "left", "right");
         $table->size = array (35, "", "", "", "");
@@ -289,9 +345,8 @@
                 } else {
                     $answer2 = "&nbsp;";
                 }
-
                 $table->data[] = array(
-                       print_user_picture($a->userid, $course->id, $a->picture, false, true, true),
+                       $OUTPUT->user_picture($a, array('courseid'=>$course->id)),
                        "<a href=\"report.php?id=$id&amp;action=student&amp;student=$a->userid\">".fullname($a)."</a>",
                        userdate($a->time),
                        $answer1, $answer2);
@@ -299,16 +354,16 @@
             }
         }
 
-        print_table($table);
+        echo html_writer::table($table);
 
         break;
 
       case "students":
 
-         print_heading(get_string("analysisof", "survey", "$course->students"));
+         echo $OUTPUT->heading(get_string("analysisof", "survey", get_string('participants')));
 
          if (! $results = survey_get_responses($survey->id, $currentgroup, $groupingid) ) {
-             notify(get_string("nobodyyet","survey"));
+             echo $OUTPUT->notification(get_string("nobodyyet","survey"));
          } else {
              survey_print_all_responses($cm->id, $results, $course->id);
          }
@@ -316,33 +371,33 @@
         break;
 
       case "student":
-         if (!$user = get_record("user", "id", $student)) {
-             error("Student doesn't exist");
+         if (!$user = $DB->get_record("user", array("id"=>$student))) {
+             print_error('invaliduserid');
          }
 
-         print_heading(get_string("analysisof", "survey", fullname($user)));
+         echo $OUTPUT->heading(get_string("analysisof", "survey", fullname($user)));
 
          if ($notes != '' and confirm_sesskey()) {
              if (survey_get_analysis($survey->id, $user->id)) {
                  if (! survey_update_analysis($survey->id, $user->id, $notes)) {
-                     notify("An error occurred while saving your notes.  Sorry.");
+                     echo $OUTPUT->notification("An error occurred while saving your notes.  Sorry.");
                  } else {
-                     notify(get_string("savednotes", "survey"));
+                     echo $OUTPUT->notification(get_string("savednotes", "survey"));
                  }
              } else {
                  if (! survey_add_analysis($survey->id, $user->id, $notes)) {
-                     notify("An error occurred while saving your notes.  Sorry.");
+                     echo $OUTPUT->notification("An error occurred while saving your notes.  Sorry.");
                  } else {
-                     notify(get_string("savednotes", "survey"));
+                     echo $OUTPUT->notification(get_string("savednotes", "survey"));
                  }
              }
          }
 
          echo "<p <p class=\"centerpara\">";
-         print_user_picture($user->id, $course->id, $user->picture, true);
+         echo $OUTPUT->user_picture($user, array('courseid'=>$course->id));
          echo "</p>";
 
-         $questions = get_records_list("survey_questions", "id", $survey->questions);
+         $questions = $DB->get_records_list("survey_questions", "id", explode(',', $survey->questions));
          $questionorder = explode(",", $survey->questions);
 
          if ($showscales) {
@@ -381,12 +436,12 @@
              $question = $questions[$val];
              if ($question->type == 0 or $question->type == 1) {
                  if ($answer = survey_get_user_answer($survey->id, $question->id, $user->id)) {
-                     $table = NULL;
+                    $table = new html_table();
                      $table->head = array(get_string($question->text, "survey"));
                      $table->align = array ("left");
                      $table->data[] = array(s($answer->answer1)); // no html here, just plain text
-                     print_table($table);
-                     print_spacer(30);
+                     echo html_writer::table($table);
+                     echo $OUTPUT->spacer(array('height'=>30));
                  }
              }
          }
@@ -417,29 +472,29 @@
          break;
 
       case "download":
-        print_heading($strdownload);
+        echo $OUTPUT->heading($strdownload);
 
         require_capability('mod/survey:download', $context);
 
         echo '<p class="centerpara">'.get_string("downloadinfo", "survey").'</p>';
 
-        echo '<div class="reportbuttons">';
-        $optons = array();
+        echo $OUTPUT->container_start('reportbuttons');
+        $options = array();
         $options["id"] = "$cm->id";
         $options["group"] = $currentgroup;
 
         $options["type"] = "ods";
-        print_single_button("download.php", $options, get_string("downloadods"));
+        echo $OUTPUT->single_button(new moodle_url("download.php", $options), get_string("downloadods"));
 
         $options["type"] = "xls";
-        print_single_button("download.php", $options, get_string("downloadexcel"));
+        echo $OUTPUT->single_button(new moodle_url("download.php", $options), get_string("downloadexcel"));
 
         $options["type"] = "txt";
-        print_single_button("download.php", $options, get_string("downloadtext"));
-        echo '</div>';
+        echo $OUTPUT->single_button(new moodle_url("download.php", $options), get_string("downloadtext"));
+        echo $OUTPUT->container_end();
 
         break;
 
     }
-    print_footer($course);
-?>
+    echo $OUTPUT->footer();
+
