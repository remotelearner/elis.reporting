diff --git a/mod/survey/view.php b/mod/survey/view.php
index d70ba8a..34e2f68 100644
--- a/mod/survey/view.php
+++ b/mod/survey/view.php
@@ -1,4 +1,27 @@
-<?php // $Id$
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file is responsible for displaying the survey
+ *
+ * @package   mod-survey
+ * @copyright 1999 onwards Martin Dougiamas  {@link http://moodle.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
     require_once("../../config.php");
     require_once("lib.php");
@@ -6,38 +29,43 @@
     $id = required_param('id', PARAM_INT);    // Course Module ID
 
     if (! $cm = get_coursemodule_from_id('survey', $id)) {
-        error("Course Module ID was incorrect");
+        print_error('invalidcoursemodule');
     }
 
-    if (! $course = get_record("course", "id", $cm->course)) {
-        error("Course is misconfigured");
+    if (! $course = $DB->get_record("course", array("id"=>$cm->course))) {
+        print_error('coursemisconf');
     }
 
+    $PAGE->set_url('/mod/survey/view.php', array('id'=>$id));
     require_login($course->id, false, $cm);
-    
     $context = get_context_instance(CONTEXT_MODULE, $cm->id);
 
     require_capability('mod/survey:participate', $context);
 
-    if (! $survey = get_record("survey", "id", $cm->instance)) {
-        error("Survey ID was incorrect");
+    if (! $survey = $DB->get_record("survey", array("id"=>$cm->instance))) {
+        print_error('invalidsurveyid', 'survey');
     }
     $trimmedintro = trim($survey->intro);
     if (empty($trimmedintro)) {
-        $tempo = get_field("survey", "intro", "id", $survey->template);
+        $tempo = $DB->get_field("survey", "intro", array("id"=>$survey->template));
         $survey->intro = get_string($tempo, "survey");
     }
 
-    if (! $template = get_record("survey", "id", $survey->template)) {
-        error("Template ID was incorrect");
+    if (! $template = $DB->get_record("survey", array("id"=>$survey->template))) {
+        print_error('invalidtmptid', 'survey');
     }
 
+// Update 'viewed' state if required by completion system
+require_once($CFG->libdir . '/completionlib.php');
+$completion = new completion_info($course);
+$completion->set_module_viewed($cm);
+
     $showscales = ($template->name != 'ciqname');
 
     $strsurvey = get_string("modulename", "survey");
-    $navigation = build_navigation('', $cm);
-    print_header_simple(format_string($survey->name), "", $navigation, "", "", true,
-                  update_module_button($cm->id, $course->id, $strsurvey), navmenu($course, $cm));
+    $PAGE->set_title(format_string($survey->name));
+    $PAGE->set_heading($course->fullname);
+    echo $OUTPUT->header();
 
 /// Check to see if groups are being used in this survey
     if ($groupmode = groups_get_activity_groupmode($cm)) {   // Groups are being used
@@ -59,8 +87,8 @@
         notice(get_string("activityiscurrentlyhidden"));
     }
 
-    if (isguest()) {
-        notify(get_string("guestsnotallowed", "survey"));
+    if (!is_enrolled($context)) {
+        echo $OUTPUT->notification(get_string("guestsnotallowed", "survey"));
     }
 
 
@@ -72,35 +100,35 @@
         $numusers = survey_count_responses($survey->id, $currentgroup, $groupingid);
 
         if ($showscales) {
-            print_heading(get_string("surveycompleted", "survey"));
-            print_heading(get_string("peoplecompleted", "survey", $numusers));
+            echo $OUTPUT->heading(get_string("surveycompleted", "survey"));
+            echo $OUTPUT->heading(get_string("peoplecompleted", "survey", $numusers));
             echo '<div class="resultgraph">';
             survey_print_graph("id=$cm->id&amp;sid=$USER->id&amp;group=$currentgroup&amp;type=student.png");
             echo '</div>';
 
         } else {
 
-            print_box(format_text($survey->intro), 'generalbox', 'intro');
-            print_spacer(30);
+            echo $OUTPUT->box(format_module_intro('survey', $survey, $cm->id), 'generalbox', 'intro');
+            echo $OUTPUT->spacer(array('height'=>30, 'width'=>1, 'br'=>true)); // should be done with CSS instead
 
-            $questions = get_records_list("survey_questions", "id", $survey->questions);
+            $questions = $DB->get_records_list("survey_questions", "id", explode(',', $survey->questions));
             $questionorder = explode(",", $survey->questions);
             foreach ($questionorder as $key => $val) {
                 $question = $questions[$val];
                 if ($question->type == 0 or $question->type == 1) {
                     if ($answer = survey_get_user_answer($survey->id, $question->id, $USER->id)) {
-                        $table = NULL;
+                        $table = new html_table();
                         $table->head = array(get_string($question->text, "survey"));
                         $table->align = array ("left");
                         $table->data[] = array(s($answer->answer1));//no html here, just plain text
-                        print_table($table);
-                        print_spacer(30);
+                        echo html_writer::table($table);
+                        echo $OUTPUT->spacer(clone($spacer)) . '<br />';
                     }
                 }
             }
         }
 
-        print_footer($course);
+        echo $OUTPUT->footer();
         exit;
     }
 
@@ -112,17 +140,21 @@
     echo "<input type=\"hidden\" name=\"id\" value=\"$id\" />";
     echo "<input type=\"hidden\" name=\"sesskey\" value=\"".sesskey()."\" />";
 
-    print_simple_box(format_text($survey->intro), 'center', '70%', '', 5, 'generalbox', 'intro');
+    echo $OUTPUT->box(format_module_intro('survey', $survey, $cm->id), 'generalbox boxaligncenter bowidthnormal', 'intro');
+    echo '<div>'. get_string('allquestionrequireanswer', 'survey'). '</div>';
 
 // Get all the major questions and their proper order
-    if (! $questions = get_records_list("survey_questions", "id", $survey->questions)) {
-        error("Couldn't find any questions in this survey!!");
+    if (! $questions = $DB->get_records_list("survey_questions", "id", explode(',', $survey->questions))) {
+        print_error('cannotfindquestion', 'survey');
     }
     $questionorder = explode( ",", $survey->questions);
 
 // Cycle through all the questions in order and print them
 
+    global $qnum;  //TODO: ugly globals hack for survey_print_*()
+    global $checklist; //TODO: ugly globals hack for survey_print_*()
     $qnum = 0;
+    $checklist = array();
     foreach ($questionorder as $key => $val) {
         $question = $questions["$val"];
         $question->id = $val;
@@ -153,55 +185,29 @@
         }
     }
 
-    if (isguest()) {
+    if (!is_enrolled($context)) {
         echo '</div>';  
         echo "</form>";
-        print_footer($course);
+        echo $OUTPUT->footer();
         exit;
     }
 
-?>
-
-<br />
-<script type="text/javascript">
-<!--
-function checkform() {
-
-    var error=false;
-
-    with (document.getElementById('surveyform')) {
-    <?php
+    $checkarray = Array('questions'=>Array());
        if (!empty($checklist)) {
            foreach ($checklist as $question => $default) {
-               echo "  if (".$question."[".$default."].checked) error=true;\n";
-           }
+           $checkarray['questions'][] = Array('question'=>$question, 'default'=>$default);
        }
-    ?>
     }
+    $PAGE->requires->js('/mod/survey/survey.js');
+    $PAGE->requires->data_for_js('surveycheck', $checkarray);
+    $PAGE->requires->string_for_js('questionsnotanswered', 'survey');
+    $PAGE->requires->js_function_call('survey_attach_onsubmit');
 
-    if (error) {
-        alert("<?php print_string("questionsnotanswered", "survey") ?>");
-    } else {
-        document.getElementById('surveyform').submit();
-    }
-}
-
-<?php echo "document.write('<input type=\"button\" value=\"".get_string("clicktocontinuecheck", "survey")."\" onClick=\"checkform()\" />');";  ?>
-
-// END -->    
-</script>
-
-<noscript>
-    <!-- Without Javascript, no checking is done -->
-    <div>
-    <input type="submit" value="<?php  get_string("clicktocontinue", "survey") ?>" />
-    </div>
-</noscript>
-
-<?php
+    echo '<br />';
+    echo '<input type="submit" value="'.get_string("clicktocontinue", "survey").'" />';
    echo '</div>';
    echo "</form>";
 
-   print_footer($course);
+    echo $OUTPUT->footer();
+
 
-?>
