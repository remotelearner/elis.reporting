diff --git a/mod/workshop/db/access.php b/mod/workshop/db/access.php
index 0518d09..5749b27 100644
--- a/mod/workshop/db/access.php
+++ b/mod/workshop/db/access.php
@@ -1,32 +1,220 @@
-<?php // $Id$
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
 /**
- * Capability definitions for the workshop module.
+ * Capability definitions for the workshop module
  *
- * For naming conventions, see lib/db/access.php.
+ * @package    mod
+ * @subpackage workshop
+ * @copyright  2009 David Mudrak <david.mudrak@gmail.com>
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  */
-$mod_workshop_capabilities = array(
 
-    'mod/workshop:participate' => array(
+defined('MOODLE_INTERNAL') || die();
+
+$capabilities = array(
 
-        'riskbitmask' => RISK_SPAM,
+    // Ability to see that the workshop exists, and the basic information
+    // about it, for example the intro field
+    'mod/workshop:view' => array(
+        'captype' => 'read',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'guest' => CAP_ALLOW,
+            'student' => CAP_ALLOW,
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
 
+    // Ability to change the current phase (stage) of the workshop, for example
+    // allow submitting, start assessment period, close workshop etc.
+    'mod/workshop:switchphase' => array(
         'captype' => 'write',
         'contextlevel' => CONTEXT_MODULE,
-        'legacy' => array(
-            'student' => CAP_ALLOW
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
         )
     ),
 
-    'mod/workshop:manage' => array(
+    // Ability to modify the assessment forms, gives access to editform.php
+    'mod/workshop:editdimensions' => array(
+        'riskbitmask' => RISK_XSS,              // can embed flash and javascript into wysiwyg
+        'captype' => 'write',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
 
-        'riskbitmask' => RISK_SPAM,
+    // Ability to submit own work. All users having this capability are expected to participate
+    // in the workshop as the authors
+    'mod/workshop:submit' => array(
+        'captype' => 'write',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'student' => CAP_ALLOW,
+        )
+    ),
 
+    // Ability to be a reviewer of a submission. All users with this capability are considered
+    // as potential reviewers for the allocation purposes and can train assessment process on the
+    // example submissions.
+    'mod/workshop:peerassess' => array(
         'captype' => 'write',
         'contextlevel' => CONTEXT_MODULE,
-        'legacy' => array(
+        'archetypes' => array(
+            'student' => CAP_ALLOW,
+        )
+    ),
+
+
+    // Ability to submit and referentially assess the examples and to see all other
+    // assessments of these examples
+    'mod/workshop:manageexamples' => array(
+        'captype' => 'write',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to allocate (assign) a submission for a review
+    'mod/workshop:allocate' => array(
+        'captype' => 'write',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to publish submissions, i.e. make them available when workshop is closed
+    'mod/workshop:publishsubmissions' => array(
+        'captype' => 'write',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
             'teacher' => CAP_ALLOW,
             'editingteacher' => CAP_ALLOW,
-            'admin' => CAP_ALLOW
+            'manager' => CAP_ALLOW
         )
+    ),
+
+    // Ability to identify the author of the work that has been allocated to them for a review
+    // Reviewers without this capability will see the author as Anonymous
+    'mod/workshop:viewauthornames' => array(
+        'captype' => 'read',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'student' => CAP_ALLOW,
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
     )
+    ),
+
+    // Ability to identify the reviewer of the given submission (i.e. the owner of the assessment)
+    'mod/workshop:viewreviewernames' => array(
+        'captype' => 'read',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to view a work submitted by an other user. Applies to the user's group only
+    // or - if the user is allowed to access all groups - applies to any submission
+    'mod/workshop:viewallsubmissions' => array(
+        'captype' => 'read',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to view published submission when the workshop is closed. Applies to the user's group only
+    // or - if the user is allowed to access all groups - applies to any submission
+    'mod/workshop:viewpublishedsubmissions' => array(
+        'captype' => 'read',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'student' => CAP_ALLOW,
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to view the authors of published submissions.
+    'mod/workshop:viewauthorpublished' => array(
+        'captype' => 'read',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'student' => CAP_ALLOW,
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to always view the assessments of other users' work and the calculated grades, regardless the phase.
+    // Applies to the user's group only or - if the user is allowed to access all groups - applies to any assessment
+    'mod/workshop:viewallassessments' => array(
+        'captype' => 'read',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to override grade for submission or the calculated grades for assessment
+    // and to run aggregation tasks that computes the total grade
+    'mod/workshop:overridegrades' => array(
+        'captype' => 'write',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
+
+    // Ability to ignore time restrictions (submission start/end time and assessment
+    // start/end time) if they are defined
+    'mod/workshop:ignoredeadlines' => array(
+        'captype' => 'write',
+        'contextlevel' => CONTEXT_MODULE,
+        'archetypes' => array(
+            'teacher' => CAP_ALLOW,
+            'editingteacher' => CAP_ALLOW,
+            'manager' => CAP_ALLOW
+        )
+    ),
 );
