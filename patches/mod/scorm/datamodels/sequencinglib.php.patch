diff --git a/mod/scorm/datamodels/sequencinglib.php b/mod/scorm/datamodels/sequencinglib.php
old mode 100755
new mode 100644
index 0b7d140..3a2f001
--- a/mod/scorm/datamodels/sequencinglib.php
+++ b/mod/scorm/datamodels/sequencinglib.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 require ($CFG->dirroot.'/mod/scorm/datamodels/scormlib.php');
 
 function scorm_seq_evaluate($scoid,$usertracks) {
@@ -30,6 +30,8 @@ function scorm_seq_overall ($scoid,$userid,$request,$attempt) {
 
 
 function scorm_seq_navigation ($scoid,$userid,$request,$attempt=0) {
+    global $DB;
+
     /// Sequencing structure
     $seq = new stdClass();
     $seq->currentactivity = scorm_get_sco($scoid);
@@ -63,7 +65,7 @@ function scorm_seq_navigation ($scoid,$userid,$request,$attempt=0) {
         break;
         case 'resumeall_':
             if (empty($seq->currentactivity)) {
-                if ($track = get_record('scorm_scoes_track','scoid',$scoid,'userid',$userid,'element','suspendedactivity')) {//I think it's suspend instead of suspendedactivity
+                if ($track = $DB->get_record('scorm_scoes_track', array('scoid'=>$scoid,'userid'=>$userid,'element'=>'suspendedactivity'))) {//I think it's suspend instead of suspendedactivity
                     $seq->navigation = true;
                     $seq->sequencing = 'resumeall';
                 } else {
@@ -131,12 +133,12 @@ function scorm_seq_navigation ($scoid,$userid,$request,$attempt=0) {
             }
         break;
         default: /// {target=<STRING>}choice 
-            if ($targetsco = get_record('scorm_scoes','scorm',$sco->scorm,'identifier',$request)) {
+            if ($targetsco = $DB->get_record('scorm_scoes', array('scorm'=>$sco->scorm,'identifier'=>$request))) {
                 if ($targetsco->parent != '/') {
                     $seq->target = $request;
                 } else {
                     if ($parentsco = scorm_get_parent($targetsco)) {
-                        if (!isset($parentsco->choice) || ($parent->choice == true)) {
+                        if (!isset($parentsco->choice) || ($parentsco->choice == true)) {
                             $seq->target = $request;
                         }
                     } 
@@ -149,7 +151,7 @@ function scorm_seq_navigation ($scoid,$userid,$request,$attempt=0) {
                         if (!$sco = scorm_get_sco($scoid)) {
                             return $seq;
                         }
-                        if ($sco->parent != $target->parent) {
+                        if ($sco->parent != $targetsco->parent) {
                             $ancestors = scorm_get_ancestors($sco);
                             $commonpos = scorm_find_common_ancestor($ancestors,$targetsco);
                             if ($commonpos !== false) {
@@ -298,6 +300,8 @@ function scorm_seq_termination ($seq,$userid) {
 }
 
 function scorm_seq_end_attempt($sco,$userid,$seq) {
+    global $DB;
+
     if (scorm_is_leaf($sco)) {
         if (!isset($sco->tracked) || ($sco->tracked == 1)) {
             if (!scorm_seq_is('suspended',$sco->id,$userid)) {
@@ -309,7 +313,7 @@ function scorm_seq_end_attempt($sco,$userid,$seq) {
                     }
                 }
                 if (!isset($sco->objectivesetbycontent) || ($sco->objectivesetbycontent == 0)) {
-                    if ($objectives = get_records('scorm_seq_objective','scoid',$sco->id)) {
+                    if ($objectives = $DB->get_records('scorm_seq_objective', array('scoid'=>$sco->id))) {
                         foreach ($objectives as $objective) {
                             if ($objective->primaryobj) {
                                 //if (!scorm_seq_objective_progress_status($sco,$userid,$objective)) {
@@ -340,31 +344,34 @@ function scorm_seq_end_attempt($sco,$userid,$seq) {
         }
     }
     scorm_seq_set('active',$sco,$userid,0,false);
-    scorm_seq_overall_rollup($sco,$userid);
+    scorm_seq_overall_rollup($sco,$userid, $seq);
 }
 
 function scorm_seq_is($what, $scoid, $userid, $attempt=0) {
+    global $DB;
 
     /// Check if passed activity $what is active
     $active = false;
-    if ($track = get_record('scorm_scoes_track','scoid',$scoid,'userid',$userid,'attempt',$attempt,'element',$what)) {
+    if ($track = $DB->get_record('scorm_scoes_track', array('scoid'=>$scoid,'userid'=>$userid,'attempt'=>$attempt,'element'=>$what))) {
         $active = true;
     }
     return $active;
 }
 
 function scorm_seq_set($what, $scoid, $userid, $attempt=0, $value='true') {
+    global $DB;
+
     $sco = scorm_get_sco($scoid);
 
     /// set passed activity to active or not
     if ($value == false) {
-        delete_record('scorm_scoes_track','scoid',$scoid,'userid',$userid,'attempt',$attempt,'element',$what);
+        $DB->delete_record('scorm_scoes_track', array('scoid'=>$scoid,'userid'=>$userid,'attempt'=>$attempt,'element'=>$what));
     } else {
         scorm_insert_track($userid, $sco->scorm, $sco->id, 0, $what, $value);
     }
 
     // update grades in gradebook
-    $scorm = get_record('scorm', 'id', $sco->scorm);
+    $scorm = $DB->get_record('scorm', array('id'=>$sco->scorm));
     scorm_update_grades($scorm, $userid, true);
 }
 
@@ -418,8 +425,10 @@ function scorm_seq_post_cond_rules($seq,$userid) {
 }
 
 function scorm_seq_rules_check ($sco, $action){
+    global $DB;
+
 	$act = null;
-	if($rules = get_records('scorm_seq_ruleconds','scoid',$sco->id,'action',$action)){
+    if($rules = $DB->get_records('scorm_seq_ruleconds', array('scoid'=>$sco->id,'action'=>$action))) {
 		foreach ($rules as $rule){
 			if($act = scorm_seq_rule_check($sco,$rule)){
 				return $act;
@@ -431,9 +440,11 @@ function scorm_seq_rules_check ($sco, $action){
 }
 
 function scorm_seq_rule_check ($sco, $rule){
+    global $DB;
+
 	$bag = Array();
 	$cond = '';
-	$ruleconds = get_records('scorm_seq_rulecond','scoid',$sco->id,'ruleconditionsid',$rule->id);
+    $ruleconds = $DB->get_records('scorm_seq_rulecond', array('scoid'=>$sco->id,'ruleconditionsid'=>$rule->id));
 	foreach ($ruleconds as $rulecond){
 		 if ($rulecond->operator = 'not') {
 		     if ($rulecond->cond != 'unknown' ){
@@ -466,7 +477,7 @@ function scorm_seq_rule_check ($sco, $rule){
 }
 
 
-function scorm_seq_overall_rollup($sco,$userid){//Carlos
+function scorm_seq_overall_rollup($sco,$userid, $seq){//Carlos
 
 	 if ($ancestors = scorm_get_ancestors($sco)) { 
             foreach ($ancestors as $ancestor) {
@@ -474,7 +485,7 @@ function scorm_seq_overall_rollup($sco,$userid){//Carlos
 					scorm_seq_measure_rollup($sco,$userid);
 				}
 				scorm_seq_objective_rollup($sco,$userid);
-				scorm_seq_activity_progress_rollup($sco,$userid);
+                scorm_seq_activity_progress_rollup($sco,$userid, $seq);
 
             }
 
@@ -484,15 +495,16 @@ function scorm_seq_overall_rollup($sco,$userid){//Carlos
 /* For this next function I have defined measure weight and measure status as records with the attempt = 0 on the scorm_scoes_track table. According to the page 89 of the SeqNav.pdf those datas give us some information about the progress of the objective*/
 
 function scorm_seq_measure_rollup($sco,$userid){
+    global $DB;
 
 	$totalmeasure = 0; //Check if there is something similar in the database
 	$valid = false;//Same as in the last line
 	$countedmeasures = 0;//Same too
 	$targetobjective = null;
 	$readable = true;//to check if status and measure weight are readable
-	$objectives = get_records('scorm_seq_objective','scoid',$sco->id);
+    $objectives = $DB->get_records('scorm_seq_objective', array('scoid'=>$sco->id));
 
-    foreach ($objective as $objective){
+    foreach ($objectives as $objective){
 
 		if ($objective->primaryobj == true){//Objective contributes to rollup I'm using primaryobj field, but not 
 		    $targetobjective = $objective;
@@ -508,8 +520,8 @@ function scorm_seq_measure_rollup($sco,$userid){
 			if (!isset($child->tracked) || ($child->tracked == 1)){
 	
 			    $rolledupobjective = null;// we set the rolled up activity to undefined
-				$objectives = get_records('scorm_seq_objective','scoid',$child->id);
-                foreach ($objective as $objective){
+                $objectives = $DB->get_records('scorm_seq_objective', array('scoid'=>$child->id));
+                foreach ($objectives as $objective){
 		            if ($objective->primaryobj == true){//Objective contributes to rollup I'm using primaryobj field, but not 
 		                $rolledupobjective = $objective;
 			            break;
@@ -520,7 +532,7 @@ function scorm_seq_measure_rollup($sco,$userid){
 				
 					$countedmeasures = $countedmeasures + ($child->measureweight);
 					if (!scorm_seq_is('objectivemeasurestatus',$sco->id,$userid)) {
-						$normalizedmeasure = get_record('scorm_scoes_track','scoid',$child->id,'userid',$userid,'element','objectivenormalizedmeasure');
+                        $normalizedmeasure = $DB->get_record('scorm_scoes_track', array('scoid'=>$child->id,'userid'=>$userid,'element'=>'objectivenormalizedmeasure'));
 						$totalmeasure = $totalmeasure + (($normalizedmeasure->value) * ($child->measureweight));
 						$valid = true;
 					}
@@ -540,7 +552,7 @@ function scorm_seq_measure_rollup($sco,$userid){
 		else{
 			if($countedmeasures>0){
 				scorm_seq_set('objectivemeasurestatus',$sco->id,$userid);
-				$val=$totalmeasure/$countedmeasure;
+                $val=$totalmeasure/$countedmeasures;
 				scorm_seq_set('objectivenormalizedmeasure',$sco->id,$userid,$val);
 		        
 			}
@@ -555,6 +567,7 @@ function scorm_seq_measure_rollup($sco,$userid){
 }
 
 function scorm_seq_objective_rollup($sco,$userid){
+    global $DB;
 	
     scorm_seq_objective_rollup_measure($sco,$userid);
     scorm_seq_objective_rollup_rules($sco,$userid);
@@ -570,9 +583,9 @@ function scorm_seq_objective_rollup($sco,$userid){
 		}
 		else{
 
-            $rolluprules = get_record('scorm_seq_rolluprule','scoid',$sco->id,'userid',$userid);
+            $rolluprules = $DB->get_record('scorm_seq_rolluprule', array('scoid'=>$sco->id,'userid'=>$userid));
             foreach($rolluprules as $rolluprule){
-                $rollupruleconds = get_records('scorm_seq_rolluprulecond','rollupruleid',$rolluprule->id);
+                $rollupruleconds = $DB->get_records('scorm_seq_rolluprulecond', array('rollupruleid'=>$rolluprule->id));
 			    foreach($rollupruleconds as $rolluprulecond){
                  
                     switch ($rolluprulecond->cond!='satisfied' && $rolluprulecond->cond!='completed' && $rolluprulecond->cond!='attempted'){
@@ -590,10 +603,12 @@ function scorm_seq_objective_rollup($sco,$userid){
 }
 
 function scorm_seq_objective_rollup_measure($sco,$userid){
+    global $DB;
+
 	$targetobjective = null;
 	
 
-	$objectives = get_records('scorm_seq_objective','scoid',$sco->id);
+    $objectives = $DB->get_records('scorm_seq_objective', array('scoid'=>$sco->id));
     foreach ($objectives as $objective){
 	    if ($objective->primaryobj == true){
 		    $targetobjective = $objective;
@@ -619,7 +634,7 @@ function scorm_seq_objective_rollup_measure($sco,$userid){
 					$isactive = false;
 				}
 
-				$normalizedmeasure = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','objectivenormalizedmeasure');
+                $normalizedmeasure = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'objectivenormalizedmeasure'));
 
 				$sco = scorm_get_sco ($sco->id);
 
@@ -645,11 +660,13 @@ function scorm_seq_objective_rollup_measure($sco,$userid){
 }
 
 function scorm_seq_objective_rollup_default($sco,$userid){
+    global $DB;
+
 	if (!(scorm_seq_rollup_rule_check($sco,$userid,'incomplete')) && !(scorm_seq_rollup_rule_check($sco,$userid,'completed'))){
 		
-            $rolluprules = get_record('scorm_seq_rolluprule','scoid',$sco->id,'userid',$userid);
+            $rolluprules = $DB->get_record('scorm_seq_rolluprule', array('scoid'=>$sco->id,'userid'=>$userid));
             foreach($rolluprules as $rolluprule){
-                $rollupruleconds = get_records('scorm_seq_rolluprulecond','rollupruleid',$rolluprule->id);
+                $rollupruleconds = $DB->get_records('scorm_seq_rolluprulecond', array('rollupruleid'=>$rolluprule->id));
 			    foreach($rollupruleconds as $rolluprulecond){
                  
                     if ($rolluprulecond->cond!='satisfied' && $rolluprulecond->cond!='completed' && $rolluprulecond->cond!='attempted'){
@@ -668,10 +685,12 @@ function scorm_seq_objective_rollup_default($sco,$userid){
 
 
 function scorm_seq_objective_rollup_rules($sco,$userid){
+    global $DB;
+
 	$targetobjective = null;
 
-	$objectives = get_records('scorm_seq_objective','scoid',$sco->id);
-    foreach ($objective as $objective){
+    $objectives = $DB->get_records('scorm_seq_objective', array('scoid'=>$sco->id));
+    foreach ($objectives as $objective){
 	    if ($objective->primaryobj == true){//Objective contributes to rollup I'm using primaryobj field, but not 
 		    $targetobjective = $objective;
 			break;
@@ -696,7 +715,7 @@ function scorm_seq_objective_rollup_rules($sco,$userid){
 
 }
 
-function scorm_seq_activity_progress_rollup ($sco, $userid){
+function scorm_seq_activity_progress_rollup ($sco, $userid, $seq){
 
 	if(scorm_seq_rollup_rule_check($sco,$userid,'incomplete')){
 		//incomplete rollup action
@@ -713,8 +732,9 @@ function scorm_seq_activity_progress_rollup ($sco, $userid){
 }
 
 function scorm_seq_rollup_rule_check ($sco,$userid,$action){
+    global $DB;
 
-	 if($rolluprules = get_record('scorm_seq_rolluprule','scoid',$sco->id,'userid',$userid,'action',$action)){
+     if($rolluprules = $DB->get_record('scorm_seq_rolluprule', array('scoid'=>$sco->id,'userid'=>$userid,'action'=>$action))) {
 
         $childrenbag = Array ();
 		$children = scorm_get_children ($sco);
@@ -723,14 +743,14 @@ function scorm_seq_rollup_rule_check ($sco,$userid,$action){
 
 			foreach ($children as $child){
 
-				/*$tracked = get_records('scorm_scoes_track','scoid',$child->id,'userid',$userid);
+                /*$tracked = $DB->get_records('scorm_scoes_track', array('scoid'=>$child->id,'userid'=>$userid));
 			    if($tracked && $tracked->attemp != 0){*/
 				 $child = scorm_get_sco ($child);
 			if (!isset($child->tracked) || ($child->tracked == 1)){
 
 					if(scorm_seq_check_child ($child,$action,$userid)){
 
-                        $rollupruleconds = get_records('scorm_seq_rolluprulecond','rollupruleid',$rolluprule->id);
+                        $rollupruleconds = $DB->get_records('scorm_seq_rolluprulecond', array('rollupruleid'=>$rolluprule->id));
 						$evaluate = scorm_seq_evaluate_rollupcond($child,$rolluprule->conditioncombination,$rollupruleconds,$userid);
 						if ($evaluate=='unknown'){
 							array_push($childrenbag,'unknown');
@@ -775,7 +795,7 @@ function scorm_seq_rollup_rule_check ($sco,$userid,$action){
 				        if($itm === true){
 							$cont++;
 						}
-						if($cont >= $roullprule->minimumcount){
+                        if($cont >= $rolluprule->minimumcount){
 					        $change = true;
 				        }
 				    }
@@ -787,7 +807,7 @@ function scorm_seq_rollup_rule_check ($sco,$userid,$action){
 				        if($itm === true){
 							$cont++;
 						}
-						if($cont >= $roullprule->minimumcount){
+                        if($cont >= $rolluprule->minimumcount){
 					        $change = true;
 				        }
 				    }
@@ -799,7 +819,7 @@ function scorm_seq_rollup_rule_check ($sco,$userid,$action){
 				        if($itm === true){
 							$cont++;
 						}
-						if(($cont/sizeof($childrenbag)) >= $roullprule->minimumcount){
+                        if(($cont/sizeof($childrenbag)) >= $rolluprule->minimumcount){
 					        $change = true;
 				        }
 				    }
@@ -821,10 +841,10 @@ function scorm_seq_evaluate_rollupcond($sco,$conditioncombination,$rolluprulecon
 	$unk = false;
     foreach($rollupruleconds as $rolluprulecond){
 
-		$condit = scorm_evaluate_cond($rolluprulecond,$sco,$userid);
+        $condit = scorm_evaluate_condition($rolluprulecond,$sco,$userid);
 
-		if($rule->operator=='not'){// If operator is not, negate the condition
-			if ($rule->cond != 'unknown'){            
+        if($rolluprulecond->operator=='not'){// If operator is not, negate the condition
+            if ($rolluprulecond->cond != 'unknown'){
 				if ($condit){
 					$condit = false;
 				}
@@ -846,7 +866,7 @@ function scorm_seq_evaluate_rollupcond($sco,$conditioncombination,$rolluprulecon
 		$i = 0;
 		foreach ($bag as $b){
 
-			 if ($rolluprule->conditioncombination == 'all'){
+             if ($rolluprulecond->conditioncombination == 'all'){
 
 				 $val = true;
 				 if($b == 'unknown'){
@@ -880,15 +900,16 @@ function scorm_seq_evaluate_rollupcond($sco,$conditioncombination,$rolluprulecon
 }
 
 function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
+    global $DB;
 	
 	        $res = false;
 
             switch ($rolluprulecond->cond){
 				
 				case 'satisfied':
-					 if($r=get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','objectivesatisfiedstatus')){
+                     if($r=$DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'objectivesatisfiedstatus'))) {
 						if($r->value == true){
-					        if ($r=get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','objectiveprogressstatus')){
+                            if ($r=$DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'objectiveprogressstatus'))) {
 						        if($r->value == true){
 					               $res= true;
 						        }
@@ -898,7 +919,7 @@ function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
 				break;
 
 				case 'objectiveStatusKnown':
-                    if ($r=get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','objectiveprogressstatus')){
+                    if ($r=$DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'objectiveprogressstatus'))) {
 						if($r->value == true){
 					        $res= true;
 						}
@@ -906,7 +927,7 @@ function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
 				break;
 
 				case 'objectiveMeasureKnown':
-					if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','objectivemeasurestatus')){
+                    if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'objectivemeasurestatus'))) {
 					    if($r->value == true){
 							$res = true;
 						}
@@ -916,9 +937,9 @@ function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
 				break;
 
 				case 'completed':
-					if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','attemptcompletionstatus')){
+                    if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'attemptcompletionstatus'))) {
 					    if($r->value){
-							if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','attemptprogressstatus')){
+                            if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'attemptprogressstatus'))) {
 					           if($r->value){
 							      $res = true;
 						       }
@@ -930,9 +951,9 @@ function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
 				break;
 
 				case 'attempted':
-					if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','activityprogressstatus')){
+                    if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'activityprogressstatus'))) {
 					    if($r->value){
-							if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','activityattemptcount')){
+                            if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'activityattemptcount'))) {
 					            if($r->value > 0){
 							        $res = true;
 						        }
@@ -945,11 +966,11 @@ function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
 				
 
 				case 'attemptLimitExceeded':
-					if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','activityprogressstatus')){
+                    if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'activityprogressstatus'))) {
 					    if($r->value){
-							if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','limitconditionattemptlimitcontrol')){
+                            if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'limitconditionattemptlimitcontrol'))) {
 					            if($r->value){
-							       if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','activityattemptcount') && $r2 = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','limitconditionattemptlimit') ){
+                                   if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'activityattemptcount')) && $r2 = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'limitconditionattemptlimit')) ){
 					                   if($r->value >= $r2->value){
 							               $res = true;
 						               }
@@ -968,9 +989,9 @@ function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
 
 				case 'activityProgressKnown':
 
-					if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','activityprogressstatus')){
+                    if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'activityprogressstatus'))) {
 					    if($r->value){
-					        if ($r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','attemptprogressstatus')){
+                            if ($r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'attemptprogressstatus'))) {
 					            if($r->value){
 							        $res = true;
 						        }
@@ -988,9 +1009,11 @@ function scorm_evaluate_condition ($rolluprulecond,$sco,$userid){
 }
 
 function scorm_seq_check_child ($sco, $action, $userid){
+    global $DB;
+
 	$included = false;
 	$sco=scorm_get_sco($sco->id);
-	$r = get_record('scorm_scoes_track','scoid',$sco->id,'userid',$userid,'element','activityattemptcount');
+    $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$sco->id,'userid'=>$userid,'element'=>'activityattemptcount'));
 	if ($action == 'satisfied' || $action == 'notsatisfied'){
 	  if (!$sco->rollupobjectivesatisfied){
 		$included = true;
@@ -1060,14 +1083,14 @@ function scorm_seq_sequencing ($scoid,$userid,$seq) {
     switch ($seq->sequencing) {
 
         case 'start':
-			 $seq = scorm_seq_start_sequencing($sco,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
+            $seq = scorm_seq_start_sequencing($scoid,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
 			$seq->sequencing = true;
            
 			
 		    break;
 			
         case 'resumeall':
-			$seq = scorm_seq_resume_sequencing($sco,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
+            $seq = scorm_seq_resume_all_sequencing($scoid,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
 			$seq->sequencing = true;
 			
 		    
@@ -1075,7 +1098,7 @@ function scorm_seq_sequencing ($scoid,$userid,$seq) {
             break;
 
         case 'exit':
-			 $seq = scorm_seq_exit_sequencing($sco,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
+             $seq = scorm_seq_exit_sequencing($scoid,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
 			$seq->sequencing = true;
 
            
@@ -1083,21 +1106,21 @@ function scorm_seq_sequencing ($scoid,$userid,$seq) {
             break;
 
         case 'retry':
-            $seq = scorm_seq_retry_sequencing($sco,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
+            $seq = scorm_seq_retry_sequencing($scoid,$userid,$seq); //We'll see the parameters we have to send, this should update delivery and end
             $seq->sequencing = true;
 			
           
             break;
 
 		case 'previous':
-			$seq = scorm_seq_previous_sequencing($sco,$userid,$seq);// We'll see the parameters we have to send, this should update delivery and end
+            $seq = scorm_seq_previous_sequencing($scoid,$userid,$seq);// We'll see the parameters we have to send, this should update delivery and end
 			$seq->sequencing = true;
 
          
             break;
 
 		case 'choice':
-			$seq = scorm_seq_choice_sequencing($sco,$userid,$seq);// We'll see the parameters we have to send, this should update delivery and end
+            $seq = scorm_seq_choice_sequencing($scoid,$userid,$seq);// We'll see the parameters we have to send, this should update delivery and end
              $seq->sequencing = true; 
 			 
       
@@ -1116,12 +1139,14 @@ function scorm_seq_sequencing ($scoid,$userid,$seq) {
 
 
 function scorm_seq_start_sequencing($scoid,$userid,$seq){
+    global $DB;
+
 	if (!empty($seq->currentactivity)) {
 		$seq->delivery = null;
 		$seq->exception = 'SB.2.5-1';
 		return $seq;
 	}
-	$sco = get_record('scorm_scoes','scoid',$scoid,'userid',$userid);
+    $sco = $DB->get_record('scorm_scoes', array('scoid'=>$scoid,'userid'=>$userid));
 	if (($sco->parent == '/') && scorm_is_leaf($sco)) {//if the activity is the root and is leaf
 		$seq->delivery = $sco;
 	}
@@ -1139,18 +1164,20 @@ function scorm_seq_start_sequencing($scoid,$userid,$seq){
 }
 
 function scorm_seq_resume_all_sequencing($scoid,$userid,$seq){
+    global $DB;
+
 	if (!empty($seq->currentactivity)){
 		$seq->delivery = null;
 		$seq->exception = 'SB.2.6-1';
 		return $seq;
 	}
-	$track = get_record('scorm_scoes_track','scoid',$scoid,'userid',$userid,'element','suspendedactivity');
+    $track = $DB->get_record('scorm_scoes_track', array('scoid'=>$scoid,'userid'=>$userid,'element'=>'suspendedactivity'));
     if (!$track) {
 		$seq->delivery = null;
 	    $seq->exception = 'SB.2.6-2';
 	    return $seq;
 	}
-	$seq->delivery = get_record('scorm_scoes','scoid',$scoid,'userid',$userid);//we assign the sco to the delivery
+    $seq->delivery = $DB->get_record('scorm_scoes', array('scoid'=>$scoid,'userid'=>$userid));//we assign the sco to the delivery
 	
 }
 
@@ -1190,7 +1217,7 @@ function scorm_seq_previous_sequencing($scoid,$userid,$seq){
 	
 	$currentact= $seq->currentactivity;
 	if ($currentact->parent != '/') {//if the activity is the root and is leaf
-	    $parent = scorm_get_parent ($activity);
+        $parent = scorm_get_parent ($currentact);
 		if (!isset($parent->flow) || ($parent->flow == false)) {
 			$seq->delivery = null;
 	        $seq->exception = 'SB.2.8-2';
@@ -1264,11 +1291,10 @@ function scorm_seq_retry_sequencing($scoid,$userid,$seq){
 }
 
 function scorm_seq_flow ($candidate,$direction,$seq,$childrenflag,$userid){
-	//$PREVDIRECTION NOT DEFINED YET
+    //TODO: $PREVDIRECTION NOT DEFINED YET
 
 	$activity=$candidate;
-	$deliverable=false;
-	$previdirection = null;
+    $prevdirection = null;
 	$seq = scorm_seq_flow_tree_traversal ($activity,$direction,$childrenflag,$prevdirection,$seq,$userid);
 	if($seq->identifiedactivity == null){//if identifies
 		$seq->identifiedactivity = $candidate;
@@ -1293,7 +1319,7 @@ function scorm_seq_flow_activity_traversal ($activity, $userid, $direction, $chi
 	    return $seq;
 	}
      
-    $rulch = scorm_seq_rules_check($sco, 'skipped');
+    $rulch = scorm_seq_rules_check($sco, 'skipped'); // TODO: undefined
 	if ($rulch != null){
 	    $seq = scorm_seq_flow_tree_traversal ($activity, $direction, false, $prevdirection, $seq,$userid);//endsession and exception
 		if ($seq->identifiedactivity == null){
@@ -1305,11 +1331,11 @@ function scorm_seq_flow_activity_traversal ($activity, $userid, $direction, $chi
 			
 			if ($prevdirection = 'backward' && $seq->traversaldir == 'backward'){
 				$seq = scorm_seq_flow_tree_traversal ($activity,$direction,false,null,$seq,$userid);
-				$seq = scorm_seq_flow_activity($seq->identifiedactivity, $userid, $direction, $childrenflag, $prevdirection, $seq,$userid);
+                $seq = scorm_seq_flow_activity_traversal($seq->identifiedactivity, $userid, $direction, $childrenflag, $prevdirection, $seq,$userid);
 			}
 			else{
 				$seq = scorm_seq_flow_tree_traversal ($activity,$direction,false,null,$seq,$userid);
-				$seq = scorm_seq_flow_activity($seq->identifiedactivity, $userid, $direction, $childrenflag, $prevdirection, $seq,$userid);
+                $seq = scorm_seq_flow_activity_traversal($seq->identifiedactivity, $userid, $direction, $childrenflag, $prevdirection, $seq,$userid);
 			}
 			return $seq;
 		}
@@ -1338,10 +1364,10 @@ function scorm_seq_flow_activity_traversal ($activity, $userid, $direction, $chi
 
 		else{
 		    if($direction == 'backward' && $seq->traversaldir == 'forward'){
-				$seq = scorm_seq_flow_activity($seq->identifiedactivity, $userid, 'forward', $childrenflag, 'backward', $seq,$userid);
+                $seq = scorm_seq_flow_activity_traversal($seq->identifiedactivity, $userid, 'forward', $childrenflag, 'backward', $seq,$userid);
 			}
 			else{
-				scorm_seq_flow_activity($seq->identifiedactivity, $userid, $direction, $childrenflag, null, $seq,$userid);
+                scorm_seq_flow_activity_traversal($seq->identifiedactivity, $userid, $direction, $childrenflag, null, $seq,$userid);
 			}
 			return $seq;
 		}
@@ -1435,7 +1461,7 @@ function scorm_seq_flow_tree_traversal ($activity,$direction,$childrenflag,$prev
 				 }
 			 }
 			 if ($children[0]->id == $activity->id){
-				$seq = scorm_seq_flow_tree_traversal ($parent, 'backward', false, null, $seq);
+                $seq = scorm_seq_flow_tree_traversal ($parent, 'backward', false, null, $seq, $userid);
 				return $seq;
 			 }
 			 else{
@@ -1496,6 +1522,7 @@ function scorm_check_activity ($activity,$userid){
 }
 
 function scorm_limit_cond_check ($activity,$userid){
+    global $DB;
 
     if (isset($activity->tracked) && ($activity->tracked == 0)){
 		
@@ -1507,42 +1534,42 @@ function scorm_limit_cond_check ($activity,$userid){
 	}
 
     if (!isset($activity->limitcontrol) || ($activity->limitcontrol == 1)){	
-		$r = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','activityattemptcount');
+        $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'activityattemptcount'));
 		if (scorm_seq_is('activityprogressstatus',$activity->id,$userid) && ($r->value >=$activity->limitattempt)){
 			return true;
 		}
 	}
 
 	 if (!isset($activity->limitabsdurcontrol) || ($activity->limitabsdurcontrol == 1)){	
-		$r = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','activityabsoluteduration');
+        $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'activityabsoluteduration'));
 		if (scorm_seq_is('activityprogressstatus',$activity->id,$userid) && ($r->value >=$activity->limitabsduration)){
 			return true;
 		}
 	}
 
 	if (!isset($activity->limitexpdurcontrol) || ($activity->limitexpdurcontrol == 1)){	
-		$r = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','activityexperiencedduration');
+        $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'activityexperiencedduration'));
 		if (scorm_seq_is('activityprogressstatus',$activity->id,$userid) && ($r->value >=$activity->limitexpduration)){
 			return true;
 		}
 	}
     
 	 if (!isset($activity->limitattabsdurcontrol) || ($activity->limitattabsdurcontrol == 1)){	
-		$r = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','attemptabsoluteduration');
+        $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'attemptabsoluteduration'));
 		if (scorm_seq_is('activityprogressstatus',$activity->id,$userid) && ($r->value >=$activity->limitattabsduration)){
 			return true;
 		}
 	}
 
 	if (!isset($activity->limitattexpdurcontrol) || ($activity->limitattexpdurcontrol == 1)){	
-		$r = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','attemptexperiencedduration');
+        $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'attemptexperiencedduration'));
 		if (scorm_seq_is('activityprogressstatus',$activity->id,$userid) && ($r->value >=$activity->limitattexpduration)){
 			return true;
 		}
 	}
 
 	if (!isset($activity->limitbegincontrol) || ($activity->limitbegincontrol == 1)){	
-		$r = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','begintime');
+        $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'begintime'));
 		if (time()>=$activity->limitbegintime){
 			return true;
 		}
@@ -1839,7 +1866,7 @@ function scorm_seq_choice_flow_tree ($constrained, $traverse, $seq){
 	$parent = scorm_get_parent ($constrained);
 	if ($traverse== 'forward'){
 		$preord = scorm_get_preorder ($constrained);
-		if (sizeof($preorder) == 0 || (sizeof($preorder) == 0 && $preorder[0]->id = $constrained->id)){
+        if (sizeof($preorder) == 0 || (sizeof($preorder) == 0 && $preorder[0]->id = $constrained->id)){ // TODO: undefined
 			$islast = true;//the function is the last activity available
 		}
 		if ($constrained->parent == '/' || $islast){
@@ -1959,15 +1986,16 @@ function scorm_sequencing_delivery($scoid,$userid,$seq){
 }
 
 function scorm_content_delivery_environment ($seq,$userid){
+    global $DB;
 
 	$act = $seq->currentactivity;
 	if(scorm_seq_is('active',$act->id,$userid)){
 		$seq->exception = 'DB.2-1';
 	    return $seq;
 	}
-	$track = get_record('scorm_scoes_track','scoid',$act->id,'userid',$userid,'element','suspendedactivity');
+    $track = $DB->get_record('scorm_scoes_track', array('scoid'=>$act->id,'userid'=>$userid,'element'=>'suspendedactivity'));
 	if ($track != null){
-		$seq = scorm_clear_suspended_activity($seq->delivery, $seq);
+        $seq = scorm_clear_suspended_activity($seq->delivery, $seq, $userid);
 
 	}
 	$seq = scorm_terminate_descendent_attempts ($seq->delivery,$userid,$seq);
@@ -1978,9 +2006,9 @@ function scorm_content_delivery_environment ($seq,$userid){
 		if(!scorm_seq_is('active',$activity->id,$userid)){
 			if(!isset($activity->tracked) || ($activity->tracked == 1)){
 				if(!scorm_seq_is('suspended',$activity->id,$userid)){
-					$r = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','activityattemptcount');
+                    $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'activityattemptcount'));
 					$r->value = ($r->value)+1;
-					update_record ('scorm_scoes_track',$r);
+                    $DB->update_record ('scorm_scoes_track',$r);
 					if ($r->value == 1){
 						scorm_seq_set('activityprogressstatus', $activity->id, $userid, 'true');
 					}
@@ -2006,16 +2034,17 @@ function scorm_content_delivery_environment ($seq,$userid){
 
     if(isset($activity->tracked) || ($activity->tracked == 0)){
 		//How should I track the info and what should I do to not record the information for the activity during delivery? 
-		$atabsdur = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','attemptabsoluteduration');
-		$atexpdur = get_record('scorm_scoes_track','scoid',$activity->id,'userid',$userid,'element','attemptexperiencedduration');
+        $atabsdur = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'attemptabsoluteduration'));
+        $atexpdur = $DB->get_record('scorm_scoes_track', array('scoid'=>$activity->id,'userid'=>$userid,'element'=>'attemptexperiencedduration'));
 	}
 	return $seq;
 
  
 }
-function scorm_clear_suspended_activity($act,$seq){
+function scorm_clear_suspended_activity($act,$seq, $userid){
+    global $DB;
 	$currentact= $seq->currentactivity;
-	$track = get_record('scorm_scoes_track','scoid',$currentact->id,'userid',$userid,'element','suspendedactivity');
+    $track = $DB->get_record('scorm_scoes_track', array('scoid'=>$currentact->id,'userid'=>$userid,'element'=>'suspendedactivity')); // TODO: undefined
 	if ($track != null){
 		$ancestors = scorm_get_ancestors($act);
         $commonpos = scorm_find_common_ancestor($ancestors,$currentact);
@@ -2049,11 +2078,12 @@ function scorm_clear_suspended_activity($act,$seq){
 }
 
 function scorm_select_children_process($scoid,$userid){
+    global $DB;
 
 	$sco = scorm_get_sco($scoid);
     if (!scorm_is_leaf($sco)){
 		if(!scorm_seq_is('suspended',$scoid,$userid) && !scorm_seq_is('active',$scoid,$userid)){
-			$r = get_record('scorm_scoes_track','scoid',$scoid,'userid',$userid,'element','selectiontiming');
+            $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$scoid,'userid'=>$userid,'element'=>'selectiontiming'));
 
              switch($r->value) {
 
@@ -2065,7 +2095,7 @@ function scorm_select_children_process($scoid,$userid){
                     if(!scorm_seq_is('activityprogressstatus',$scoid,$userid)){
 					    if(scorm_seq_is('selectioncountsstatus',$scoid,$userid)){
 					        $childlist = '';
-							$res = get_record('scorm_scoes_track','scoid',$scoid,'userid',$userid,'element','selectioncount');
+                            $res = $DB->get_record('scorm_scoes_track', array('scoid'=>$scoid,'userid'=>$userid,'element'=>'selectioncount'));
 							$i = ($res->value)-1;
 							$children = scorm_get_children ($sco);
 
@@ -2092,11 +2122,12 @@ function scorm_select_children_process($scoid,$userid){
 }
 
 function scorm_randomize_children_process($scoid,$userid){
+    global $DB;
 
 	$sco = scorm_get_sco($scoid);
     if (!scorm_is_leaf($sco)){
 		if(!scorm_seq_is('suspended',$scoid,$userid) && !scorm_seq_is('active',$scoid,$userid)){
-			$r = get_record('scorm_scoes_track','scoid',$scoid,'userid',$userid,'element','randomizationtiming');
+            $r = $DB->get_record('scorm_scoes_track', array('scoid'=>$scoid,'userid'=>$userid,'element'=>'randomizationtiming'));
 
              switch($r->value) {
 
@@ -2154,181 +2185,182 @@ function scorm_terminate_descendent_attempts ($activity,$userid,$seq){
 }
 
 function scorm_sequencing_exception($seq){
+    global $OUTPUT;
     if($seq->exception != null){
 		switch($seq->exception){
 
 			case 'NB.2.1-1':
-                notify("Sequencing session has already begun");
+                echo $OUTPUT->notification("Sequencing session has already begun");
             break;
             case 'NB.2.1-2':
-                notify("Sequencing session has not begun");
+                echo $OUTPUT->notification("Sequencing session has not begun");
             break;
 			case 'NB.2.1-3':
-                notify("Suspended activity is not defined");
+                echo $OUTPUT->notification("Suspended activity is not defined");
             break;
 			case 'NB.2.1-4':
-                notify("Flow Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Flow Sequencing Control Model Violation");
             break;
 			case 'NB.2.1-5':
-                notify("Flow or Forward only Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Flow or Forward only Sequencing Control Model Violation");
             break;
 			case 'NB.2.1-6':
-                notify("No activity is previous to the root");
+                echo $OUTPUT->notification("No activity is previous to the root");
             break;
 			case 'NB.2.1-7':
-                notify("Unsupported Navigation Request");
+                echo $OUTPUT->notification("Unsupported Navigation Request");
             break;
 			case 'NB.2.1-8':
-                notify("Choice Exit Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Choice Exit Sequencing Control Model Violation");
             break;
 			case 'NB.2.1-9':
-                notify("No activities to consider");
+                echo $OUTPUT->notification("No activities to consider");
             break;
 			case 'NB.2.1-10':
-                notify("Choice Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Choice Sequencing Control Model Violation");
             break;
 			case 'NB.2.1-11':
-                notify("Target Activity does not exist");
+                echo $OUTPUT->notification("Target Activity does not exist");
             break;
 			case 'NB.2.1-12':
-                notify("Current Activity already terminated");
+                echo $OUTPUT->notification("Current Activity already terminated");
             break;
 			case 'NB.2.1-13':
-                notify("Undefined Navigation Request");
+                echo $OUTPUT->notification("Undefined Navigation Request");
             break;
 
 			case 'TB.2.3-1':
-                notify("Current Activity already terminated");
+                echo $OUTPUT->notification("Current Activity already terminated");
             break;
 			case 'TB.2.3-2':
-                notify("Current Activity already terminated");
+                echo $OUTPUT->notification("Current Activity already terminated");
             break;
 			case 'TB.2.3-4':
-                notify("Current Activity already terminated");
+                echo $OUTPUT->notification("Current Activity already terminated");
             break;
 			case 'TB.2.3-5':
-                notify("Nothing to suspend; No active activities");
+                echo $OUTPUT->notification("Nothing to suspend; No active activities");
             break;
 			case 'TB.2.3-6':
-                notify("Nothing to abandon; No active activities");
+                echo $OUTPUT->notification("Nothing to abandon; No active activities");
             break;
 
 			case 'SB.2.1-1':
-                notify("Last activity in the tree");
+                echo $OUTPUT->notification("Last activity in the tree");
             break;
             case 'SB.2.1-2':
-                notify("Cluster has no available children");
+                echo $OUTPUT->notification("Cluster has no available children");
             break;
 			case 'SB.2.1-3':
-                notify("No activity is previous to the root");
+                echo $OUTPUT->notification("No activity is previous to the root");
             break;
 			case 'SB.2.1-4':
-                notify("Forward Only Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Forward Only Sequencing Control Model Violation");
             break;
 
 			case 'SB.2.2-1':
-                notify("Flow Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Flow Sequencing Control Model Violation");
             break;
 			case 'SB.2.2-2':
-                notify("Activity unavailable");
+                echo $OUTPUT->notification("Activity unavailable");
             break;
 
 			case 'SB.2.3-1':
-                notify("Forward Traversal Blocked");
+                echo $OUTPUT->notification("Forward Traversal Blocked");
             break;
             case 'SB.2.3-2':
-                notify("Forward Only Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Forward Only Sequencing Control Model Violation");
             break;
 			case 'SB.2.3-3':
-                notify("No activity is previous to the root");
+                echo $OUTPUT->notification("No activity is previous to the root");
             break;
 
 			case 'SB.2.5-1':
-                notify("Sequencing session has already begun");
+                echo $OUTPUT->notification("Sequencing session has already begun");
             break;
 
 			case 'SB.2.6-1':
-                notify("Sequencing session has already begun");
+                echo $OUTPUT->notification("Sequencing session has already begun");
             break;
 			case 'SB.2.6-2':
-                notify("No Suspended activity is defined");
+                echo $OUTPUT->notification("No Suspended activity is defined");
             break;
 
             case 'SB.2.7-1':
-                notify("Sequencing session has not begun");
+                echo $OUTPUT->notification("Sequencing session has not begun");
             break;
 			case 'SB.2.7-2':
-                notify("Flow Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Flow Sequencing Control Model Violation");
             break;
 
 			case 'SB.2.8-1':
-                notify("Sequencing session has not begun");
+                echo $OUTPUT->notification("Sequencing session has not begun");
             break;
 			case 'SB.2.8-2':
-                notify("Flow Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Flow Sequencing Control Model Violation");
             break;
 
 			case 'SB.2.9-1':
-                notify("No target for Choice");
+                echo $OUTPUT->notification("No target for Choice");
             break;
 			case 'SB.2.9-2':
-                notify("Target Activity does not exist or is unavailable");
+                echo $OUTPUT->notification("Target Activity does not exist or is unavailable");
             break;
 			case 'SB.2.9-3':
-                notify("Target Activity hidden from choice");
+                echo $OUTPUT->notification("Target Activity hidden from choice");
             break;
 			case 'SB.2.9-4':
-                notify("Choice Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Choice Sequencing Control Model Violation");
             break;
 			case 'SB.2.9-5':
-                notify("No activities to consider");
+                echo $OUTPUT->notification("No activities to consider");
             break;
 			case 'SB.2.9-6':
-                notify("Unable to activate target; target is not a child of the Current Activity");
+                echo $OUTPUT->notification("Unable to activate target; target is not a child of the Current Activity");
             break;
 			case 'SB.2.9-7':
-                notify("Choice Exit Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Choice Exit Sequencing Control Model Violation");
             break;
 			case 'SB.2.9-8':
-                notify("Unable to choose target activity - constrained choice");
+                echo $OUTPUT->notification("Unable to choose target activity - constrained choice");
             break;
 			case 'SB.2.9-9':
-                notify("Choice Request Prevented by Flow-only Activity");
+                echo $OUTPUT->notification("Choice Request Prevented by Flow-only Activity");
             break;
 
 			case 'SB.2.10-1':
-                notify("Sequencing session has not begun");
+                echo $OUTPUT->notification("Sequencing session has not begun");
             break;
 			case 'SB.2.10-2':
-                notify("Current Activity is active or suspended");
+                echo $OUTPUT->notification("Current Activity is active or suspended");
             break;
 			case 'SB.2.10-3':
-                notify("Flow Sequencing Control Model Violation");
+                echo $OUTPUT->notification("Flow Sequencing Control Model Violation");
             break;
             
             case 'SB.2.11-1':
-                notify("Sequencing session has not begun");
+                echo $OUTPUT->notification("Sequencing session has not begun");
             break;
 			case 'SB.2.11-2':
-                notify("Current Activity has not been terminated");
+                echo $OUTPUT->notification("Current Activity has not been terminated");
             break;
 
 			case 'SB.2.12-2':
-                notify("Undefined Sequencing Request");
+                echo $OUTPUT->notification("Undefined Sequencing Request");
             break;
 
 			case 'DB.1.1-1':
-                notify("Cannot deliver a non-leaf activity");
+                echo $OUTPUT->notification("Cannot deliver a non-leaf activity");
             break;
 			case 'DB.1.1-2':
-                notify("Nothing to deliver");
+                echo $OUTPUT->notification("Nothing to deliver");
             break;
 			case 'DB.1.1-3':
-                notify("Activity unavailable");
+                echo $OUTPUT->notification("Activity unavailable");
             break;
 
 			case 'DB.2-1':
-                notify("Identified activity is already active");
+                echo $OUTPUT->notification("Identified activity is already active");
             break;
 					 
 		}
@@ -2339,4 +2371,4 @@ function scorm_sequencing_exception($seq){
 
 
 
-?>
+
