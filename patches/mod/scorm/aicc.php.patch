diff --git a/mod/scorm/aicc.php b/mod/scorm/aicc.php
old mode 100755
new mode 100644
index 1cc80d1..07c6e7f
--- a/mod/scorm/aicc.php
+++ b/mod/scorm/aicc.php
@@ -1,4 +1,5 @@
 <?php
+    //Prevent Caching Headers
     header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
     header("Cache-Control: no-cache");
     header("Pragma: no-cache");
@@ -17,6 +18,12 @@
     $sessionid = required_param('session_id', PARAM_ALPHANUM);
     $aiccdata = optional_param('aicc_data', '', PARAM_RAW);
 
+    $url = new moodle_url('/mod/scorm/aicc.php', array('command'=>$command,'session_id'=>$sessionid));
+    if ($aiccdata !== 0) {
+        $url->param('aicc_data', $aiccdata);
+    }
+    $PAGE->set_url($url);
+
     require_login();
 
     if (!empty($command) && confirm_sesskey($sessionid)) {
@@ -25,7 +32,7 @@
         if (isset($SESSION->scorm_scoid)) {
             $scoid = $SESSION->scorm_scoid;
         } else {
-            error('Invalid script call');
+            print_error('cannotcallscript');
         }
         $mode = 'normal';
         if (isset($SESSION->scorm_mode)) {
@@ -42,14 +49,23 @@
         }
 
         if ($sco = scorm_get_sco($scoid, SCO_ONLY)) {
-            if (!$scorm = get_record('scorm','id',$sco->scorm)) {
-                error('Invalid script call');
+            if (!$scorm = $DB->get_record('scorm',array('id'=>$sco->scorm))) {
+                print_error('cannotcallscript');
             }
         } else {
-            error('Invalid script call');
-        }
+            print_error('cannotcallscript');
+        }
+        $aiccrequest = "MOODLE scoid: $scoid"
+                     . "\r\nMOODLE mode: $mode"
+                     . "\r\nMOODLE status: $status"
+                     . "\r\nMOODLE attempt: $attempt"
+                     . "\r\nAICC sessionid: $sessionid"
+                     . "\r\nAICC command: $command"
+                     . "\r\nAICC aiccdata:\r\n$aiccdata";
+        scorm_debug_log_write("aicc", "HACP Request:\r\n$aiccrequest", $scoid);
+        ob_start();
 
-        if ($scorm = get_record('scorm','id',$sco->scorm)) {
+        if ($scorm = $DB->get_record('scorm',array('id'=>$sco->scorm))) {
             switch ($command) {
                 case 'getparam':
                     if ($status == 'Not Initialized') {
@@ -80,6 +96,7 @@
                             $userdata->mastery_score = isset($sco->mastery_score) && is_numeric($sco->mastery_score)?trim($sco->mastery_score):'';
                             $userdata->max_time_allowed = isset($sco->max_time_allowed)?$sco->max_time_allowed:'';
                             $userdata->time_limit_action = isset($sco->time_limit_action)?$sco->time_limit_action:'';
+
                             echo "error=0\r\nerror_text=Successful\r\naicc_data=";
                             echo "[Core]\r\n";
                             echo 'Student_ID='.$userdata->student_id."\r\n";
@@ -139,7 +156,7 @@
                             echo 'Max_Time_Allowed='.$userdata->max_time_allowed."\r\n";
                             echo 'Time_Limit_Action='.$userdata->time_limit_action."\r\n";
                         } else {
-                            error('Sco not found');
+                            print_error('cannotfindsco', 'scorm');
                         }
                     }
                 break;
@@ -250,7 +267,7 @@
                                             $value .= $datarow."\r\n";
                                             next($datarows);
                                         }
-                                        $value = rawurlencode(stripslashes($value));
+                                        $value = rawurlencode($value);
                                         $id = scorm_insert_track($USER->id, $scorm->id, $sco->id, $attempt, $element, $value);
                                     }
                                 }
@@ -329,15 +346,14 @@
                 case 'exitau':
                     if ($status == 'Running') {
                         if (isset($SESSION->scorm_session_time) && ($SESSION->scorm_session_time != '')) {
-                            if ($track = get_record_select('scorm_scoes_track',"userid='$USER->id' AND scormid='$scorm->id' AND scoid='$sco->id' AND attempt='$attempt' AND element='cmi.core.total_time'")) {
+                            if ($track = $DB->get_record('scorm_scoes_track',array("userid"=>$USER->id, "scormid"=>$scorm->id,"scoid"=>$sco->id, "attempt"=>$attempt,"element"=>'cmi.core.total_time'))) {
                                // Add session_time to total_time
                                 $value = scorm_add_time($track->value, $SESSION->scorm_session_time);
                                 $track->value = $value;
                                 $track->timemodified = time();
-                                update_record('scorm_scoes_track',$track);
-                                $id = $track->id;
+                                $DB->update_record('scorm_scoes_track',$track);
                             } else {
-                                $track = new object();
+                                $track = new stdClass();
                                 $track->userid = $USER->id;
                                 $track->scormid = $scorm->id;
                                 $track->scoid = $sco->id;
@@ -345,7 +361,7 @@
                                 $track->value = $SESSION->scorm_session_time;
                                 $track->attempt = $attempt;
                                 $track->timemodified = time();
-                                $id = insert_record('scorm_scoes_track',$track);
+                                $id = $DB->insert_record('scorm_scoes_track',$track);
                             }
                             scorm_update_grades($scorm, $USER->id);
                         }
@@ -370,4 +386,6 @@
             echo "error=3\r\nerror_text=Invalid Session ID\r\n";
         }
     }
-?>
\ No newline at end of file
+    $aiccresponse = ob_get_contents();
+    scorm_debug_log_write("aicc", "HACP Response:\r\n$aiccresponse", $scoid);
+    ob_end_flush();
\ No newline at end of file
