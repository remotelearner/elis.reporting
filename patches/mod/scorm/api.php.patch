diff --git a/mod/scorm/api.php b/mod/scorm/api.php
index 0ed51dc..009b05d 100644
--- a/mod/scorm/api.php
+++ b/mod/scorm/api.php
@@ -18,32 +18,35 @@
 
     if (!empty($id)) {
         if (! $cm = get_coursemodule_from_id('scorm', $id)) {
-            error("Course Module ID was incorrect");
+            print_error('invalidcoursemodule');
         }
-        if (! $course = get_record("course", "id", $cm->course)) {
-            error("Course is misconfigured");
+        if (! $course = $DB->get_record('course', array('id'=>$cm->course))) {
+            print_error('coursemisconf');
         }
-        if (! $scorm = get_record("scorm", "id", $cm->instance)) {
-            error("Course module is incorrect");
+        if (! $scorm = $DB->get_record('scorm', array('id'=>$cm->instance))) {
+            print_error('invalidcoursemodule');
         }
     } else if (!empty($a)) {
-        if (! $scorm = get_record("scorm", "id", $a)) {
-            error("Course module is incorrect");
+        if (! $scorm = $DB->get_record('scorm', array('id'=>$a))) {
+            print_error('coursemisconf');
         }
-        if (! $course = get_record("course", "id", $scorm->course)) {
-            error("Course is misconfigured");
+        if (! $course = $DB->get_record('course', array('id'=>$scorm->course))) {
+            print_error('coursemisconf');
         }
-        if (! $cm = get_coursemodule_from_instance("scorm", $scorm->id, $course->id)) {
-            error("Course Module ID was incorrect");
+        if (! $cm = get_coursemodule_from_instance('scorm', $scorm->id, $course->id)) {
+            print_error('invalidcoursemodule');
         }
     } else {
-        error('A required parameter is missing');
+        print_error('missingparameter');
     }
 
+    $PAGE->set_url('/mod/scorm/api.php', array('scoid'=>$scoid, 'id'=>$cm->id));
+
     require_login($course->id, false, $cm);
 
     if ($usertrack = scorm_get_tracks($scoid,$USER->id,$attempt)) {
-        if ((isset($usertrack->{'cmi.exit'}) && ($usertrack->{'cmi.exit'} != 'time-out')) || ($scorm->version != "SCORM_1.3")) {
+        //according to SCORM 2004 spec(RTE V1, 4.2.8), only cmi.exit==suspend should allow previous datamodel elements on re-launch
+        if ($scorm->version != "SCORM_1.3" || (isset($usertrack->{'cmi.exit'}) && ($usertrack->{'cmi.exit'} == 'suspend'))) {
             foreach ($usertrack as $key => $value) {
                 $userdata->$key = addslashes_js($value);
             }
@@ -71,10 +74,10 @@
             $userdata->$key = addslashes_js($value);
         }
     } else {
-        error('Sco not found');
+        print_error('cannotfindsco', 'scorm');
     }
     if (!$sco = scorm_get_sco($scoid)) {
-        error('Sco not found');
+        print_error('cannotfindsco', 'scorm');
     }
     $scorm->version = strtolower(clean_param($scorm->version, PARAM_SAFEDIR));   // Just to be safe
     if (file_exists($CFG->dirroot.'/mod/scorm/datamodels/'.$scorm->version.'.js.php')) {
@@ -86,6 +89,7 @@
     scorm_insert_track($USER->id,$scorm->id,$scoid,$attempt,'x.start.time',time());
 ?>
 
+
 var errorCode = "0";
 function underscore(str) {
     str = String(str).replace(/.N/g,".");
