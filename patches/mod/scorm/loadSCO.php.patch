diff --git a/mod/scorm/loadSCO.php b/mod/scorm/loadSCO.php
old mode 100755
new mode 100644
index 035a08d..0d9426d
--- a/mod/scorm/loadSCO.php
+++ b/mod/scorm/loadSCO.php
@@ -1,4 +1,4 @@
-<?php  // $Id$
+<?php
     require_once('../../config.php');
     require_once($CFG->dirroot.'/mod/scorm/locallib.php');
 
@@ -10,29 +10,44 @@
 
     if (!empty($id)) {
         if (! $cm = get_coursemodule_from_id('scorm', $id)) {
-            error('Course Module ID was incorrect');
+            print_error('invalidcoursemodule');
         }
-        if (! $course = get_record('course', 'id', $cm->course)) {
-            error('Course is misconfigured');
+        if (! $course = $DB->get_record('course', array('id'=>$cm->course))) {
+            print_error('coursemisconf');
         }
-        if (! $scorm = get_record('scorm', 'id', $cm->instance)) {
-            error('Course module is incorrect');
+        if (! $scorm = $DB->get_record('scorm', array('id'=>$cm->instance))) {
+            print_error('invalidcoursemodule');
         }
     } else if (!empty($a)) {
-        if (! $scorm = get_record('scorm', 'id', $a)) {
-            error('Course module is incorrect');
+        if (! $scorm = $DB->get_record('scorm', array('id'=>$a))) {
+            print_error('coursemisconf');
         }
-        if (! $course = get_record('course', 'id', $scorm->course)) {
-            error('Course is misconfigured');
+        if (! $course = $DB->get_record('course', array('id'=>$scorm->course))) {
+            print_error('coursemisconf');
         }
         if (! $cm = get_coursemodule_from_instance('scorm', $scorm->id, $course->id)) {
-            error('Course Module ID was incorrect');
+            print_error('invalidcoursemodule');
         }
     } else {
-        error('A required parameter is missing');
+        print_error('missingparameter');
     }
 
+    $PAGE->set_url('/mod/scorm/loadSCO.php', array('scoid'=>$scoid, 'id'=>$cm->id));
+
     require_login($course->id, false, $cm);
+
+    //check if scorm closed
+    $timenow = time();
+    if ($scorm->timeclose !=0) {
+        if ($scorm->timeopen > $timenow) {
+            print_error('notopenyet', 'scorm', null, userdate($scorm->timeopen));
+        } else if ($timenow > $scorm->timeclose) {
+            print_error('expired', 'scorm', null, userdate($scorm->timeclose));
+        }
+    }
+
+    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
+
     if (!empty($scoid)) {
     //
     // Direct SCO request
@@ -40,7 +55,7 @@
         if ($sco = scorm_get_sco($scoid)) {
             if ($sco->launch == '') {
                 // Search for the next launchable sco
-                if ($scoes = get_records_select('scorm_scoes','scorm='.$scorm->id." AND launch<>'".sql_empty()."' AND id>".$sco->id,'id ASC')) {
+                if ($scoes = $DB->get_records_select('scorm_scoes',"scorm = ? AND '.$DB->sql_isnotempty('scorm_scoes', 'launch', false, true).' AND id > ?",array($scorm->id,$sco->id), 'id ASC')) {
                     $sco = current($scoes);
                 }
             }
@@ -50,13 +65,13 @@
     // If no sco was found get the first of SCORM package
     //
     if (!isset($sco)) {
-        $scoes = get_records_select('scorm_scoes','scorm='.$scorm->id." AND launch<>'".sql_empty()."'",'id ASC');
+        $scoes = $DB->get_records_select('scorm_scoes',"scorm = ? AND ".$DB->sql_isnotempty('scorm_scoes', 'launch', false, true), array($scorm->id),'id ASC');
         $sco = current($scoes);
     }
 
     if ($sco->scormtype == 'asset') {
        $attempt = scorm_get_last_attempt($scorm->id,$USER->id);
-       $element = ($scorm->version == 'scorm_13' || $scorm->version == 'SCORM_1.3') ?'cmi.completion_status':'cmi.core.lesson_status';
+       $element = ($scorm->version == 'scorm_13' || $scorm->version == 'SCORM_1.3') ? 'cmi.completion_status':'cmi.core.lesson_status';
        $value = 'completed';
        $result = scorm_insert_track($USER->id, $scorm->id, $sco->id, $attempt, $element, $value);
     }
@@ -92,30 +107,22 @@
     }
 
     if (scorm_external_link($sco->launch)) {
-        // Remote learning activity
+        //TODO: does this happen?
         $result = $launcher;
-    } else if ($scorm->reference[0] == '#') {
-        // Repository
-        $result = $CFG->repositorywebroot.substr($scorm->reference,1).'/'.$sco->launch;
-    } else {
-        if ((basename($scorm->reference) == 'imsmanifest.xml') && scorm_external_link($scorm->reference)) {
-            // Remote manifest
+
+    } else if ($scorm->scormtype === SCORM_TYPE_EXTERNAL) {
+        // Remote learning activity
             $result = dirname($scorm->reference).'/'.$launcher;
-        } else {
-            // Moodle internal package/manifest or remote (auto-imported) package
-            if (basename($scorm->reference) == 'imsmanifest.xml') {
-                $basedir = dirname($scorm->reference);
-            } else {
-                $basedir = $CFG->moddata.'/scorm/'.$scorm->id;
-            }
-            //note: do not convert this to use get_file_url()!
-            //      SCORM does not work without slasharguments anyway and there might be some extra ?xx=yy params
-            //      see MDL-16060
-            $result = $CFG->wwwroot.'/file.php/'.$scorm->course.'/'.$basedir.'/'.$launcher;
-        }
-    }
 
-    $scormpixdir = $CFG->modpixpath.'/scorm/pix';
+    } else if ($scorm->scormtype === SCORM_TYPE_IMSREPOSITORY) {
+        // Repository
+        $result = $CFG->repositorywebroot.substr($scorm->reference, 1).'/'.$sco->launch;
+
+    } else if ($scorm->scormtype === SCORM_TYPE_LOCAL or $scorm->scormtype === SCORM_TYPE_LOCALSYNC) {
+        //note: do not convert this to use get_file_url() or moodle_url()
+        //SCORM does not work without slasharguments and moodle_url() encodes querystring vars
+        $result = "$CFG->wwwroot/pluginfile.php/$context->id/mod_scorm/content/$scorm->revision/$launcher";
+    }
 
     // which API are we looking for
     $LMS_api = ($scorm->version == 'scorm_12' || $scorm->version == 'SCORM_1.2' || empty($scorm->version)) ? 'API' : 'API_1484_11';
@@ -125,21 +132,22 @@
         <title>LoadSCO</title>
         <script type="text/javascript">
         //<![CDATA[
-        var apiHandle = null;
-        var findAPITries = 0;
+        var myApiHandle = null;
+        var myFindAPITries = 0;
 
-        function getAPIHandle() {
-           if (apiHandle == null) {
-              apiHandle = getAPI();
+        function myGetAPIHandle() {
+           myFindAPITries = 0;
+           if (myApiHandle == null) {
+              myApiHandle = myGetAPI();
            }
-           return apiHandle;
+           return myApiHandle;
         }
 
-        function findAPI(win) {
+        function myFindAPI(win) {
            while ((win.<?php echo $LMS_api; ?> == null) && (win.parent != null) && (win.parent != win)) {
-              findAPITries++;
+              myFindAPITries++;
               // Note: 7 is an arbitrary number, but should be more than sufficient
-              if (findAPITries > 7) {
+              if (myFindAPITries > 7) {
                  return null;
               }
               win = win.parent;
@@ -148,10 +156,10 @@
         }
 
         // hun for the API - needs to be loaded before we can launch the package
-        function getAPI() {
-           var theAPI = findAPI(window);
+        function myGetAPI() {
+           var theAPI = myFindAPI(window);
            if ((theAPI == null) && (window.opener != null) && (typeof(window.opener) != "undefined")) {
-              theAPI = findAPI(window.opener);
+              theAPI = myFindAPI(window.opener);
            }
            if (theAPI == null) {
               return null;
@@ -160,15 +168,15 @@
         }
 
         function doredirect() {
-            if (getAPI() != null) {
+            if (myGetAPIHandle() != null) {
                 location = "<?php echo $result ?>";
             }
             else {
-                document.body.innerHTML = "<p><?php echo get_string('activityloading', 'scorm');?> <span id='countdown'><?php echo $delayseconds ?></span> <?php echo get_string('numseconds');?>. &nbsp; <img src='<?php echo $scormpixdir;?>/wait.gif'><p>";
+                document.body.innerHTML = "<p><?php echo get_string('activityloading', 'scorm');?> <span id='countdown'><?php echo $delayseconds ?></span> <?php echo get_string('numseconds', 'moodle', '');?>. &nbsp; <img src='<?php echo $OUTPUT->pix_url('wait', 'scorm') ?>'><p>";
                 var e = document.getElementById("countdown");
                 var cSeconds = parseInt(e.innerHTML);
                 var timer = setInterval(function() {
-                                                if( cSeconds && getAPI() == null ) {
+                                                if( cSeconds && myGetAPIHandle() == null ) {
                                                     e.innerHTML = --cSeconds;
                                                 } else {
                                                     clearInterval(timer);
