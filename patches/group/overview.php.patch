diff --git a/group/overview.php b/group/overview.php
index ec567aa..75efcc7 100644
--- a/group/overview.php
+++ b/group/overview.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 /**
  * Print an overview of groupings & group membership
  *
@@ -9,6 +9,7 @@
  */
 
 require_once('../config.php');
+require_once($CFG->libdir . '/filelib.php');
 
 $courseid   = required_param('id', PARAM_INT);
 $groupid    = optional_param('group', 0, PARAM_INT);
@@ -17,10 +18,19 @@ $groupingid = optional_param('grouping', 0, PARAM_INT);
 $returnurl = $CFG->wwwroot.'/group/index.php?id='.$courseid;
 $rooturl   = $CFG->wwwroot.'/group/overview.php?id='.$courseid;
 
-if (!$course = get_record('course', 'id',$courseid)) {
-    error('invalidcourse');
+if (!$course = $DB->get_record('course', array('id'=>$courseid))) {
+    print_error('invalidcourse');
 }
 
+$url = new moodle_url('/group/overview.php', array('id'=>$courseid));
+if ($groupid !== 0) {
+    $url->param('group', $groupid);
+}
+if ($groupingid !== 0) {
+    $url->param('grouping', $groupingid);
+}
+$PAGE->set_url($url);
+
 // Make sure that the user has permissions to manage groups.
 require_login($course);
 
@@ -38,49 +48,41 @@ $strnogroups         = get_string('nogroups', 'group');
 $strdescription      = get_string('description');
 
 // Get all groupings
-if (empty($CFG->enablegroupings)) {
-    $groupings  = array();
-    $members    = array(-1 => array()); //groups not in a grouping
-    $groupingid = 0;
-} else {
-    if (!$groupings = get_records('groupings', 'courseid', $courseid, 'name')) {
-        $groupings = array();
-    }
-    $members = array();
-    foreach ($groupings as $grouping) {
+$groupings = $DB->get_records('groupings', array('courseid'=>$courseid), 'name');
+$members = array();
+foreach ($groupings as $grouping) {
         $members[$grouping->id] = array();
-    }
-    $members[-1] = array(); //groups not in a grouping
 }
+$members[-1] = array(); //groups not in a grouping
 
 // Get all groups
-if (!$groups = get_records('groups', 'courseid', $courseid, 'name')) {
-    $groups = array();
+$groups = $DB->get_records('groups', array('courseid'=>$courseid), 'name');
+
+$params = array('courseid'=>$courseid);
+if ($groupid) {
+    $groupwhere = "AND g.id = :groupid";
+    $params['groupid']   = $groupid;
+} else {
+    $groupwhere = "";
 }
 
-if (empty($CFG->enablegroupings)) {
-    $groupwhere    = $groupid ? "AND g.id = $groupid" : "";
-    $sql = "SELECT g.id AS groupid, NULL AS groupingid, u.id AS userid, u.firstname, u.lastname, u.idnumber, u.username
-              FROM {$CFG->prefix}groups g
-                   LEFT JOIN {$CFG->prefix}groups_members gm ON g.id = gm.groupid
-                   LEFT JOIN {$CFG->prefix}user u ON gm.userid = u.id
-             WHERE g.courseid = {$course->id} $groupwhere
-          ORDER BY g.name, u.lastname, u.firstname";
+if ($groupingid) {
+    $groupingwhere = "AND gg.groupingid = :groupingid";
+    $params['groupingid'] = $groupingid;
 } else {
-    $groupingwhere = $groupingid ? "AND gg.groupingid = $groupingid" : "";
-    $groupwhere    = $groupid ? "AND g.id = $groupid" : "";
-    $sql = "SELECT g.id AS groupid, gg.groupingid, u.id AS userid, u.firstname, u.lastname, u.idnumber, u.username
-              FROM {$CFG->prefix}groups g
-                   LEFT JOIN {$CFG->prefix}groupings_groups gg ON g.id = gg.groupid
-                   LEFT JOIN {$CFG->prefix}groups_members gm ON g.id = gm.groupid
-                   LEFT JOIN {$CFG->prefix}user u ON gm.userid = u.id
-             WHERE g.courseid = {$course->id} $groupingwhere $groupwhere
-          ORDER BY g.name, u.lastname, u.firstname";
+    $groupingwhere = "";
 }
+$sql = "SELECT g.id AS groupid, gg.groupingid, u.id AS userid, u.firstname, u.lastname, u.idnumber, u.username
+          FROM {groups} g
+               LEFT JOIN {groupings_groups} gg ON g.id = gg.groupid
+               LEFT JOIN {groups_members} gm ON g.id = gm.groupid
+               LEFT JOIN {user} u ON gm.userid = u.id
+         WHERE g.courseid = :courseid $groupwhere $groupingwhere
+      ORDER BY g.name, u.lastname, u.firstname";
 
-if ($rs = get_recordset_sql($sql)) {
-    while ($row = rs_fetch_next_record($rs)) {
-        $user = new object();
+$rs = $DB->get_recordset_sql($sql, $params);
+foreach ($rs as $row) {
+    $user = new stdClass();
         $user->id        = $row->userid;
         $user->firstname = $row->firstname;
         $user->lastname  = $row->lastname;
@@ -95,51 +97,57 @@ if ($rs = get_recordset_sql($sql)) {
         if(isset($user->id)){
            $members[$row->groupingid][$row->groupid][] = $user;
         }
-    }
-    rs_close($rs);
 }
+$rs->close();
 
-
-// Print the page and form
-$navlinks = array(array('name'=>$strparticipants, 'link'=>$CFG->wwwroot.'/user/index.php?id='.$courseid, 'type'=>'misc'),
-                  array('name'=>$strgroups, 'link'=>'', 'type'=>'misc'));
-$navigation = build_navigation($navlinks);
+navigation_node::override_active_url(new moodle_url('/group/index.php', array('id'=>$courseid)));
+$PAGE->navbar->add(get_string('overview', 'group'));
 
 /// Print header
-print_header_simple($strgroups, ': '.$strgroups, $navigation, '', '', true, '', navmenu($course));
+$PAGE->set_title($strgroups);
+$PAGE->set_heading($course->fullname);
+$PAGE->set_pagelayout('standard');
+echo $OUTPUT->header();
+
 // Add tabs
 $currenttab = 'overview';
 require('tabs.php');
 
 /// Print overview
-print_heading(format_string($course->shortname) .' '.$stroverview, 'center', 3);
+echo $OUTPUT->heading(format_string($course->shortname, true, array('context' => $context)) .' '.$stroverview, 3);
 
 echo $strfiltergroups;
 
-if (!empty($CFG->enablegroupings)) {
-    $options = array();
-    $options[0] = get_string('all');
-    foreach ($groupings as $grouping) {
+$options = array();
+$options[0] = get_string('all');
+foreach ($groupings as $grouping) {
         $options[$grouping->id] = strip_tags(format_string($grouping->name));
-    }
-    popup_form($rooturl.'&amp;group='.$groupid.'&amp;grouping=', $options, 'selectgrouping', $groupingid, '', '', '', false, 'self', $strgrouping);
 }
+$popupurl = new moodle_url($rooturl.'&group='.$groupid);
+$select = new single_select($popupurl, 'grouping', $options, $groupingid, array());
+$select->label = $strgrouping;
+$select->formid = 'selectgrouping';
+echo $OUTPUT->render($select);
 
 $options = array();
 $options[0] = get_string('all');
 foreach ($groups as $group) {
     $options[$group->id] = strip_tags(format_string($group->name));
 }
-popup_form($rooturl.'&amp;grouping='.$groupingid.'&amp;group=', $options, 'selectgroup', $groupid, '', '', '', false, 'self', $strgroup);
-
+$popupurl = new moodle_url($rooturl.'&grouping='.$groupingid);
+$select = new single_select($popupurl, 'group', $options, $groupid, array());
+$select->label = $strgroup;
+$select->formid = 'selectgroup';
+echo $OUTPUT->render($select);
 
 /// Print table
 $printed = false;
+$hoverevents = array();
 foreach ($members as $gpgid=>$groupdata) {
     if ($groupingid and $groupingid != $gpgid) {
         continue; // do not show
     }
-    $table = new object();
+    $table = new html_table();
     $table->head  = array(get_string('groupscount', 'group', count($groupdata)), get_string('groupmembers', 'group'), get_string('usercount', 'group'));
     $table->size  = array('20%', '70%', '10%');
     $table->align = array('left', 'left', 'center');
@@ -150,15 +158,17 @@ foreach ($members as $gpgid=>$groupdata) {
             continue;
         }
         $line = array();
-        $name = format_string($groups[$gpid]->name);
-        $jsdescription = addslashes_js(trim(format_text($groups[$gpid]->description)));
+        $name = print_group_picture($groups[$gpid], $course->id, false, true, false) . format_string($groups[$gpid]->name);
+        $description = file_rewrite_pluginfile_urls($groups[$gpid]->description, 'pluginfile.php', $context->id, 'group', 'description', $gpid);
+        $options = new stdClass;
+        $options->noclean = true;
+        $options->overflowdiv = true;
+        $jsdescription = trim(format_text($description, $groups[$gpid]->descriptionformat, $options));
         if (empty($jsdescription)) {
             $line[] = $name;
         } else {
-            $jsstrdescription = addslashes_js($strdescription);
-            $overlib = "return overlib('$jsdescription', BORDER, 0, FGCLASS, 'description', "
-                      ."CAPTIONFONTCLASS, 'caption', CAPTION, '$jsstrdescription');";
-            $line[] = '<span onmouseover="'.s($overlib).'" onmouseout="return nd();">'.$name.'</span>';
+            $line[] = html_writer::tag('span', $name, array('id'=>'group_'.$gpid));
+            $hoverevents['group_'.$gpid] = $jsdescription;
         }
         $fullnames = array();
         foreach ($users as $user) {
@@ -171,17 +181,23 @@ foreach ($members as $gpgid=>$groupdata) {
     if ($groupid and empty($table->data)) {
         continue;
     }
-    if (!empty($CFG->enablegroupings)) {
         if ($gpgid < 0) {
-            print_heading($strnotingrouping, '', 3);
+        echo $OUTPUT->heading($strnotingrouping, 3);
         } else {
-            print_heading(format_string($groupings[$gpgid]->name), '', 3);
-            print_box(format_text($groupings[$gpgid]->description), 'generalbox boxwidthnarrow boxaligncenter');
-        }
+        echo $OUTPUT->heading(format_string($groupings[$gpgid]->name), 3);
+        $description = file_rewrite_pluginfile_urls($groupings[$gpgid]->description, 'pluginfile.php', $context->id, 'grouping', 'description', $gpgid);
+        $options = new stdClass;
+        $options->noclean = true;
+        $options->overflowdiv = true;
+        echo $OUTPUT->box(format_text($description, $groupings[$gpgid]->descriptionformat, $options), 'generalbox boxwidthnarrow boxaligncenter');
     }
-    print_table($table, false);
+    echo html_writer::table($table);
     $printed = true;
 }
 
-print_footer($course);
-?>
+if (count($hoverevents)>0) {
+    $PAGE->requires->string_for_js('description', 'moodle');
+    $PAGE->requires->js_init_call('M.core_group.init_hover_events', array($hoverevents));
+}
+
+echo $OUTPUT->footer();
