diff --git a/my/index.php b/my/index.php
index 28f6b18..1324c79 100644
--- a/my/index.php
+++ b/my/index.php
@@ -1,144 +1,150 @@
-<?php  // $Id$
-
-    // this is the 'my moodle' page
-
-    require_once('../config.php');
-    require_once($CFG->libdir.'/blocklib.php');
-    require_once($CFG->dirroot.'/course/lib.php');
-    require_once('pagelib.php');
-    
-    require_login();
-
-    $mymoodlestr = get_string('mymoodle','my');
-
-    if (isguest()) {
-        $wwwroot = $CFG->wwwroot.'/login/index.php';
-        if (!empty($CFG->loginhttps)) {
-            $wwwroot = str_replace('http:','https:', $wwwroot);
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * My Moodle -- a user's personal dashboard
+ *
+ * - each user can currently have their own page (cloned from system and then customised)
+ * - only the user can see their own dashboard
+ * - users can add any blocks they want
+ * - the administrators can define a default site dashboard for users who have
+ *   not created their own dashboard
+ *
+ * This script implements the user's view of the dashboard, and allows editing
+ * of the dashboard.
+ *
+ * @package    moodlecore
+ * @subpackage my
+ * @copyright  2010 Remote-Learner.net
+ * @author     Hubert Chathi <hubert@remote-learner.net>
+ * @author     Olav Jordan <olav.jordan@remote-learner.net>
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+require_once(dirname(__FILE__) . '/../config.php');
+require_once($CFG->dirroot . '/my/lib.php');
+
+redirect_if_major_upgrade_required();
+
+// TODO Add sesskey check to edit
+$edit   = optional_param('edit', null, PARAM_BOOL);    // Turn editing on and off
+
+require_login();
+
+$strmymoodle = get_string('myhome');
+
+if (isguestuser()) {  // Force them to see system default, no editing allowed
+    $userid = NULL; 
+    $USER->editing = $edit = 0;  // Just in case
+    $context = get_context_instance(CONTEXT_SYSTEM);
+    $PAGE->set_blocks_editing_capability('moodle/my:configsyspages');  // unlikely :)
+    $header = "$SITE->shortname: $strmymoodle (GUEST)";
+
+} else {        // We are trying to view or edit our own My Moodle page
+    $userid = $USER->id;  // Owner of the page
+    $context = get_context_instance(CONTEXT_USER, $USER->id);
+    $PAGE->set_blocks_editing_capability('moodle/my:manageblocks');
+    $header = "$SITE->shortname: $strmymoodle";
+}
+
+// Get the My Moodle page info.  Should always return something unless the database is broken.
+if (!$currentpage = my_get_page($userid, MY_PAGE_PRIVATE)) {
+    print_error('mymoodlesetup');
+}
+
+if (!$currentpage->userid) {
+    $context = get_context_instance(CONTEXT_SYSTEM);  // So we even see non-sticky blocks
+}
+
+// Start setting up the page
+$params = array();
+$PAGE->set_context($context);
+$PAGE->set_url('/my/index.php', $params);
+$PAGE->set_pagelayout('mydashboard');
+$PAGE->set_pagetype('my-index');
+$PAGE->blocks->add_region('content');
+$PAGE->set_subpage($currentpage->id);
+$PAGE->set_title($header);
+$PAGE->set_heading($header);
+
+if (get_home_page() != HOMEPAGE_MY) {
+    if (optional_param('setdefaulthome', false, PARAM_BOOL)) {
+        set_user_preference('user_home_page_preference', HOMEPAGE_MY);
+    } else if (!empty($CFG->defaulthomepage) && $CFG->defaulthomepage == HOMEPAGE_USER) {
+        $PAGE->settingsnav->get('usercurrentsettings')->add(get_string('makethismyhome'), new moodle_url('/my/', array('setdefaulthome'=>true)), navigation_node::TYPE_SETTING);
         }
-
-        print_header($mymoodlestr);
-        notice_yesno(get_string('noguest', 'my').'<br /><br />'.get_string('liketologin'),
-                     $wwwroot, $CFG->wwwroot);
-        print_footer();
-        die();
-    }
-
-     // Bounds for block widths
-    // more flexible for theme designers taken from theme config.php
-    $lmin = (empty($THEME->block_l_min_width)) ? 100 : $THEME->block_l_min_width;
-    $lmax = (empty($THEME->block_l_max_width)) ? 210 : $THEME->block_l_max_width;
-    $rmin = (empty($THEME->block_r_min_width)) ? 100 : $THEME->block_r_min_width;
-    $rmax = (empty($THEME->block_r_max_width)) ? 210 : $THEME->block_r_max_width;
-
-    define('BLOCK_L_MIN_WIDTH', $lmin);
-    define('BLOCK_L_MAX_WIDTH', $lmax);
-    define('BLOCK_R_MIN_WIDTH', $rmin);
-    define('BLOCK_R_MAX_WIDTH', $rmax);
-
-    $edit        = optional_param('edit', -1, PARAM_BOOL);
-    $blockaction = optional_param('blockaction', '', PARAM_ALPHA);
-
-    $PAGE = page_create_instance($USER->id);
-
-    $pageblocks = blocks_setup($PAGE,BLOCKS_PINNED_BOTH);
-
-    if (($edit != -1) and $PAGE->user_allowed_editing()) {
-        $USER->editing = $edit;
+}
+
+// Toggle the editing state and switches
+if ($PAGE->user_allowed_editing()) {
+    if ($edit !== null) {             // Editing state was specified
+        $USER->editing = $edit;       // Change editing state
+        if (!$currentpage->userid && $edit) {
+            // If we are viewing a system page as ordinary user, and the user turns
+            // editing on, copy the system pages as new user pages, and get the
+            // new page record
+            if (!$currentpage = my_copy_page($USER->id, MY_PAGE_PRIVATE)) {
+                print_error('mymoodlesetup');
     }
-
-    $PAGE->print_header($mymoodlestr);
-
-    echo '<table id="layout-table">';
-    echo '<tr valign="top">';
-
-    $lt = (empty($THEME->layouttable)) ? array('left', 'middle', 'right') : $THEME->layouttable;
-    foreach ($lt as $column) {
-        switch ($column) {
-            case 'left':
-
-    $blocks_preferred_width = bounded_number(BLOCK_L_MIN_WIDTH, blocks_preferred_width($pageblocks[BLOCK_POS_LEFT]), BLOCK_L_MAX_WIDTH);
-
-    if(blocks_have_content($pageblocks, BLOCK_POS_LEFT) || $PAGE->user_is_editing()) {
-        echo '<td style="vertical-align: top; width: '.$blocks_preferred_width.'px;" id="left-column">';
-        print_container_start();
-        blocks_print_group($PAGE, $pageblocks, BLOCK_POS_LEFT);
-        print_container_end();
-        echo '</td>';
+            $context = get_context_instance(CONTEXT_USER, $USER->id);
+            $PAGE->set_context($context);
+            $PAGE->set_subpage($currentpage->id);
     }
-    
-            break;
-            case 'middle':
-    
-    echo '<td valign="top" id="middle-column">';
-    print_container_start(TRUE);
-
-/// The main overview in the middle of the page
-    $courses_limit = 21;
-    if (isset($CFG->mycoursesperpage)) {
-        $courses_limit = $CFG->mycoursesperpage;
+    } else {                          // Editing state is in session
+        if ($currentpage->userid) {   // It's a page we can edit, so load from session
+            if (!empty($USER->editing)) {
+                $edit = 1;
+            } else {
+                $edit = 0;
     }
-
-    $morecourses = false;
-    if ($courses_limit > 0) {
-        $courses_limit = $courses_limit + 1;
+        } else {                      // It's a system page and they are not allowed to edit system pages
+            $USER->editing = $edit = 0;          // Disable editing completely, just to be safe
     }
-
-    $courses = get_my_courses($USER->id, 'visible DESC,sortorder ASC', '*', false, $courses_limit);
-    $site = get_site();
-    $course = $site; //just in case we need the old global $course hack
-
-    if (($courses_limit > 0) && (count($courses) >= $courses_limit)) {
-        //remove the 'marker' course that we retrieve just to see if we have more than $courses_limit
-        array_pop($courses);
-        $morecourses = true;
     }
 
-    if (array_key_exists($site->id,$courses)) {
-        unset($courses[$site->id]);
-    }
+    // Add button for editing page
+    $params = array('edit' => !$edit);
 
-    foreach ($courses as $c) {
-        if (isset($USER->lastcourseaccess[$c->id])) {
-            $courses[$c->id]->lastaccess = $USER->lastcourseaccess[$c->id];
+    if (!$currentpage->userid) {
+        // viewing a system page -- let the user customise it
+        $editstring = get_string('updatemymoodleon');
+        $params['edit'] = 1;
+    } else if (empty($edit)) {
+        $editstring = get_string('updatemymoodleon');
         } else {
-            $courses[$c->id]->lastaccess = 0;
-        }
+        $editstring = get_string('updatemymoodleoff');
     }
     
-    if (empty($courses)) {
-        print_simple_box(get_string('nocourses','my'),'center');
-    } else {
-        print_overview($courses);
-    }
-    
-    // if more than 20 courses
-    if ($morecourses) {
-        echo '<br />...';  
-    }
+    $url = new moodle_url("$CFG->wwwroot/my/index.php", $params);
+    $button = $OUTPUT->single_button($url, $editstring);
+    $PAGE->set_button($button);
     
-    print_container_end();
-    echo '</td>';
+} else {
+    $USER->editing = $edit = 0;
+}
     
-            break;
-            case 'right':
+// HACK WARNING!  This loads up all this page's blocks in the system context
+if ($currentpage->userid == 0) {
+    $CFG->blockmanagerclass = 'my_syspage_block_manager';
+}
             
-    $blocks_preferred_width = bounded_number(BLOCK_R_MIN_WIDTH, blocks_preferred_width($pageblocks[BLOCK_POS_RIGHT]), BLOCK_R_MAX_WIDTH);
-
-    if (blocks_have_content($pageblocks, BLOCK_POS_RIGHT) || $PAGE->user_is_editing()) {
-        echo '<td style="vertical-align: top; width: '.$blocks_preferred_width.'px;" id="right-column">';
-        print_container_start();
-        blocks_print_group($PAGE, $pageblocks, BLOCK_POS_RIGHT);
-        print_container_end();
-        echo '</td>';
-    }
-            break;
-        }
-    }
 
-    /// Finish the page
-    echo '</tr></table>';
+echo $OUTPUT->header();
 
-    print_footer();
+echo $OUTPUT->blocks_for_region('content');
 
-?>
+echo $OUTPUT->footer();
