diff --git a/auth/shibboleth/logout.php b/auth/shibboleth/logout.php
index 24ab73a..c5c5410 100644
--- a/auth/shibboleth/logout.php
+++ b/auth/shibboleth/logout.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 
 // Implements logout for Shibboleth authenticated users according to:
 // - https://spaces.internet2.edu/display/SHIB2/NativeSPLogoutInitiator
@@ -126,7 +126,7 @@ WSDL;
 
 function LogoutNotification($SessionID){
     
-    global $CFG, $SESSION;
+    global $CFG, $SESSION, $DB;
     
     // Delete session of user using $SessionID
     if(empty($CFG->dbsessions)) {
@@ -139,7 +139,7 @@ function LogoutNotification($SessionID){
                 while (($file = readdir($dh)) !== false) {
                     // Check if it is a file
                     if (is_file($dir.'/'.$file)){
-                        $session_key = ereg_replace('sess_', '', $file);
+                        $session_key = preg_replace('/sess_/', '', $file);
                         
                         // Read session file data
                         $data = file($dir.'/'.$file);
@@ -165,11 +165,12 @@ function LogoutNotification($SessionID){
         }
     } else {
         // DB Session
+        //TODO: this needs to be rewritten to use new session stuff
         if (!empty($CFG->sessiontimeout)) {
             $ADODB_SESS_LIFE   = $CFG->sessiontimeout;
         }
         
-            if ($user_session_data = get_records_sql('SELECT sesskey, sessdata FROM '. $CFG->prefix .'sessions2 WHERE expiry > NOW()')) {
+            if ($user_session_data = $DB->get_records_sql('SELECT sesskey, sessdata FROM {sessions2} WHERE expiry > NOW()')) {
             foreach ($user_session_data as $session_data) {
                 
                 // Get user session
@@ -196,13 +197,12 @@ function LogoutNotification($SessionID){
 /*****************************************************************************/
 
 // Same function as in adodb, but cannot be used for file session for some reason...
-function unserializesession( $serialized_string ){
-    $variables = array( );
-    $a = preg_split( "/(\w+)\|/", $serialized_string, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE );
-    for( $i = 0; $i < count( $a ); $i = $i+2 ) {
-            $variables[$a[$i]] = unserialize( $a[$i+1] );
-    }
-    return( $variables );
+function unserializesession($serialized_string) {
+    $variables = array();
+    $a = preg_split("/(\w+)\|/", $serialized_string, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);
+    $counta = count($a);
+    for ($i = 0; $i < $counta; $i = $i+2) {
+            $variables[$a[$i]] = unserialize($a[$i+1]);
+    }
+    return $variables;
 }
-
-?>
