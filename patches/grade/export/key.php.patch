diff --git a/grade/export/key.php b/grade/export/key.php
index 5d648f9..cd089d1 100644
--- a/grade/export/key.php
+++ b/grade/export/key.php
@@ -15,36 +15,45 @@
 // You should have received a copy of the GNU General Public License
 // along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
 
+/**
+ * Grade export key edit page.
+ *
+ * @package   moodlecore
+ * @copyright 2008 Petr Skoda
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
 require_once('../../config.php');
 require_once('key_form.php');
 
 /// get url variables
 $courseid = optional_param('courseid', 0, PARAM_INT);
-$id       = optional_param('id', 0, PARAM_INT);
+$id       = optional_param('id', 0, PARAM_INT); // The key's id
 $delete   = optional_param('delete', 0, PARAM_BOOL);
 $confirm  = optional_param('confirm', 0, PARAM_BOOL);
 
+$PAGE->set_url('/grade/export/key.php', array('id' => $id, 'courseid' => $courseid));
+
 if ($id) {
-    if (!$key = get_record('user_private_key', 'id', $id)) {
-        error('Group ID was incorrect');
+    if (!$key = $DB->get_record('user_private_key', array('id' => $id))) {
+        print_error('invalidgroupid');
     }
     if (empty($courseid)) {
         $courseid = $key->instance;
 
     } else if ($courseid != $key->instance) {
-        error('Course ID was incorrect');
+        print_error('invalidcourseid');
     }
 
-    if (!$course = get_record('course', 'id', $courseid)) {
-        error('Course ID was incorrect');
+    if (!$course = $DB->get_record('course', array('id'=>$courseid))) {
+        print_error('invalidcourseid');
     }
 
 } else {
-    if (!$course = get_record('course', 'id', $courseid)) {
-        error('Course ID was incorrect');
+    if (!$course = $DB->get_record('course', array('id'=>$courseid))) {
+        print_error('invalidcourseid');
     }
-    $key = new object();
+    $key = new stdClass();
 }
 
 $key->courseid = $course->id;
@@ -55,22 +64,26 @@ require_capability('moodle/grade:export', $context);
 
 // extra security check
 if (!empty($key->userid) and $USER->id != $key->userid) {
-    error('You are not owner of this key');
+    print_error('notownerofkey');
 }
 
 $returnurl = $CFG->wwwroot.'/grade/export/keymanager.php?id='.$course->id;
 
 if ($id and $delete) {
     if (!$confirm) {
-        print_header(get_string('deleteselectedkey'), get_string('deleteselectedkey'));
+        $PAGE->set_title(get_string('deleteselectedkey'));
+        $PAGE->set_heading($course->fullname);
+        echo $OUTPUT->header();
         $optionsyes = array('id'=>$id, 'delete'=>1, 'courseid'=>$courseid, 'sesskey'=>sesskey(), 'confirm'=>1);
         $optionsno  = array('id'=>$courseid);
-        notice_yesno(get_string('deletekeyconfirm', 'userkey', $key->value), 'key.php', 'keymanager.php', $optionsyes, $optionsno, 'get', 'get');
-        print_footer();
+        $formcontinue = new single_button(new moodle_url('key.php', $optionsyes), get_string('yes'), 'get');
+        $formcancel = new single_button(new moodle_url('keymanager.php', $optionsno), get_string('no'), 'get');
+        echo $OUTPUT->confirm(get_string('deletekeyconfirm', 'userkey', $key->value), $formcontinue, $formcancel);
+        echo $OUTPUT->footer();
         die;
 
     } else if (confirm_sesskey()){
-        delete_records('user_private_key', 'id', $id);
+        $DB->delete_records('user_private_key', array('id' => $id));
         redirect('keymanager.php?id='.$course->id);
     }
 }
@@ -85,11 +98,11 @@ if ($editform->is_cancelled()) {
 } elseif ($data = $editform->get_data()) {
 
     if ($data->id) {
-        $record = new object();
+        $record = new stdClass();
         $record->id            = $data->id;
         $record->iprestriction = $data->iprestriction;
         $record->validuntil    = $data->validuntil;
-        update_record('user_private_key', $record);
+        $DB->update_record('user_private_key', $record);
     } else {
         create_user_key('grade/export', $USER->id, $course->id, $data->iprestriction, $data->validuntil);
     }
@@ -106,15 +119,15 @@ if ($id) {
     $strheading = get_string('createuserkey', 'userkey');
 }
 
-
-$navlinks = array(array('name'=>$strgrades, 'link'=>$CFG->wwwroot.'/grade/index.php?id='.$courseid, 'type'=>'misc'),
-                  array('name'=>$strkeys, 'link'=>$CFG->wwwroot.'/grade/export/keymanager.php?id='.$courseid, 'type'=>'misc'),
-                  array('name'=>$strheading, 'link'=>'', 'type'=>'misc'));
-$navigation = build_navigation($navlinks);
+$PAGE->navbar->add($strgrades, new moodle_url('/grade/index.php', array('id'=>$courseid)));
+$PAGE->navbar->add($strkeys, new moodle_url('/grade/export/keymanager.php', array('id'=>$courseid)));
+$PAGE->navbar->add($strheading);
 
 /// Print header
-print_header_simple($strkeys, ': '.$strkeys, $navigation, '', '', true, '', navmenu($course));
+$PAGE->set_title($strkeys);
+$PAGE->set_heading($course->fullname);
+echo $OUTPUT->header();
 
 $editform->display();
-print_footer($course);
-?>
+echo $OUTPUT->footer();
+
