diff --git a/grade/edit/outcome/import_outcomes_form.php b/grade/edit/outcome/import_outcomes_form.php
index d447e01..f6077c8 100644
--- a/grade/edit/outcome/import_outcomes_form.php
+++ b/grade/edit/outcome/import_outcomes_form.php
@@ -15,39 +15,38 @@
 // You should have received a copy of the GNU General Public License
 // along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
 
+if (!defined('MOODLE_INTERNAL')) {
+    die('Direct access to this script is forbidden.');    ///  It must be included from a Moodle page
+}
 
 require_once($CFG->dirroot.'/lib/formslib.php');
 
 class import_outcomes_form extends moodleform {
 
-    function definition() {
-        global $COURSE, $USER;
+    public function definition() {
+        global $PAGE, $USER;
 
         $mform =& $this->_form;
-        //$this->set_upload_manager(new upload_manager('importfile', false, false, null, false, 0, true, true, false));
 
         $mform->addElement('hidden', 'action', 'upload');
         $mform->setType('action', PARAM_ACTION);
-        $mform->addElement('hidden', 'id', $COURSE->id);
+        $mform->addElement('hidden', 'courseid', $PAGE->course->id);
         $mform->setType('id', PARAM_INT);
 
         $scope = array();
-        if (($COURSE->id > 1) && has_capability('moodle/grade:manage', get_context_instance(CONTEXT_SYSTEM))) {
+        if (($PAGE->course->id > 1) && has_capability('moodle/grade:manage', get_context_instance(CONTEXT_SYSTEM))) {
             $mform->addElement('radio', 'scope', get_string('importcustom', 'grades'), null, 'custom');
             $mform->addElement('radio', 'scope', get_string('importstandard', 'grades'), null, 'global');
             $mform->setDefault('scope', 'custom');
         }
 
-        $mform->addElement('file', 'userfile', get_string('importoutcomes', 'grades'));
-        $mform->setHelpButton('userfile', array('importoutcomes', get_string('importoutcomes', 'grades'), 'grade'));
+        $mform->addElement('filepicker', 'userfile', get_string('importoutcomes', 'grades'));
+        $mform->addRule('userfile', get_string('required'), 'required', null, 'server');
+        $mform->addHelpButton('userfile', 'importoutcomes', 'grades');
 
         $mform->addElement('submit', 'save', get_string('uploadthisfile'));
 
     }
-
-    function get_um() {
-        return $this->_upload_manager;
-    }
 }
 
-?>
+
