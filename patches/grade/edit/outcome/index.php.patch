diff --git a/grade/edit/outcome/index.php b/grade/edit/outcome/index.php
index 88bcebf..45915b2 100644
--- a/grade/edit/outcome/index.php
+++ b/grade/edit/outcome/index.php
@@ -15,19 +15,27 @@
 // You should have received a copy of the GNU General Public License
 // along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
 
-require_once '../../../config.php';
-require_once($CFG->dirroot.'/lib/formslib.php');
-require_once $CFG->dirroot.'/grade/lib.php';
-require_once $CFG->libdir.'/gradelib.php';
+/**
+ * Listing page for grade outcomes.
+ *
+ * @package   moodlecore
+ * @copyright 2008 Nicolas Connault
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+require_once(dirname(__FILE__).'/../../../config.php');
+require_once($CFG->dirroot.'/grade/lib.php');
+require_once($CFG->libdir.'/gradelib.php');
 
 $courseid = optional_param('id', 0, PARAM_INT);
 $action   = optional_param('action', '', PARAM_ALPHA);
 
+$PAGE->set_url('/grade/edit/outcome/index.php', array('id' => $courseid));
+$PAGE->set_pagelayout('admin');
+
 /// Make sure they can even access this course
 if ($courseid) {
-    if (!$course = get_record('course', 'id', $courseid)) {
-        print_error('nocourseid');
-    }
+    $course = $DB->get_record('course', array('id' => $courseid), '*', MUST_EXIST);
     require_login($course);
     $context = get_context_instance(CONTEXT_COURSE, $course->id);
     require_capability('moodle/grade:manageoutcomes', $context);
@@ -35,7 +43,8 @@ if ($courseid) {
     if (empty($CFG->enableoutcomes)) {
         redirect('../../index.php?id='.$courseid);
     }
-
+    // This page doesn't exist on the navigation so map it to another
+    navigation_node::override_active_url(new moodle_url('/grade/edit/outcome/course.php', array('id'=>$courseid)));
 } else {
     if (empty($CFG->enableoutcomes)) {
         redirect('../../../');
@@ -47,27 +56,11 @@ if ($courseid) {
 /// return tracking object
 $gpr = new grade_plugin_return(array('type'=>'edit', 'plugin'=>'outcome', 'courseid'=>$courseid));
 
-require_once('import_outcomes_form.php');
-$upload_form = new import_outcomes_form();
-
-if ($upload_form_data = $upload_form->get_data()) {
-    require_once('import.php');
-    exit();
-}
-
-
-$strgrades = get_string('grades');
-$pagename  = get_string('outcomes', 'grades');
-
-$navigation = grade_build_nav(__FILE__, $pagename, $courseid);
-
-$strshortname        = get_string('shortname');
-$strfullname         = get_string('fullname');
+$strshortname        = get_string('outcomeshortname', 'grades');
+$strfullname         = get_string('outcomefullname', 'grades');
 $strscale            = get_string('scale');
 $strstandardoutcome  = get_string('outcomesstandard', 'grades');
 $strcustomoutcomes   = get_string('outcomescustom', 'grades');
-$strdelete           = get_string('delete');
-$stredit             = get_string('edit');
 $strcreatenewoutcome = get_string('outcomecreate', 'grades');
 $stritems            = get_string('items', 'grades');
 $strcourses          = get_string('courses');
@@ -86,7 +79,7 @@ switch ($action) {
         if (empty($outcome->courseid)) {
             require_capability('moodle/grade:manage', get_context_instance(CONTEXT_SYSTEM));
         } else if ($outcome->courseid != $courseid) {
-            error('Incorrect courseid!');
+            print_error('invalidcourseid');
         }
 
         if (!$outcome->can_delete()) {
@@ -96,15 +89,16 @@ switch ($action) {
         $deleteconfirmed = optional_param('deleteconfirmed', 0, PARAM_BOOL);
 
         if(!$deleteconfirmed){
-            print_header(get_string('outcomedelete', 'grades'));
-            notice_yesno(get_string('outcomeconfirmdelete', 'grades', $outcome->fullname),
-                    "index.php?id={$courseid}", "index.php?id={$courseid}",
-                    array('outcomeid' => $outcome->id,
+            $PAGE->set_title(get_string('outcomedelete', 'grades'));
+            echo $OUTPUT->header();
+            $confirmurl = new moodle_url('index.php', array(
+                    'id' => $courseid, 'outcomeid' => $outcome->id,
                         'action'=> 'delete',
-                        'sesskey' =>  $USER->sesskey,
-                        'deleteconfirmed'=> 1)
-                    );
-            print_footer();
+                    'sesskey' =>  sesskey(),
+                    'deleteconfirmed'=> 1));
+
+            echo $OUTPUT->confirm(get_string('outcomeconfirmdelete', 'grades', $outcome->fullname), $confirmurl, "index.php?id={$courseid}");
+            echo $OUTPUT->footer();
             die;
         }else{
             $outcome->delete();
@@ -120,7 +114,7 @@ if ($courseid) {
     $caneditcoursescales = has_capability('moodle/course:managescales', $context);
 
 } else {
-    admin_externalpage_print_header();
+    echo $OUTPUT->header();
     $caneditcoursescales = $caneditsystemscales;
 }
 
@@ -129,7 +123,7 @@ $outcomes_tables = array();
 $heading = get_string('outcomes', 'grades');
 
 if ($courseid and $outcomes = grade_outcome::fetch_all_local($courseid)) {
-    $return = print_heading($strcustomoutcomes, '', 3, 'main', true);
+    $return = $OUTPUT->heading($strcustomoutcomes, 3, 'main');
     $data = array();
     foreach($outcomes as $outcome) {
         $line = array();
@@ -149,9 +143,7 @@ if ($courseid and $outcomes = grade_outcome::fetch_all_local($courseid)) {
                 $caneditthisscale = has_capability('moodle/course:managescales', $context);
             }
             if ($caneditthisscale) {
-                $url = $CFG->wwwroot.'/grade/edit/scale/edit.php?courseid='.$courseid.'&amp;id='.$scale->id;
-                $url = $gpr->add_url_params($url);
-                $line[] = '<a href="'.$url.'">'.$scale->get_name().'</a>';
+                $line[] = grade_print_scale_link($courseid, $scale, $gpr);
             } else {
                 $line[] = $scale->get_name();
             }
@@ -159,31 +151,28 @@ if ($courseid and $outcomes = grade_outcome::fetch_all_local($courseid)) {
 
         $line[] = $outcome->get_item_uses_count();
 
-        $buttons = "";
-        $buttons .= "<a title=\"$stredit\" href=\"edit.php?courseid=$courseid&amp;id=$outcome->id\"><img".
-                    " src=\"$CFG->pixpath/t/edit.gif\" class=\"iconsmall\" alt=\"$stredit\" /></a> ";
+        $buttons = grade_button('edit', $courseid, $outcome);
+
         if ($outcome->can_delete()) {
-            $buttons .= "<a title=\"$strdelete\" href=\"index.php?id=$courseid&amp;outcomeid=$outcome->id&amp;action=delete&amp;sesskey=$USER->sesskey\"><img".
-                        " src=\"$CFG->pixpath/t/delete.gif\" class=\"iconsmall\" alt=\"$strdelete\" /></a> ";
+            $buttons .= grade_button('delete', $courseid, $outcome);
         }
         $line[] = $buttons;
 
         $data[] = $line;
     }
-    $table = new object();
+    $table = new html_table();
     $table->head  = array($strfullname, $strshortname, $strscale, $stritems, $stredit);
     $table->size  = array('30%', '20%', '20%', '20%', '10%' );
     $table->align = array('left', 'left', 'left', 'center', 'center');
     $table->width = '90%';
     $table->data  = $data;
-    $return .= print_table($table, true);
+    $return .= html_writer::table($table);
     $outcomes_tables[] = $return;
 }
 
 
 if ($outcomes = grade_outcome::fetch_all_global()) {
-
-    $return = print_heading($strstandardoutcome, '', 2, 'main', true);
+    $return = $OUTPUT->heading($strstandardoutcome, 3, 'main');
     $data = array();
     foreach($outcomes as $outcome) {
         $line = array();
@@ -203,9 +192,7 @@ if ($outcomes = grade_outcome::fetch_all_global()) {
                 $caneditthisscale = has_capability('moodle/course:managescales', $context);
             }
             if ($caneditthisscale) {
-                $url = $CFG->wwwroot.'/grade/edit/scale/edit.php?courseid='.$courseid.'&amp;id='.$scale->id;
-                $url = $gpr->add_url_params($url);
-                $line[] = '<a href="'.$url.'">'.$scale->get_name().'</a>';
+                $line[] = grade_print_scale_link($courseid, $scale, $gpr);
             } else {
                 $line[] = $scale->get_name();
             }
@@ -216,24 +203,22 @@ if ($outcomes = grade_outcome::fetch_all_global()) {
 
         $buttons = "";
         if (has_capability('moodle/grade:manage', get_context_instance(CONTEXT_SYSTEM))) {
-            $buttons .= "<a title=\"$stredit\" href=\"edit.php?courseid=$courseid&amp;id=$outcome->id\"><img".
-                        " src=\"$CFG->pixpath/t/edit.gif\" class=\"iconsmall\" alt=\"$stredit\" /></a> ";
+            $buttons .= grade_button('edit', $courseid, $outcome);
         }
         if (has_capability('moodle/grade:manage', get_context_instance(CONTEXT_SYSTEM)) and $outcome->can_delete()) {
-            $buttons .= "<a title=\"$strdelete\" href=\"index.php?id=$courseid&amp;outcomeid=$outcome->id&amp;action=delete&amp;sesskey=$USER->sesskey\"><img".
-                        " src=\"$CFG->pixpath/t/delete.gif\" class=\"iconsmall\" alt=\"$strdelete\" /></a> ";
+            $buttons .= grade_button('delete', $courseid, $outcome);
         }
         $line[] = $buttons;
 
         $data[] = $line;
     }
-    $table = new object();
+    $table = new html_table();
     $table->head  = array($strfullname, $strshortname, $strscale, $strcourses, $stritems, $stredit);
     $table->size  = array('30%', '20%', '20%', '10%', '10%', '10%');
     $table->align = array('left', 'left', 'left', 'center', 'center', 'center');
     $table->width = '90%';
     $table->data  = $data;
-    $return .= print_table($table, true);
+    $return .= html_writer::table($table);
     $outcomes_tables[] = $return;
 }
 
@@ -243,22 +228,28 @@ if ($courseid) {
 }
 
 foreach($outcomes_tables as $table) {
-    print($table);
+    echo $table;
 }
 
-echo '<div class="buttons">';
-print_single_button('edit.php', array('courseid'=>$courseid), $strcreatenewoutcome);
+echo $OUTPUT->container_start('buttons');
+echo $OUTPUT->single_button(new moodle_url('edit.php', array('courseid'=>$courseid)), $strcreatenewoutcome);
 if ( !empty($outcomes_tables) ) {
-    print_single_button('export.php', array('id'=>$courseid, 'sesskey'=>sesskey()),  get_string('exportalloutcomes', 'grades'));
+    echo $OUTPUT->single_button(new moodle_url('export.php', array('id'=>$courseid, 'sesskey'=>sesskey())),  get_string('exportalloutcomes', 'grades'));
 }
-echo '</div>';
-
-$upload_form->display();
-
-if ($courseid) {
-    print_footer($course);
-} else {
-    admin_externalpage_print_footer();
+echo $OUTPUT->container_end();
+
+echo $OUTPUT->footer();
+
+/**
+ * Local shortcut function for creating a link to a scale.
+ * @param int $courseid The Course ID
+ * @param grade_scale $scale The Scale to link to
+ * @param grade_plugin_return $gpr An object used to identify the page we just came from
+ * @return string html
+ */
+function grade_print_scale_link($courseid, $scale, $gpr) {
+    global $CFG, $OUTPUT;
+    $url = new moodle_url('/grade/edit/scale/edit.php', array('courseid' => $courseid, 'id' => $scale->id));
+    $url = $gpr->add_url_params($url);
+    return html_writer::link($url, $scale->get_name());
 }
-
-?>
