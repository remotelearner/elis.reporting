diff --git a/grade/edit/tree/grade_form.php b/grade/edit/tree/grade_form.php
old mode 100755
new mode 100644
index 9c38701..440146a
--- a/grade/edit/tree/grade_form.php
+++ b/grade/edit/tree/grade_form.php
@@ -24,7 +24,7 @@ require_once $CFG->libdir.'/formslib.php';
 class edit_grade_form extends moodleform {
 
     function definition() {
-        global $CFG, $COURSE;
+        global $CFG, $COURSE, $DB;
 
         $mform =& $this->_form;
 
@@ -45,13 +45,13 @@ class edit_grade_form extends moodleform {
         $mform->addElement('static', 'itemname', get_string('itemname', 'grades'));
 
         $mform->addElement('checkbox', 'overridden', get_string('overridden', 'grades'));
-        $mform->setHelpButton('overridden', array('overridden', get_string('overridden', 'grades'), 'grade'));
+        $mform->addHelpButton('overridden', 'overridden', 'grades');
 
         /// actual grade - numeric or scale
         if ($grade_item->gradetype == GRADE_TYPE_VALUE) {
             // numeric grade
             $mform->addElement('text', 'finalgrade', get_string('finalgrade', 'grades'));
-            $mform->setHelpButton('finalgrade', array('finalgrade', get_string('finalgrade', 'grades'), 'grade'));
+            $mform->addHelpButton('finalgrade', 'finalgrade', 'grades');
             $mform->disabledIf('finalgrade', 'overridden', 'notchecked');
 
         } else if ($grade_item->gradetype == GRADE_TYPE_SCALE) {
@@ -65,15 +65,15 @@ class edit_grade_form extends moodleform {
             }
 
             $i = 1;
-            if ($scale = get_record('scale', 'id', $grade_item->scaleid)) {
-                foreach (split(",", $scale->scale) as $option) {
+            if ($scale = $DB->get_record('scale', array('id' => $grade_item->scaleid))) {
+                foreach (explode(",", $scale->scale) as $option) {
                     $scaleopt[$i] = $option;
                     $i++;
                 }
             }
 
             $mform->addElement('select', 'finalgrade', get_string('finalgrade', 'grades'), $scaleopt);
-            $mform->setHelpButton('finalgrade', array('finalgrade', get_string('finalgrade', 'grades'), 'grade'));
+            $mform->addHelpButton('finalgrade', 'finalgrade', 'finalgrade');
             $mform->disabledIf('finalgrade', 'overridden', 'notchecked');
         }
 
@@ -82,31 +82,26 @@ class edit_grade_form extends moodleform {
         } else {
             $mform->addElement('advcheckbox', 'excluded', get_string('excluded', 'grades'));
         }
-        $mform->setHelpButton('excluded', array('excluded', get_string('excluded', 'grades'), 'grade'));
+        $mform->addHelpButton('excluded', 'excluded', 'grades');
 
         /// hiding
         /// advcheckbox is not compatible with disabledIf !!
         $mform->addElement('checkbox', 'hidden', get_string('hidden', 'grades'));
-        $mform->setHelpButton('hidden', array('hidden', get_string('hidden', 'grades'), 'grade'));
+        $mform->addHelpButton('hidden', 'hidden', 'grades');
         $mform->addElement('date_time_selector', 'hiddenuntil', get_string('hiddenuntil', 'grades'), array('optional'=>true));
-        $mform->setHelpButton('hiddenuntil', array('hiddenuntil', get_string('hiddenuntil', 'grades'), 'grade'));
         $mform->disabledIf('hidden', 'hiddenuntil[off]', 'notchecked');
 
         /// locking
         $mform->addElement('advcheckbox', 'locked', get_string('locked', 'grades'));
-        $mform->setHelpButton('locked', array('locked', get_string('locked', 'grades'), 'grade'));
+        $mform->addHelpButton('locked', 'locked', 'grades');
         $mform->addElement('date_time_selector', 'locktime', get_string('locktime', 'grades'), array('optional'=>true));
-        $mform->setHelpButton('locktime', array('lockedafter', get_string('locktime', 'grades'), 'grade'));
         $mform->disabledIf('locktime', 'gradetype', 'eq', GRADE_TYPE_NONE);
 
         // Feedback format is automatically converted to html if user has enabled editor
-        $mform->addElement('htmleditor', 'feedback', get_string('feedback', 'grades'),
-            array('rows'=>'15', 'course'=>$COURSE->id, 'cols'=>'45'));
-        $mform->setHelpButton('feedback', array('feedback', get_string('feedback', 'grades'), 'grade'));
+        $feedbackoptions = array('maxfiles'=>0, 'maxbytes'=>0); //TODO: no files here for now, if ever gets implemented use component 'grade' and filearea 'feedback'
+        $mform->addElement('editor', 'feedback', get_string('feedback', 'grades'), null, $feedbackoptions);
+        $mform->addHelpButton('feedback', 'feedback', 'grades');
         $mform->setType('text', PARAM_RAW); // to be cleaned before display, no XSS risk
-        $mform->addElement('format', 'feedbackformat', get_string('format'));
-        $mform->setHelpButton('feedbackformat', array('textformat', get_string('helpformatting')));
-        //TODO: unfortunately we can not disable html editor for external grades when overridden off :-(
 
         // hidden params
         $mform->addElement('hidden', 'oldgrade');
@@ -135,7 +130,7 @@ class edit_grade_form extends moodleform {
     }
 
     function definition_after_data() {
-        global $CFG, $COURSE;
+        global $CFG, $COURSE, $DB;
 
         $context = get_context_instance(CONTEXT_COURSE, $COURSE->id);
 
@@ -144,7 +139,7 @@ class edit_grade_form extends moodleform {
 
         // fill in user name if user still exists
         $userid = $mform->getElementValue('userid');
-        if ($user = get_record('user', 'id', $userid)) {
+        if ($user = $DB->get_record('user', array('id' => $userid))) {
             $username = '<a href="'.$CFG->wwwroot.'/user/view.php?id='.$userid.'">'.fullname($user).'</a>';
             $user_el =& $mform->getElement('user');
             $user_el->setValue($username);
@@ -210,4 +205,4 @@ class edit_grade_form extends moodleform {
     }
 }
 
-?>
+
