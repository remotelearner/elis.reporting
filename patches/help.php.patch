diff --git a/help.php b/help.php
index 6d1f942..2659812 100644
--- a/help.php
+++ b/help.php
@@ -1,243 +1,86 @@
 <?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
 /**
- * help.php - Displays help page.
+ * Displays help via AJAX call or in a new page
  *
- * Prints a very simple page and includes
- * page content or a string from elsewhere.
- * Usually this will appear in a popup
- * See {@link helpbutton()} in {@link lib/moodlelib.php}
+ * Use {@link core_renderer::help_icon()} or {@link addHelpButton()} to display
+ * the help icon.
  *
- * @author Martin Dougiamas
- * @version $Id$
- * @package moodlecore
+ * @copyright 2002 onwards Martin Dougiamas
+ * @package   core
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  */
-require_once('config.php');
-
-// Get URL parameters.
-$file   = optional_param('file', '', PARAM_PATH);
-$text   = optional_param('text', 'No text to display', PARAM_CLEAN);
-$module = optional_param('module', 'moodle', PARAM_ALPHAEXT);
-$forcelang = optional_param('forcelang', '', PARAM_SAFEDIR);
-$skiplocal = optional_param('skiplocal', 0, PARAM_INT);     // shall _local help files be skipped?
-
-// Start the output.
-print_header(get_string('help'));
-print_simple_box_start();
-
-// We look for the help to display in lots of different places, and
-// only display an error at the end if we can't find the help file
-// anywhere. This variable tracks that.
-$helpfound = false;
-
-if (!empty($file)) {
-    // The help to display is from a help file.
-
-    // Get the list of parent languages.
-    if (empty($forcelang)) {
-        $langs = array(current_language(), get_string('parentlanguage'), 'en_utf8');  // Fallback
-    } else {
-        $langs = array($forcelang, 'en_utf8');
-    }
-    
-    if (!$skiplocal) {
-        // _local language packs take precedence with both forced language and non-forced language settings
-        $xlangs = array();
-        foreach ($langs as $lang) {
-            if (!empty($lang)) {
-                $xlangs[] = $lang . '_local';
-                $xlangs[] = $lang;
-            }
-        }
-        $langs = $xlangs;
-        unset($xlangs);
-    }
-
-// Define possible locations for help file similar to locations for language strings
-// Note: Always retain module directory as before
-    $locations = array();
-    if ($module == 'moodle') {
-        $locations[$CFG->dataroot.'/lang/'] = $file;
-        $locations[$CFG->dirroot.'/lang/'] = $file;
-    } else {
-        $modfile = $module.'/'.$file;
-        $locations[$CFG->dataroot.'/lang/'] = $modfile;
-        $locations[$CFG->dirroot.'/lang/'] = $modfile;
-
-        $rules = places_to_search_for_lang_strings();
-        $exceptions = $rules['__exceptions'];
-        unset($rules['__exceptions']);
-        
-        if (!in_array($module, $exceptions)) {
-            $dividerpos = strpos($module, '_');
-            if ($dividerpos === false) {
-                $type = '';
-                $plugin = $module;
-            } else {
-                $type = substr($module, 0, $dividerpos + 1);
-                $plugin = substr($module, $dividerpos + 1);
-            }
-            if (!empty($rules[$type])) {
-                foreach ($rules[$type] as $location) {
-                    $locations[$CFG->dirroot . "/$location/$plugin/lang/"] = "$plugin/$file";
-                }
-            }
-        }
-    }
-
-    // Work through the possible languages, starting with the most specific.
-    while (!$helpfound && (list(,$lang) = each($langs)) && !empty($lang)) {
-
-        while (!$helpfound && (list($locationprefix,$locationsuffix) = each($locations))) {
-            $filepath = $locationprefix.$lang.'/help/'.$locationsuffix;
-
-            // Now, try to include the help text from this file, if we can.
-            if (file_exists_and_readable($filepath)) {
-                $helpfound = true;
-                @include($filepath);   // The actual helpfile
-
-                // Now, we process some special cases.
-                $helpdir = $locationprefix.$lang.'/help';
-                if ($module == 'moodle' and ($file == 'index.html' or $file == 'mods.html')) {
-                    include_help_for_each_module($file, $langs, $helpdir);
-                }
-
-                // The remaining horrible hardcoded special cases should be delegated to modules somehow.
-                if ($module == 'moodle' and ($file == 'resource/types.html')) {  // RESOURCES
-                    include_help_for_each_resource($file, $langs, $helpdir);
-                }
-                if ($module == 'moodle' and ($file == 'assignment/types.html')) {  // ASSIGNMENTS
-                    include_help_for_each_assignment_type();
-                }
-            }
-        }
-        reset($locations);
-    }
-} else {
-    // The help to display was given as an argument to this function.
-    echo '<p>'.s($text).'</p>';   // This param was already cleaned
-    $helpfound = true;
-}
-
-print_simple_box_end();
-
-// Display an error if necessary.
-if (!$helpfound) {
-    notify('Help file "'. $file .'" could not be found!');
-}
 
-// End of page.
-close_window_button();
-echo '<p class="helpindex"><a href="help.php?file=index.html">'. get_string('helpindex') .'</a>';
+define('NO_MOODLE_COOKIES', true);
 
-// Offer a link to the alternative help file language
-if (($helpfound) and (((current_language() != 'en_utf8') and $lang != 'en_utf8') or ($forcelang === 'en_utf8'))) {
-    $linklang = "{$CFG->wwwroot}/help.php?";
-    $linklang .= !empty($module)    ? "module=$module&amp;" : '';
-    $linklang .= !empty($file)      ? "file=$file&amp;" : '';
-    $linklang .= !empty($skiplocal) ? "skiplocal=$skiplocal&amp;" : '';
+require_once(dirname(__FILE__) . '/config.php');
 
-    if (empty($forcelang) or $forcelang === current_language()) {
-        $nextlang = 'en_utf8';
-        $nextlangname = 'English';
-    } else {
-        $nextlang = current_language();
-        $nextlangname = get_string('thislanguage');
-    }
+$identifier = required_param('identifier', PARAM_STRINGID);
+$component  = required_param('component', PARAM_SAFEDIR);
+$lang       = required_param('lang', PARAM_LANG); // TODO: maybe split into separate scripts
+$ajax       = optional_param('ajax', 0, PARAM_BOOL);
 
-    $linklang .= "forcelang=$nextlang";
-    echo "<br /><a href=\"$linklang\">" . get_string('showthishelpinlanguage', 'moodle', $nextlangname) . '</a>';
+if (!$lang) {
+    $lang = 'en';
 }
-echo '</p>';
+$SESSION->lang = $lang; // does not actually modify session because we do not use cookies here
 
-$CFG->docroot = '';   // We don't want a doc link here
-print_footer('none');
+$sm = get_string_manager();
 
-// Utility function =================================================================
+$PAGE->set_url('/help.php');
+$PAGE->set_pagelayout('popup');
+$PAGE->set_context(get_context_instance(CONTEXT_SYSTEM));
 
-function file_exists_and_readable($filepath) {
-    return file_exists($filepath) and is_file($filepath) and is_readable($filepath);
+if ($ajax) {
+    @header('Content-Type: text/plain; charset=utf-8');
+} else {
+    echo $OUTPUT->header();
 }
 
-// Some functions for handling special cases ========================================
-
-function include_help_for_each_module($file, $langs, $helpdir) {
-    global $CFG;
-
-    if (!$modules = get_records('modules', 'visible', 1)) {
-        error('No modules found!!');        // Should never happen
-    }
-
-    foreach ($modules as $mod) {
-        $strmodulename = get_string('modulename', $mod->name);
-        $modulebyname[$strmodulename] = $mod;
-    }
-    ksort($modulebyname, SORT_LOCALE_STRING);
-
-    foreach ($modulebyname as $mod) {
-        foreach ($langs as $lang) {
-            if (empty($lang)) {
-                continue;
-            }
-
-            $filepath = "$helpdir/$mod->name/$file";
-
-            // If that does not exist, try a fallback into the module code folder.
-            if (!file_exists($filepath)) {
-                $filepath = "$CFG->dirroot/mod/$mod->name/lang/$lang/help/$mod->name/$file";
-            }
-
-            if (file_exists_and_readable($filepath)) {
-                echo '<hr />';
-                @include($filepath); // The actual helpfile
-                break; // Out of loop over languages.
-            }
-        }
-    }
+if (!$sm->string_exists($identifier.'_help', $component)) {
+    // strings on-diskc cache may be dirty - try to rebuild it and check again
+    $sm->load_component_strings($component, current_language(), true);
 }
 
-function include_help_for_each_resource($file, $langs, $helpdir) {
-    global $CFG;
-
-    require_once($CFG->dirroot .'/mod/resource/lib.php');
-    $typelist = resource_get_types();
+if ($sm->string_exists($identifier.'_help', $component)) {
+    $options = new stdClass();
+    $options->trusted = false;
+    $options->noclean = false;
+    $options->smiley = false;
+    $options->filter = false;
+    $options->para = true;
+    $options->newlines = false;
+    $options->overflowdiv = !$ajax;
     
-    //add label type
-    $labelType = new object();
-    $labelType->modclass = MOD_CLASS_RESOURCE;
-    $resourcetype = 'label';
-    $labelType->name = $resourcetype;
-    $labelType->type = "resource&amp;type=$resourcetype";
-    $labelType->typestr = get_string("resourcetype$resourcetype", 'resource');
-    $typelist[] = $labelType;
+    echo $OUTPUT->heading(format_string(get_string($identifier, $component)), 1, 'helpheading');
+    // Should be simple wiki only MDL-21695
+    echo format_text(get_string($identifier.'_help', $component), FORMAT_MARKDOWN, $options);
 
-    foreach ($typelist as $type) {
-   
-        foreach ($langs as $lang) {
-            if (empty($lang)) {
-                continue;
+    if ($sm->string_exists($identifier.'_link', $component)) {  // Link to further info in Moodle docs
+        $link = get_string($identifier.'_link', $component);
+        $linktext = get_string('morehelp');
+        echo '<div class="helpdoclink">'.$OUTPUT->doc_link($link, $linktext).'</div>';
             }
 
-            $filepath = "$helpdir/resource/type/".$type->name.".html";
-
-            if (file_exists_and_readable($filepath)) {
-                echo '<hr />';
-                @include($filepath); // The actual helpfile
-                break; // Out of loop over languages.
-            }
-        }
-    }
+} else {
+    echo "<p><strong>TODO</strong>: missing help string [{$identifier}_help, $component]</p>";
 }
 
-function include_help_for_each_assignment_type() {
-    global $CFG;
-
-    require_once($CFG->dirroot .'/mod/assignment/lib.php');
-    $typelist = assignment_types();
-
-    foreach ($typelist as $type => $name) {
-        echo '<p><b>'.$name.'</b></p>';
-        echo get_string('help'.$type, 'assignment');
-        echo '<hr size="1" />';
-    }
+if (!$ajax) {
+    echo $OUTPUT->footer();
 }
-?>
