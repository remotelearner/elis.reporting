diff --git a/course/recent.php b/course/recent.php
index 143ff26..134cce0 100644
--- a/course/recent.php
+++ b/course/recent.php
@@ -1,125 +1,139 @@
-<?php // $Id$
-
-//  Display all recent activity in a flexible way
-
-    require_once('../config.php');
-    require_once('lib.php');
-    require_once('recent_form.php');
-
-    $id = required_param('id', PARAM_INT);
-
-    if (!$course = get_record('course', 'id', $id) ) {
-        error("That's an invalid course id");
-    }
-
-    require_login($course);
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Display all recent activity in a flexible way
+ *
+ * @copyright 1999 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package course
+ */
+
+require_once('../config.php');
+require_once('lib.php');
+require_once('recent_form.php');
+
+$id = required_param('id', PARAM_INT);
+
+$PAGE->set_url('/course/recent.php', array('id'=>$id));
+
+if (!$course = $DB->get_record('course', array('id'=>$id))) {
+    print_error("That's an invalid course id");
+}
 
-    add_to_log($course->id, "course", "recent", "recent.php?id=$course->id", $course->id);
+require_login($course);
 
-    $context = get_context_instance(CONTEXT_COURSE, $course->id);
+add_to_log($course->id, "course", "recent", "recent.php?id=$course->id", $course->id);
 
-    $meta = '<meta name="robots" content="none" />'; // prevent duplicate content in search engines MDL-7299
+$context = get_context_instance(CONTEXT_COURSE, $course->id);
 
-    $lastlogin = time() - COURSE_MAX_RECENT_PERIOD;
-    if (!isguestuser() and !empty($USER->lastcourseaccess[$COURSE->id])) {
+$lastlogin = time() - COURSE_MAX_RECENT_PERIOD;
+if (!isguestuser() and !empty($USER->lastcourseaccess[$COURSE->id])) {
         if ($USER->lastcourseaccess[$COURSE->id] > $lastlogin) {
             $lastlogin = $USER->lastcourseaccess[$COURSE->id];
         }
-    }
+}
 
-    $param = new object();
-    $param->user   = 0;
-    $param->modid  = 'all';
-    $param->group  = 0;
-    $param->sortby = 'default';
-    $param->date   = $lastlogin;
-    $param->id     = $COURSE->id;
-
-    $mform = new recent_form();
-    $mform->set_data($param);
-    if ($formdata = $mform->get_data(false)) {
+$param = new stdClass();
+$param->user   = 0;
+$param->modid  = 'all';
+$param->group  = 0;
+$param->sortby = 'default';
+$param->date   = $lastlogin;
+$param->id     = $COURSE->id;
+
+$mform = new recent_form();
+$mform->set_data($param);
+if ($formdata = $mform->get_data()) {
         $param = $formdata;
-    }
+}
 
-    $userinfo = get_string('allparticipants');
-    $dateinfo = get_string('alldays');
+$userinfo = get_string('allparticipants');
+$dateinfo = get_string('alldays');
 
-    if (!empty($param->user)) {
-        if (!$u = get_record('user', 'id', $param->user) ) {
-            error("That's an invalid user!");
+if (!empty($param->user)) {
+    if (!$u = $DB->get_record('user', array('id'=>$param->user))) {
+        print_error("That's an invalid user!");
         }
         $userinfo = fullname($u);
-    }
+}
 
-    $strrecentactivity = get_string('recentactivity');
-    $navlinks = array();
-    $navlinks[] = array('name' => $strrecentactivity, 'link' => "recent.php?id=$course->id", 'type' => 'misc');
-    $navlinks[] = array('name' => $userinfo, 'link' => null, 'type' => 'misc');
-    $navigation = build_navigation($navlinks);
-    print_header("$course->shortname: $strrecentactivity", $course->fullname, $navigation, '', $meta);
-    print_heading(format_string($course->fullname) . ": $userinfo", '', 3);
+$strrecentactivity = get_string('recentactivity');
+$PAGE->navbar->add($strrecentactivity, new moodle_url('/course/recent.php', array('id'=>$course->id)));
+$PAGE->navbar->add($userinfo);
+$PAGE->set_title("$course->shortname: $strrecentactivity");
+$PAGE->set_heading($course->fullname);
+echo $OUTPUT->header();
+echo $OUTPUT->heading(format_string($course->fullname) . ": $userinfo", 3);
 
-    $mform->display();
+$mform->display();
 
-    $modinfo =& get_fast_modinfo($course);
-    get_all_mods($course->id, $mods, $modnames, $modnamesplural, $modnamesused);
+$modinfo =& get_fast_modinfo($course);
+get_all_mods($course->id, $mods, $modnames, $modnamesplural, $modnamesused);
 
-    if (has_capability('moodle/course:viewhiddensections', $context)) {
+if (has_capability('moodle/course:viewhiddensections', $context)) {
         $hiddenfilter = "";
-    } else {
+} else {
         $hiddenfilter = "AND cs.visible = 1";
-    }
-    $sections = array();
-    if ($ss = get_records_sql("SELECT cs.id, cs.section, cs.sequence, cs.summary, cs.visible
-                                 FROM {$CFG->prefix}course_sections cs
-                                WHERE cs.course = $course->id AND cs.section <= $course->numsections
-                                      $hiddenfilter
-                             ORDER BY section")) {
-        foreach ($ss as $section) {
+}
+$sections = array();
+$rawsections = array_slice(get_all_sections($course->id), 0, $course->numsections+1, true);
+$canviewhidden = has_capability('moodle/course:viewhiddensections', $context);
+foreach ($rawsections as $section) {
+    if ($canviewhidden || !empty($section->visible)) {
             $sections[$section->section] = $section;
         }
-    }
+}
 
-    if ($param->modid === 'all') {
+if ($param->modid === 'all') {
         // ok
 
-    } else if (strpos($param->modid, 'mod/') === 0) {
+} else if (strpos($param->modid, 'mod/') === 0) {
         $modname = substr($param->modid, strlen('mod/'));
         if (array_key_exists($modname, $modnames) and file_exists("$CFG->dirroot/mod/$modname/lib.php")) {
             $filter = $modname;
         }
 
-    } else if (strpos($param->modid, 'section/') === 0) {
+} else if (strpos($param->modid, 'section/') === 0) {
         $sectionid = substr($param->modid, strlen('section/'));
         if (isset($sections[$sectionid])) {
             $sections = array($sectionid=>$sections[$sectionid]);
         }
 
-    } else if (is_numeric($param->modid)) {
+} else if (is_numeric($param->modid)) {
         $section = $sections[$modinfo->cms[$param->modid]->sectionnum];
         $section->sequence = $param->modid;
         $sections = array($section->sequence=>$section);
-    }
+}
 
-    switch ($course->format) {
-        case 'weeks':  $sectiontitle = get_string('week'); break;
-        case 'topics': $sectiontitle = get_string('topic'); break;
-        default: $sectiontitle = get_string('section'); break;
-    }
 
-    if (is_null($modinfo->groups)) {
+if (is_null($modinfo->groups)) {
         $modinfo->groups = groups_get_user_groups($course->id); // load all my groups and cache it in modinfo
-    }
+}
 
-    $activities = array();
-    $index = 0;
+$activities = array();
+$index = 0;
 
-    foreach ($sections as $section) {
+foreach ($sections as $section) {
 
-        $activity = new object();
+    $activity = new stdClass();
         $activity->type = 'section';
         if ($section->section > 0) {
-            $activity->name = $sectiontitle.' '.$section->section;
+        $activity->name = get_section_name($course, $section);
         } else {
             $activity->name = '';
         }
@@ -155,7 +169,7 @@
                 $get_recent_mod_activity = $cm->modname."_get_recent_mod_activity";
 
                 if (function_exists($get_recent_mod_activity)) {
-                    $activity = new object();
+                $activity = new stdClass();
                     $activity->type    = 'activity';
                     $activity->cmid    = $cmid;
                     $activities[$index++] = $activity;
@@ -163,19 +177,19 @@
                 }
             }
         }
-    }
+}
 
-    $detail = true;
+$detail = true;
 
-    switch ($param->sortby) {
+switch ($param->sortby) {
         case 'datedesc' : usort($activities, 'compare_activities_by_time_desc'); break;
         case 'dateasc'  : usort($activities, 'compare_activities_by_time_asc'); break;
         case 'default'  :
         default         : $detail = false; $param->sortby = 'default';
 
-    }
+}
 
-    if (!empty($activities)) {
+if (!empty($activities)) {
 
         $newsection   = true;
         $lastsection  = '';
@@ -203,10 +217,10 @@
 
             if (($activity->type == 'section') && ($param->sortby == 'default')) {
                 if ($inbox) {
-                    print_simple_box_end();
-                    print_spacer(30);
+                echo $OUTPUT->box_end();
+                echo $OUTPUT->spacer(array('height'=>30, 'br'=>true)); // should be done with CSS instead
                 }
-                print_simple_box_start('center', '90%');
+            echo $OUTPUT->box_start();
                 echo "<h2>$activity->name</h2>";
                 $inbox = true;
 
@@ -223,7 +237,7 @@
                     $name        = format_string($cm->name);
                     $modfullname = $modnames[$cm->modname];
 
-                    $image = "<img src=\"$CFG->modpixpath/$cm->modname/icon.gif\" class=\"icon\" alt=\"$modfullname\" />";
+                $image = "<img src=\"" . $OUTPUT->pix_url('icon', $cm->modname) . "\" class=\"icon\" alt=\"$modfullname\" />";
                     echo "<h4>$image $modfullname".
                          " <a href=\"$CFG->wwwroot/mod/$cm->modname/view.php?id=$cm->id\" $linkformat>$name</a></h4>";
                }
@@ -236,7 +250,7 @@
                 }
 
                 if (!$inbox) {
-                    print_simple_box_start('center', '90%');
+                echo $OUTPUT->box_start();
                     $inbox = true;
                 }
 
@@ -249,17 +263,17 @@
         }
 
         if ($inbox) {
-            print_simple_box_end();
+        echo $OUTPUT->box_end();
         }
 
 
-    } else {
+} else {
 
         echo '<h4><center>' . get_string('norecentactivity') . '</center></h2>';
 
-    }
+}
 
-    print_footer($course);
+echo $OUTPUT->footer();
 
 function compare_activities_by_time_desc($a, $b) {
     // make sure the activities actually have a timestamp property
@@ -280,4 +294,4 @@ function compare_activities_by_time_asc($a, $b) {
         return 0;
     return ($a->timestamp < $b->timestamp) ? -1 : 1;
 }
-?>
+
