diff --git a/course/report/log/lib.php b/course/report/log/lib.php
index 2494584..d7d4277 100644
--- a/course/report/log/lib.php
+++ b/course/report/log/lib.php
@@ -1,20 +1,43 @@
-<?php  // $Id$
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file contains functions used by the log reports
+ *
+ * @package course
+ * @copyright  1999 onwards  Martin Dougiamas  http://moodle.com
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
 function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $selecteddate='today',
                                  $modname="", $modid=0, $modaction='', $selectedgroup=-1, $showcourses=0, $showusers=0, $logformat='showashtml') {
 
-    global $USER, $CFG, $SITE;
+    global $USER, $CFG, $SITE, $DB, $OUTPUT, $SESSION;
     require_once $CFG->dirroot.'/mnet/peer.php';
     
     $mnet_peer = new mnet_peer();
     $mnet_peer->set_id($hostid);
 
-    $sql = "select distinct course, hostid, coursename from {$CFG->prefix}mnet_log";
-    $courses = get_records_sql($sql);
+    $sql = "SELECT DISTINCT course, hostid, coursename FROM {mnet_log}";
+    $courses = $DB->get_records_sql($sql);
     $remotecoursecount = count($courses);
 
     // first check to see if we can override showcourses and showusers
-    $numcourses = $remotecoursecount + count_records_select("course", "", "COUNT(id)");
+    $numcourses = $remotecoursecount + $DB->count_records('course');
     if ($numcourses < COURSE_MAX_COURSES_PER_DROPDOWN && !$showcourses) {
         $showcourses = 1;
     }
@@ -28,18 +51,29 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
 
         /// Setup for group handling.
         if ($course->groupmode == SEPARATEGROUPS and !has_capability('moodle/site:accessallgroups', $context)) {
-            $selectedgroup = get_current_group($course->id);
+            $selectedgroup = -1;
             $showgroups = false;
-        }
-        else if ($course->groupmode) {
-            $selectedgroup = ($selectedgroup == -1) ? get_current_group($course->id) : $selectedgroup;
+        } else if ($course->groupmode) {
             $showgroups = true;
-        }
-        else {
+        } else {
             $selectedgroup = 0;
             $showgroups = false;
         }
 
+        if ($selectedgroup === -1) {
+            if (isset($SESSION->currentgroup[$course->id])) {
+                $selectedgroup =  $SESSION->currentgroup[$course->id];
+            } else {
+                $selectedgroup = groups_get_all_groups($course->id, $USER->id);
+                if (is_array($selectedgroup)) {
+                    $selectedgroup = array_shift(array_keys($selectedgroup));
+                    $SESSION->currentgroup[$course->id] = $selectedgroup;
+                } else {
+                    $selectedgroup = 0;
+                }
+            }
+        }
+
     } else {
         $context = $sitecontext;
     }
@@ -54,13 +88,10 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
 
     // If looking at a different host, we're interested in all our site users
     if ($hostid == $CFG->mnet_localhost_id && $course->id != SITEID) {
-        if ($selectedgroup) {   // If using a group, only get users in that group.
-            $courseusers = get_group_users($selectedgroup, 'u.lastname ASC', '', 'u.id, u.firstname, u.lastname, u.idnumber', $limitfrom, $limitnum);
-        } else {
-            $courseusers = get_course_users($course->id, '', '', 'u.id, u.firstname, u.lastname, u.idnumber', $limitfrom, $limitnum);
-        }
+        $courseusers = get_enrolled_users($context, '', $selectedgroup, 'u.id, u.firstname, u.lastname, u.idnumber', 'lastname ASC, firstname ASC', $limitfrom, $limitnum);
     } else {
-        $courseusers = get_site_users("u.lastaccess DESC", "u.id, u.firstname, u.lastname, u.idnumber", '', $limitfrom, $limitnum);
+        // this may be a lot of users :-(
+        $courseusers = $DB->get_records('user', array('deleted'=>0), 'lastaccess DESC', 'id, firstname, lastname, idnumber', $limitfrom, $limitnum);
     }
 
     if (count($courseusers) < COURSE_MAX_USERS_PER_DROPDOWN && !$showusers) {
@@ -73,9 +104,7 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
                 $users[$courseuser->id] = fullname($courseuser, has_capability('moodle/site:viewfullnames', $context));
             }
         }
-        if ($guest = get_guest()) {
-            $users[$guest->id] = fullname($guest);
-        }
+        $users[$CFG->siteguest] = get_string('guestuser');
     }
 
     // Get all the hosts that have log records
@@ -83,14 +112,14 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
                 h.id,
                 h.name
             from
-                {$CFG->prefix}mnet_host h,
-                {$CFG->prefix}mnet_log l
+                {mnet_host} h,
+                {mnet_log} l
             where
                 h.id = l.hostid
             order by
                 h.name";
 
-    if ($hosts = get_records_sql($sql)) {
+    if ($hosts = $DB->get_records_sql($sql)) {
         foreach($hosts as $host) {
             $hostarray[$host->id] = $host->name;
         }
@@ -99,12 +128,14 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
     $hostarray[$CFG->mnet_localhost_id] = $SITE->fullname;
     asort($hostarray);
 
+    $dropdown = array();
+
     foreach($hostarray as $hostid => $name) {
         $courses = array();
         $sites = array();
         if ($CFG->mnet_localhost_id == $hostid) {
             if (has_capability('coursereport/log:view', $sitecontext) && $showcourses) {
-                if ($ccc = get_records("course", "", "", "fullname","id,fullname,category")) {
+                if ($ccc = $DB->get_records("course", null, "fullname","id,fullname,category")) {
                     foreach ($ccc as $cc) {
                         if ($cc->id == SITEID) {
                             $sites["$hostid/$cc->id"]   = format_string($cc->fullname).' ('.get_string('site').')';
@@ -116,8 +147,8 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
             }
         } else {
             if (has_capability('coursereport/log:view', $sitecontext) && $showcourses) {
-                $sql = "select distinct course, coursename from {$CFG->prefix}mnet_log where hostid = '$hostid'";
-                if ($ccc = get_records_sql($sql)) {
+                $sql = "SELECT DISTINCT course, coursename FROM {mnet_log} where hostid = ?";
+                if ($ccc = $DB->get_records_sql($sql, array($hostid))) {
                     foreach ($ccc as $cc) {
                         if (1 == $cc->course) { // TODO: this might be wrong - site course may have another id
                             $sites["$hostid/$cc->course"]   = $cc->coursename.' ('.get_string('site').')';
@@ -130,7 +161,7 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
         }
 
         asort($courses);
-        $dropdown[$name] = $sites + $courses;
+        $dropdown[] = array($name=>($sites + $courses));
     }
 
 
@@ -140,20 +171,16 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
 /// Casting $course->modinfo to string prevents one notice when the field is null
     if ($modinfo = unserialize((string)$course->modinfo)) {
         $section = 0;
-        if ($course->format == 'weeks') {  // Bodgy
-            $strsection = get_string("week");
-        } else {
-            $strsection = get_string("topic");
-        }
+        $sections = get_all_sections($course->id);
         foreach ($modinfo as $mod) {
             if ($mod->mod == "label") {
                 continue;
             }
             if ($mod->section > 0 and $section <> $mod->section) {
-                $activities["section/$mod->section"] = "-------------- $strsection $mod->section --------------";
+                $activities["section/$mod->section"] = '--- '.get_section_name($course, $sections[$mod->section]).' ---';
             }
             $section = $mod->section;
-            $mod->name = strip_tags(format_string(urldecode($mod->name),true));
+            $mod->name = strip_tags(format_string($mod->name, true));
             if (strlen($mod->name) > 55) {
                 $mod->name = substr($mod->name, 0, 50)."...";
             }
@@ -224,13 +251,13 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
     echo "<input type=\"hidden\" name=\"showcourses\" value=\"$showcourses\" />\n";
     if (has_capability('coursereport/log:view', $sitecontext) && $showcourses) {
         $cid = empty($course->id)? '1' : $course->id; 
-        choose_from_menu_nested($dropdown, "host_course", $hostid.'/'.$cid, "");
+        echo html_writer::select($dropdown, "host_course", $hostid.'/'.$cid);
     } else {
         $courses = array();
         $courses[$course->id] = $course->fullname . ((empty($course->category)) ? ' ('.get_string('site').') ' : '');
-        choose_from_menu($courses,"id",$course->id,false);
+        echo html_writer::select($courses,"id",$course->id, false);
         if (has_capability('coursereport/log:view', $sitecontext)) {
-            $a = new object();
+            $a = new stdClass();
             $a->url = "$CFG->wwwroot/course/report/log/index.php?chooselog=0&group=$selectedgroup&user=$selecteduser"
                 ."&id=$course->id&date=$selecteddate&modid=$selectedactivity&showcourses=1&showusers=$showusers";
             print_string('logtoomanycourses','moodle',$a);
@@ -246,35 +273,36 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
         else {
             $groups = array();
         }
-        choose_from_menu ($groups, "group", $selectedgroup, get_string("allgroups") );
+        echo html_writer::select($groups, "group", $selectedgroup, get_string("allgroups"));
     }
 
     if ($showusers) {
-        choose_from_menu ($users, "user", $selecteduser, get_string("allparticipants") );
+        echo html_writer::select($users, "user", $selecteduser, get_string("allparticipants"));
     }
     else {
         $users = array();
         if (!empty($selecteduser)) {
-            $user = get_record('user','id',$selecteduser);
+            $user = $DB->get_record('user', array('id'=>$selecteduser));
             $users[$selecteduser] = fullname($user);
         }
         else {
             $users[0] = get_string('allparticipants');
         }
-        choose_from_menu($users, 'user', $selecteduser, false);
+        echo html_writer::select($users, "user", $selecteduser, false);
         $a->url = "$CFG->wwwroot/course/report/log/index.php?chooselog=0&group=$selectedgroup&user=$selecteduser"
             ."&id=$course->id&date=$selecteddate&modid=$selectedactivity&showusers=1&showcourses=$showcourses";
         print_string('logtoomanyusers','moodle',$a);
     }
-    choose_from_menu ($dates, "date", $selecteddate, get_string("alldays"));
-    choose_from_menu ($activities, "modid", $selectedactivity, get_string("allactivities"), "", "");
-    choose_from_menu ($actions, 'modaction', $modaction, get_string("allactions"));
+
+    echo html_writer::select($dates, "date", $selecteddate, get_string("alldays"));
+    echo html_writer::select($activities, "modid", $selectedactivity, get_string("allactivities"));
+    echo html_writer::select($actions, 'modaction', $modaction, get_string("allactions"));
     
     $logformats = array('showashtml' => get_string('displayonpage'),
                         'downloadascsv' => get_string('downloadtext'),
                         'downloadasods' => get_string('downloadods'),
                         'downloadasexcel' => get_string('downloadexcel'));
-    choose_from_menu ($logformats, 'logformat', $logformat, false);
+    echo html_writer::select($logformats, 'logformat', $logformat, false);
     echo '<input type="submit" value="'.get_string('gettheselogs').'" />';
     echo '</div>';
     echo '</form>';
@@ -283,10 +311,10 @@ function print_mnet_log_selector_form($hostid, $course, $selecteduser=0, $select
 function print_log_selector_form($course, $selecteduser=0, $selecteddate='today',
                                  $modname="", $modid=0, $modaction='', $selectedgroup=-1, $showcourses=0, $showusers=0, $logformat='showashtml') {
 
-    global $USER, $CFG;
+    global $USER, $CFG, $DB, $OUTPUT, $SESSION;
 
     // first check to see if we can override showcourses and showusers
-    $numcourses =  count_records_select("course", "", "COUNT(id)");
+    $numcourses =  $DB->count_records("course");
     if ($numcourses < COURSE_MAX_COURSES_PER_DROPDOWN && !$showcourses) {
         $showcourses = 1;
     }
@@ -296,30 +324,38 @@ function print_log_selector_form($course, $selecteduser=0, $selecteddate='today'
    
     /// Setup for group handling.
     if ($course->groupmode == SEPARATEGROUPS and !has_capability('moodle/site:accessallgroups', $context)) {
-        $selectedgroup = get_current_group($course->id);
+        $selectedgroup = -1;
         $showgroups = false;
-    }
-    else if ($course->groupmode) {
-        $selectedgroup = ($selectedgroup == -1) ? get_current_group($course->id) : $selectedgroup;
+    } else if ($course->groupmode) {
         $showgroups = true;
-    }
-    else {
+    } else {
         $selectedgroup = 0;
         $showgroups = false;
     }
 
-    // Get all the possible users
-    $users = array();
-
-    if ($course->id != SITEID) {
-        if ($selectedgroup) {   // If using a group, only get users in that group.
-            $courseusers = get_group_users($selectedgroup, 'u.lastname ASC', '', 'u.id, u.firstname, u.lastname, u.idnumber');
+    if ($selectedgroup === -1) {
+        if (isset($SESSION->currentgroup[$course->id])) {
+            $selectedgroup =  $SESSION->currentgroup[$course->id];
         } else {
-            $courseusers = get_course_users($course->id, '', '', 'u.id, u.firstname, u.lastname, u.idnumber');
-        }
+            $selectedgroup = groups_get_all_groups($course->id, $USER->id);
+            if (is_array($selectedgroup)) {
+                $selectedgroup = array_shift(array_keys($selectedgroup));
+                $SESSION->currentgroup[$course->id] = $selectedgroup;
     } else {
-        $courseusers = get_site_users("u.lastaccess DESC", "u.id, u.firstname, u.lastname, u.idnumber");
+                $selectedgroup = 0;
     }
+        }
+    }
+
+    // Get all the possible users
+    $users = array();
+
+    // Define limitfrom and limitnum for queries below
+    // If $showusers is enabled... don't apply limitfrom and limitnum
+    $limitfrom = empty($showusers) ? 0 : '';
+    $limitnum  = empty($showusers) ? COURSE_MAX_USERS_PER_DROPDOWN + 1 : '';
+
+    $courseusers = get_enrolled_users($context, '', $selectedgroup, 'u.id, u.firstname, u.lastname', 'lastname ASC, firstname ASC', $limitfrom, $limitnum);
     
     if (count($courseusers) < COURSE_MAX_USERS_PER_DROPDOWN && !$showusers) {
         $showusers = 1;
@@ -331,13 +367,11 @@ function print_log_selector_form($course, $selecteduser=0, $selecteddate='today'
                 $users[$courseuser->id] = fullname($courseuser, has_capability('moodle/site:viewfullnames', $context));
             }
         }
-        if ($guest = get_guest()) {
-            $users[$guest->id] = fullname($guest);
-        }
+        $users[$CFG->siteguest] = get_string('guestuser');
     }
 
     if (has_capability('coursereport/log:view', $sitecontext) && $showcourses) {
-        if ($ccc = get_records("course", "", "", "fullname","id,fullname,category")) {
+        if ($ccc = $DB->get_records("course", null, "fullname", "id,fullname,category")) {
             foreach ($ccc as $cc) {
                 if ($cc->category) {
                     $courses["$cc->id"] = format_string($cc->fullname);
@@ -355,20 +389,16 @@ function print_log_selector_form($course, $selecteduser=0, $selecteddate='today'
 /// Casting $course->modinfo to string prevents one notice when the field is null
     if ($modinfo = unserialize((string)$course->modinfo)) {
         $section = 0;
-        if ($course->format == 'weeks') {  // Bodgy
-            $strsection = get_string("week");
-        } else {
-            $strsection = get_string("topic");
-        }
+        $sections = get_all_sections($course->id);
         foreach ($modinfo as $mod) {
             if ($mod->mod == "label") {
                 continue;
             }
             if ($mod->section > 0 and $section <> $mod->section) {
-                $activities["section/$mod->section"] = "-------------- $strsection $mod->section --------------";
+                $activities["section/$mod->section"] = '--- '.get_section_name($course, $sections[$mod->section]).' ---';
             }
             $section = $mod->section;
-            $mod->name = strip_tags(format_string(urldecode($mod->name),true));
+            $mod->name = strip_tags(format_string($mod->name, true));
             if (strlen($mod->name) > 55) {
                 $mod->name = substr($mod->name, 0, 50)."...";
             }
@@ -438,14 +468,14 @@ function print_log_selector_form($course, $selecteduser=0, $selecteddate='today'
     echo "<input type=\"hidden\" name=\"showusers\" value=\"$showusers\" />\n";
     echo "<input type=\"hidden\" name=\"showcourses\" value=\"$showcourses\" />\n";
     if (has_capability('coursereport/log:view', $sitecontext) && $showcourses) {
-        choose_from_menu ($courses, "id", $course->id, "");
+        echo html_writer::select($courses, "id", $course->id, false);
     } else {
         //        echo '<input type="hidden" name="id" value="'.$course->id.'" />';
         $courses = array();
         $courses[$course->id] = $course->fullname . (($course->id == SITEID) ? ' ('.get_string('site').') ' : '');
-        choose_from_menu($courses,"id",$course->id,false);
+        echo html_writer::select($courses,"id",$course->id, false);
         if (has_capability('coursereport/log:view', $sitecontext)) {
-            $a = new object();
+            $a = new stdClass();
             $a->url = "$CFG->wwwroot/course/report/log/index.php?chooselog=0&group=$selectedgroup&user=$selecteduser"
                 ."&id=$course->id&date=$selecteddate&modid=$selectedactivity&showcourses=1&showusers=$showusers";
             print_string('logtoomanycourses','moodle',$a);
@@ -461,39 +491,70 @@ function print_log_selector_form($course, $selecteduser=0, $selecteddate='today'
         else {
             $groups = array();
         }
-        choose_from_menu ($groups, "group", $selectedgroup, get_string("allgroups") );
+        echo html_writer::select($groups, "group", $selectedgroup, get_string("allgroups"));
     }
 
     if ($showusers) {
-        choose_from_menu ($users, "user", $selecteduser, get_string("allparticipants") );
+        echo html_writer::select($users, "user", $selecteduser, get_string("allparticipants"));
     }
     else {
         $users = array();
         if (!empty($selecteduser)) {
-            $user = get_record('user','id',$selecteduser);
+            $user = $DB->get_record('user', array('id'=>$selecteduser));
             $users[$selecteduser] = fullname($user);
         }
         else {
             $users[0] = get_string('allparticipants');
         }
-        choose_from_menu($users, 'user', $selecteduser, false);
-        $a = new object();
+        echo html_writer::select($users, "user", $selecteduser, false);
+        $a = new stdClass();
         $a->url = "$CFG->wwwroot/course/report/log/index.php?chooselog=0&group=$selectedgroup&user=$selecteduser"
             ."&id=$course->id&date=$selecteddate&modid=$selectedactivity&showusers=1&showcourses=$showcourses";
         print_string('logtoomanyusers','moodle',$a);
     }
-    choose_from_menu ($dates, "date", $selecteddate, get_string("alldays"));
-    choose_from_menu ($activities, "modid", $selectedactivity, get_string("allactivities"), "", "");
-    choose_from_menu ($actions, 'modaction', $modaction, get_string("allactions"));
+    echo html_writer::select($dates, "date", $selecteddate, get_string("alldays"));
+
+    echo html_writer::select($activities, "modid", $selectedactivity, get_string("allactivities"));
+    echo html_writer::select($actions, 'modaction', $modaction, get_string("allactions"));
     
     $logformats = array('showashtml' => get_string('displayonpage'),
                         'downloadascsv' => get_string('downloadtext'),
                         'downloadasods' => get_string('downloadods'),
                         'downloadasexcel' => get_string('downloadexcel'));
-    choose_from_menu ($logformats, 'logformat', $logformat, false);
+
+    echo html_writer::select($logformats, 'logformat', $logformat, false);
     echo '<input type="submit" value="'.get_string('gettheselogs').'" />';
     echo '</div>';
     echo '</form>';
 }
 
-?>
+/**
+ * This function extends the navigation with the report items
+ *
+ * @param navigation_node $navigation The navigation node to extend
+ * @param stdClass $course The course to object for the report
+ * @param stdClass $context The context of the course
+ */
+function log_report_extend_navigation($navigation, $course, $context) {
+    global $CFG, $OUTPUT;
+    if (has_capability('coursereport/log:view', $context)) {
+        $url = new moodle_url('/course/report/log/index.php', array('id'=>$course->id));
+        $navigation->add(get_string('pluginname', 'coursereport_log'), $url, navigation_node::TYPE_SETTING, null, null, new pix_icon('i/report', ''));
+    }
+}
+
+/**
+ * Return a list of page types
+ * @param string $pagetype current page type
+ * @param stdClass $parentcontext Block's parent context
+ * @param stdClass $currentcontext Current context of block
+ */
+function log_page_type_list($pagetype, $parentcontext, $currentcontext) {
+    $array = array(
+        '*' => get_string('page-x', 'pagetype'),
+        'course-report-*' => get_string('page-course-report-x', 'pagetype'),
+        'course-report-log-index' => get_string('pluginpagetype',  'coursereport_log')
+        //course-report-log-live not included as theres no blocks on the live log page
+    );
+    return $array;
+}
