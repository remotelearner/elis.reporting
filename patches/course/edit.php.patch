diff --git a/course/edit.php b/course/edit.php
index a5cab29..053d8bb 100644
--- a/course/edit.php
+++ b/course/edit.php
@@ -1,168 +1,185 @@
-<?php // $Id$
-      // Edit course settings
-
-    require_once('../config.php');
-    require_once($CFG->dirroot.'/enrol/enrol.class.php');
-    require_once($CFG->libdir.'/blocklib.php');
-    require_once('lib.php');
-    require_once('edit_form.php');
-
-    $id         = optional_param('id', 0, PARAM_INT);       // course id
-    $categoryid = optional_param('category', 0, PARAM_INT); // course category - can be changed in edit form
-
-
-/// basic access control checks
-    if ($id) { // editing course
-
-        if($id == SITEID){
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Edit course settings
+ *
+ * @package    moodlecore
+ * @copyright  1999 onwards Martin Dougiamas (http://dougiamas.com)
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+require_once('../config.php');
+require_once('lib.php');
+require_once('edit_form.php');
+
+$id         = optional_param('id', 0, PARAM_INT);       // course id
+$categoryid = optional_param('category', 0, PARAM_INT); // course category - can be changed in edit form
+$returnto = optional_param('returnto', 0, PARAM_ALPHANUM); // generic navigation return page switch
+
+$PAGE->set_pagelayout('admin');
+$PAGE->set_url('/course/edit.php');
+
+// basic access control checks
+if ($id) { // editing course
+    if ($id == SITEID){
             // don't allow editing of  'site course' using this from
-            error('You cannot edit the site course using this form');
+        print_error('cannoteditsiteform');
         }
 
-        if (!$course = get_record('course', 'id', $id)) {
-            error('Course ID was incorrect');
-        }
-        require_login($course->id);
-        $category = get_record('course_categories', 'id', $course->category);
-        require_capability('moodle/course:update', get_context_instance(CONTEXT_COURSE, $course->id));
+    $course = $DB->get_record('course', array('id'=>$id), '*', MUST_EXIST);
+    require_login($course);
+    $category = $DB->get_record('course_categories', array('id'=>$course->category), '*', MUST_EXIST);
+    $coursecontext = get_context_instance(CONTEXT_COURSE, $course->id);
+    require_capability('moodle/course:update', $coursecontext);
+    $PAGE->url->param('id',$id);
 
-    } else if ($categoryid) { // creating new course in this category
+} else if ($categoryid) { // creating new course in this category
         $course = null;
         require_login();
-        if (!$category = get_record('course_categories', 'id', $categoryid)) {
-            error('Category ID was incorrect');
-        }
-        require_capability('moodle/course:create', get_context_instance(CONTEXT_COURSECAT, $category->id));
-    } else {
+    $category = $DB->get_record('course_categories', array('id'=>$categoryid), '*', MUST_EXIST);
+    $catcontext = get_context_instance(CONTEXT_COURSECAT, $category->id);
+    require_capability('moodle/course:create', $catcontext);
+    $PAGE->url->param('category',$categoryid);
+    $PAGE->set_context($catcontext);
+
+} else {
         require_login();
-        error('Either course id or category must be specified');
-    }
+    print_error('needcoursecategroyid');
+}
 
-/// prepare course
-    if (!empty($course)) {
+// Prepare course and the editor
+$editoroptions = array('maxfiles' => EDITOR_UNLIMITED_FILES, 'maxbytes'=>$CFG->maxbytes, 'trusttext'=>false, 'noclean'=>true);
+if (!empty($course)) {
         $allowedmods = array();
-        if (!empty($course)) {
-            if ($am = get_records('course_allowed_modules','course',$course->id)) {
+    if ($am = $DB->get_records('course_allowed_modules', array('course'=>$course->id))) {
                 foreach ($am as $m) {
                     $allowedmods[] = $m->module;
                 }
             } else {
-                if (empty($course->restrictmodules)) {
-                    $allowedmods = explode(',',$CFG->defaultallowedmodules);
-                } // it'll be greyed out but we want these by default anyway.
-            }
-            $course->allowedmods = $allowedmods;
-
-            if ($course->enrolstartdate){
-                $course->enrolstartdisabled = 0;
+        // this happens in case we edit course created before enabling module restrictions or somebody disabled everything :-(
+        if (empty($course->restrictmodules) and !empty($CFG->defaultallowedmodules)) {
+            $allowedmods = explode(',', $CFG->defaultallowedmodules);
             }
-
-            if ($course->enrolenddate) {
-                $course->enrolenddisabled = 0;
             }
+    $course->allowedmods = $allowedmods;
+    //add context for editor
+    $editoroptions['context'] = $coursecontext;
+    $course = file_prepare_standard_editor($course, 'summary', $editoroptions, $coursecontext, 'course', 'summary', 0);
+
+} else {
+    //editor should respect category context if course context is not set.
+    $editoroptions['context'] = $catcontext;
+    $course = file_prepare_standard_editor($course, 'summary', $editoroptions, null, 'course', 'summary', null);
+}
+
+// first create the form
+$editform = new course_edit_form(NULL, array('course'=>$course, 'category'=>$category, 'editoroptions'=>$editoroptions, 'returnto'=>$returnto));
+if ($editform->is_cancelled()) {
+        switch ($returnto) {
+            case 'category':
+                $url = new moodle_url($CFG->wwwroot.'/course/category.php', array('id'=>$categoryid));
+                break;
+            case 'topcat':
+                $url = new moodle_url($CFG->wwwroot.'/course/');
+                break;
+            default:
+                if (!empty($course->id)) {
+                    $url = new moodle_url($CFG->wwwroot.'/course/view.php', array('id'=>$course->id));
+                } else {
+                    $url = new moodle_url($CFG->wwwroot.'/course/');
         }
+                break;
     }
+        redirect($url);
 
+} else if ($data = $editform->get_data()) {
+    // process data if submitted
 
-/// first create the form
-    $editform = new course_edit_form('edit.php', compact('course', 'category'));
-    // now override defaults if course already exists
-    if (!empty($course)) {
-        $course->enrolpassword = $course->password; // we need some other name for password field MDL-9929
-        $editform->set_data($course);
-    }
-    if ($editform->is_cancelled()){
-        if (empty($course)) {
-            redirect($CFG->wwwroot);
-        } else {
-            redirect($CFG->wwwroot.'/course/view.php?id='.$course->id);
-        }
+    if (empty($course->id)) {
+        // In creating the course
+        $course = create_course($data, $editoroptions);
 
-    } else if ($data = $editform->get_data()) {
+        // Get the context of the newly created course
+        $context = get_context_instance(CONTEXT_COURSE, $course->id, MUST_EXIST);
 
-        $data->password = $data->enrolpassword;  // we need some other name for password field MDL-9929
-/// process data if submitted
+        if (!empty($CFG->creatornewroleid) and !is_viewing($context, NULL, 'moodle/role:assign') and !is_enrolled($context, NULL, 'moodle/role:assign')) {
+            // deal with course creators - enrol them internally with default role
+            enrol_try_internal_enrol($course->id, $USER->id, $CFG->creatornewroleid);
 
-        //preprocess data
-        if (!empty($data->enrolstartdisabled)) {
-            $data->enrolstartdate = 0;
         }
-
-        if (!empty($data->enrolenddisabled)) {
-            $data->enrolenddate = 0;
+        if (!is_enrolled($context)) {
+            // Redirect to manual enrolment page if possible
+            $instances = enrol_get_instances($course->id, true);
+            foreach($instances as $instance) {
+                if ($plugin = enrol_get_plugin($instance->enrol)) {
+                    if ($plugin->get_manual_enrol_link($instance)) {
+                        // we know that the ajax enrol UI will have an option to enrol
+                        redirect(new moodle_url('/enrol/users.php', array('id'=>$course->id)));
         }
-
-        $data->timemodified = time();
-
-        if (empty($course)) {
-            if (!$course = create_course($data)) {
-                print_error('coursenotcreated');
             }
-
-            $context = get_context_instance(CONTEXT_COURSE, $course->id);
-
-            // assign default role to creator if not already having permission to manage course assignments
-            if (!has_capability('moodle/course:view', $context) or !has_capability('moodle/role:assign', $context)) {
-                role_assign($CFG->creatornewroleid, $USER->id, 0, $context->id);
             }
-
-            // ensure we can use the course right after creating it
-            // this means trigger a reload of accessinfo...
-            mark_context_dirty($context->path);
-
-            if ($data->metacourse and has_capability('moodle/course:managemetacourse', $context)) {
-                // Redirect users with metacourse capability to student import
-                redirect($CFG->wwwroot."/course/importstudents.php?id=$course->id");
-            } else {
-                // Redirect to roles assignment
-                redirect($CFG->wwwroot."/$CFG->admin/roles/assign.php?contextid=$context->id");
             }
-
         } else {
-            if (!update_course($data)) {
-                print_error('coursenotupdated');
-            }
-            redirect($CFG->wwwroot."/course/view.php?id=$course->id");
+        // Save any changes to the files used in the editor
+        update_course($data, $editoroptions);
         }
+
+    switch ($returnto) {
+        case 'category':
+        case 'topcat': //redirecting to where the new course was created by default.
+            $url = new moodle_url($CFG->wwwroot.'/course/category.php', array('id'=>$categoryid));
+            break;
+        default:
+            $url = new moodle_url($CFG->wwwroot.'/course/view.php', array('id'=>$course->id));
+            break;
     }
+    redirect($url);
+}
 
 
-/// Print the form
+// Print the form
 
-    $site = get_site();
+$site = get_site();
 
-    $streditcoursesettings = get_string("editcoursesettings");
-    $straddnewcourse = get_string("addnewcourse");
-    $stradministration = get_string("administration");
-    $strcategories = get_string("categories");
-    $navlinks = array();
+$streditcoursesettings = get_string("editcoursesettings");
+$straddnewcourse = get_string("addnewcourse");
+$stradministration = get_string("administration");
+$strcategories = get_string("categories");
 
-    if (!empty($course)) {
-        $navlinks[] = array('name' => $streditcoursesettings,
-                            'link' => null,
-                            'type' => 'misc');
+if (!empty($course->id)) {
+    $PAGE->navbar->add($streditcoursesettings);
         $title = $streditcoursesettings;
         $fullname = $course->fullname;
-    } else {
-        $navlinks[] = array('name' => $stradministration,
-                            'link' => "$CFG->wwwroot/$CFG->admin/index.php",
-                            'type' => 'misc');
-        $navlinks[] = array('name' => $strcategories,
-                            'link' => 'index.php',
-                            'type' => 'misc');
-        $navlinks[] = array('name' => $straddnewcourse,
-                            'link' => null,
-                            'type' => 'misc');
+} else {
+    $PAGE->navbar->add($stradministration, new moodle_url('/admin/index.php'));
+    $PAGE->navbar->add($strcategories, new moodle_url('/course/index.php'));
+    $PAGE->navbar->add($straddnewcourse);
         $title = "$site->shortname: $straddnewcourse";
         $fullname = $site->fullname;
-    }
+}
+
+$PAGE->set_title($title);
+$PAGE->set_heading($fullname);
 
-    $navigation = build_navigation($navlinks);
-    print_header($title, $fullname, $navigation, $editform->focus());
-    print_heading($streditcoursesettings);
+echo $OUTPUT->header();
+echo $OUTPUT->heading($streditcoursesettings);
 
-    $editform->display();
+$editform->display();
 
-    print_footer($course);
+echo $OUTPUT->footer();
 
-?>
