diff --git a/course/reset_form.php b/course/reset_form.php
index ba0227e..ce8b0f7 100644
--- a/course/reset_form.php
+++ b/course/reset_form.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 if (!defined('MOODLE_INTERNAL')) {
     die('Direct access to this script is forbidden.');    ///  It must be included from a Moodle page
 }
@@ -7,23 +7,27 @@ require_once $CFG->libdir.'/formslib.php';
 
 class course_reset_form extends moodleform {
     function definition (){
-        global $CFG, $COURSE;
+        global $CFG, $COURSE, $DB;
 
         $mform =& $this->_form;
 
         $mform->addElement('header', 'generalheader', get_string('general'));
 
         $mform->addElement('date_selector', 'reset_start_date', get_string('startdate'), array('optional'=>true));
-        $mform->setHelpButton('reset_start_date', array('coursestartdate', get_string('startdate')));
+        $mform->addHelpButton('reset_start_date', 'startdate');
         $mform->addElement('checkbox', 'reset_events', get_string('deleteevents', 'calendar'));
         $mform->addElement('checkbox', 'reset_logs', get_string('deletelogs'));
         $mform->addElement('checkbox', 'reset_notes', get_string('deletenotes', 'notes'));
+        $mform->addElement('checkbox', 'reset_comments', get_string('deleteallcomments', 'moodle'));
+        $mform->addElement('checkbox', 'reset_course_completion', get_string('deletecoursecompletiondata', 'completion'));
+        $mform->addElement('checkbox', 'delete_blog_associations', get_string('deleteblogassociations', 'blog'));
+        $mform->addHelpButton('delete_blog_associations', 'deleteblogassociations', 'blog');
 
 
         $mform->addElement('header', 'rolesheader', get_string('roles'));
 
         $roles = get_assignable_roles(get_context_instance(CONTEXT_COURSE, $COURSE->id));
-        $mform->addElement('select', 'reset_roles', get_string('unenrolroleusers'), $roles, array('multiple' => 'multiple'));
+        $mform->addElement('select', 'unenrol_users', get_string('unenrolroleusers', 'enrol'), $roles, array('multiple' => 'multiple'));
         $mform->addElement('checkbox', 'reset_roles_overrides', get_string('deletecourseoverrides', 'role'));
         $mform->setAdvanced('reset_roles_overrides');
         $mform->addElement('checkbox', 'reset_roles_local', get_string('deletelocalroles', 'role'));
@@ -44,19 +48,17 @@ class course_reset_form extends moodleform {
         $mform->setAdvanced('reset_groups_members');
         $mform->disabledIf('reset_groups_members', 'reset_groups_remove', 'checked');
 
-        if (!empty($CFG->enablegroupings)) {
             $mform->addElement('checkbox', 'reset_groupings_remove', get_string('deleteallgroupings', 'group'));
             $mform->setAdvanced('reset_groupings_remove');
             $mform->addElement('checkbox', 'reset_groupings_members', get_string('removegroupingsmembers', 'group'));
             $mform->setAdvanced('reset_groupings_members');
             $mform->disabledIf('reset_groupings_members', 'reset_groupings_remove', 'checked');
-        }
 
         $unsupported_mods = array();
-        if ($allmods = get_records('modules') ) {
+        if ($allmods = $DB->get_records('modules') ) {
             foreach ($allmods as $mod) {
                 $modname = $mod->name;
-                if (!count_records($modname, 'course', $COURSE->id)) {
+                if (!$DB->count_records($modname, array('course'=>$COURSE->id))) {
                     continue; // skip mods with no instances
                 }
                 $modfile = $CFG->dirroot."/mod/$modname/lib.php";
@@ -96,19 +98,13 @@ class course_reset_form extends moodleform {
     }
 
     function load_defaults() {
-        global $CFG, $COURSE;
+        global $CFG, $COURSE, $DB;
 
         $mform =& $this->_form;
 
         $defaults = array ('reset_events'=>1, 'reset_logs'=>1, 'reset_roles_local'=>1, 'reset_gradebook_grades'=>1, 'reset_notes'=>1);
 
-        if (!empty($COURSE->defaultrole)) {
-            $defaults['reset_roles'] = array($COURSE->defaultrole);
-        } else {
-            $defaults['reset_roles'] = array($CFG->defaultcourseroleid);
-        }
-
-        if ($allmods = get_records('modules') ) {
+        if ($allmods = $DB->get_records('modules') ) {
             foreach ($allmods as $mod) {
                 $modname = $mod->name;
                 $modfile = $CFG->dirroot."/mod/$modname/lib.php";
