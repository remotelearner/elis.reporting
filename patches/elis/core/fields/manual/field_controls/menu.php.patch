diff --git a/elis/core/fields/manual/field_controls/menu.php b/elis/core/fields/manual/field_controls/menu.php
index 319f474..a6fa148 100644
--- a/elis/core/fields/manual/field_controls/menu.php
+++ b/elis/core/fields/manual/field_controls/menu.php
@@ -10,8 +10,9 @@ require_once elis::plugin_file('elisfields_manual', 'custom_fields.php');
  * @param  moodleform or HTML_QuickForm  $form       The form to add the appropriate element to
  * @param  field                         $field      The definition of the field defining the controls
  * @param  boolean                       $as_filter  Whether to display a "choose" message
+ * @param  string                        $contextname Optional context name/entity
  */
-function menu_control_display($form, $mform, $customdata, $field, $as_filter=false) {
+function menu_control_display($form, $mform, $customdata, $field, $as_filter = false, $contextname= 'system') {
     if (!($form instanceof moodleform)) {
         $mform = $form;
         $form->_customdata = null;
@@ -26,19 +27,24 @@ function menu_control_display($form, $mform, $customdata, $field, $as_filter=fal
                 $options = array('' => get_string("choose"));
             }
             foreach($tmpoptions as $key => $option) {
-                $option = trim($option);
-                $options[$option] = format_string($option);//multilang formatting
+                $option = trim($option, "\n\r");
+                $option = format_string($option);
+                $options[$option] = $option;//multilang formatting
             }
         } else {
+            $options = array();
             $source = $manual->param_options_source;
-
+            $srcfile = elis::plugin_file('elisfields_manual', "sources/{$source}.php");
+            if (file_exists($srcfile)) {
             require_once elis::plugin_file('elisfields_manual', 'sources.php');
-            require_once elis::plugin_file('elisfields_manual', "sources/$source.php");
-            $classname = "manual_options_$source";
+                require_once($srcfile) ;
+                $classname = "manual_options_{$source}";
             $plugin = new $classname();
-
+                if ($plugin && $plugin->is_applicable($contextname)) {
             $options = $plugin->get_options($customdata);
         }
+            }
+        }
     } else {
         if ($as_filter) {
             $options = array('' => get_string("choose"),
