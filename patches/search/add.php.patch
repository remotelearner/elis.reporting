diff --git a/search/add.php b/search/add.php
index fcd82be..8543215 100644
--- a/search/add.php
+++ b/search/add.php
@@ -7,12 +7,15 @@
     * @subpackage search_engine
     * @author Michael Champanis (mchampan) [cynnical@gmail.com], Valery Fremaux [valery.fremaux@club-internet.fr] > 1.8
     * @date 2008/03/31
+    * @version prepared for 2.0
     * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
     *
     * Asynchronous adder for new indexable contents
     *
     * Major chages in this review is passing the xxxx_db_names return to
     * multiple arity to handle multiple document types modules
+    *
+    * changes are in implementing new $DB access
     */
     
     /**
@@ -24,28 +27,31 @@
         die('Direct access to this script is forbidden.');    ///  It must be included from the cron script
     }
 
+    global $DB;
+
 /// makes inclusions of the Zend Engine more reliable
     ini_set('include_path', $CFG->dirroot.DIRECTORY_SEPARATOR.'search'.PATH_SEPARATOR.ini_get('include_path'));
 
     require_once($CFG->dirroot.'/search/lib.php');
     require_once($CFG->dirroot.'/search/indexlib.php');    
 
+
 /// checks global search activation
     
     // require_login();
     
     if (empty($CFG->enableglobalsearch)) {
-        error(get_string('globalsearchdisabled', 'search'));
+        print_error('globalsearchdisabled', 'search');
     }
     
     /*
     Obsolete with the MOODLE INTERNAL check
-    if (!has_capability('moodle/site:doanything', get_context_instance(CONTEXT_SYSTEM))) {
-        error(get_string('beadmin', 'search'), "$CFG->wwwroot/login/index.php");
+    if (!has_capability('moodle/site:config', get_context_instance(CONTEXT_SYSTEM))) {
+        print_error('beadmin', 'search', get_login_url());
     }
     */ 
     
-/// check for php5 (lib.php)
+/// check index
 
     try {
         $index = new Zend_Search_Lucene(SEARCH_INDEX_PATH);
@@ -55,9 +61,7 @@
     }
     $dbcontrol = new IndexDBControl();
     $addition_count = 0;
-    $startindextime = time();
-    
-    $indexdate = $CFG->search_indexer_run_date;
+    $mainstartindextime = time();
     
     mtrace('Starting index update (additions)...');
     mtrace('Index size before: '.$CFG->search_index_size."\n");
@@ -68,6 +72,14 @@
 /// append virtual modules onto array
 
         foreach ($mods as $mod) {
+
+            $indexdate = 0;
+            $indexdatestring = 'search_indexer_run_date_'.$mod->name;
+            $startrundate = time();
+            if (isset($CFG->$indexdatestring)) {
+                $indexdate = $CFG->$indexdatestring;
+            }
+
             //build include file and function names
             $class_file = $CFG->dirroot.'/search/documents/'.$mod->name.'_document.php';
             $db_names_function = $mod->name.'_db_names';
@@ -84,7 +96,7 @@
                     $valuesArray = $db_names_function();
                     if ($valuesArray){
                         foreach($valuesArray as $values){
-                            $where = (!empty($values[5])) ? 'AND ('.$values[5].')' : '';
+                            $where = (isset($values[5]) and $values[5]!='') ? 'AND ('.$values[5].')' : '';
                             $itemtypes = ($values[4] != '*' && $values[4] != 'any') ? " AND itemtype = '{$values[4]}' " : '' ;
                             
                             //select records in MODULE table, but not in SEARCH_DATABASE_TABLE
@@ -94,25 +106,29 @@
                                     docid,
                                     itemtype 
                                 FROM 
-                                    {$CFG->prefix}{$table}
+                                    {{$table}}
                                 WHERE 
-                                    doctype = '{$values[1]}'
+                                    doctype = ?
                                     $itemtypes
                             ";
-                            $docIds = get_records_sql_menu($query, array($mod->name));
-                            $docIdList = ($docIds) ? implode("','", array_keys($docIds)) : '' ;
+                            $docIds = $DB->get_records_sql_menu($query, array($mod->name));
                             
+                            if (!empty($docIds)){
+                                list($usql, $params) = $DB->get_in_or_equal(array_keys($docIds), SQL_PARAMS_QM, 'param', false); // negative IN
                             $query =  "
                                 SELECT id, 
-                                    {$values[0]} as docid 
+                                        $values[0] as docid
                                 FROM 
-                                    {$CFG->prefix}{$values[1]} 
+                                        {{$values[1]}}
                                 WHERE 
-                                    id NOT IN ('{$docIdList}') AND 
-                                    {$values[2]} > {$indexdate}
+                                        id $usql AND
+                                        $values[2] > $indexdate
                                     $where
                             ";
-                            $records = get_records_sql($query);
+                                $records = $DB->get_records_sql($query, $params);
+                            } else {
+                                $records = array();
+                            }
                             
                             // foreach record, build a module specific search document using the get_document function
                             if (is_array($records)) {
@@ -128,21 +144,37 @@
                         // foreach document, add it to the index and database table
                         foreach ($additions as $add) {
                             ++$addition_count;
-                            
+                            // try the addDocument() so possible dml_write_exception don't block other modules running.
+                            // also we can list all the new documents that are failing.
+                            try {
                             // object to insert into db
                             $dbid = $dbcontrol->addDocument($add);
                             
                             // synchronise db with index
                             $add->addField(Zend_Search_Lucene_Field::Keyword('dbid', $dbid));
                             
+                                $index->addDocument($add);
+
                             mtrace("  Add: $add->title (database id = $add->dbid, moodle instance id = $add->docid)");
+                            }
+
+                            catch (dml_write_exception $e) {
+                                mtrace(" Add: FAILED adding '$add->title' ,  moodle instance id = $add->docid , Error: $e->error ");
+                                mtrace($e);
+                            }
                             
-                            $index->addDocument($add);
                         } 
                     }
                     else{
                         mtrace("No types to add.\n");
                     }
+
+                    //commit changes
+                    $index->commit();
+
+                    //update index date
+                    set_config($indexdatestring, $startrundate);
+
                     mtrace("Finished $mod->name.\n");
                 } 
             } 
@@ -155,8 +187,8 @@
     
 /// update index date and size
 
-    set_config("search_indexer_run_date", $startindextime);
-    set_config("search_index_size", (int)$CFG->search_index_size + (int)$addition_count);
+    set_config('search_indexer_run_date', $mainstartindextime);
+    set_config('search_index_size', (int)$CFG->search_index_size + (int)$addition_count);
     
 /// print some additional info
 
