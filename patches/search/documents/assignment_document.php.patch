diff --git a/search/documents/assignment_document.php b/search/documents/assignment_document.php
index 72ac36e..9b5c365 100644
--- a/search/documents/assignment_document.php
+++ b/search/documents/assignment_document.php
@@ -9,6 +9,7 @@
 * @contributor Tatsuva Shirai 20090530
 * @date 2008/03/31
 * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
+* @version Moodle 2.0
 *
 * document handling for assignment activity module
 *
@@ -17,8 +18,8 @@
 /**
 * includes and requires
 */
-require_once("$CFG->dirroot/search/documents/document.php");
-require_once("$CFG->dirroot/mod/assignment/lib.php");
+require_once($CFG->dirroot.'/search/documents/document.php');
+require_once($CFG->dirroot.'/mod/assignment/lib.php');
 
 /**
 * a class for representing searchable information
@@ -29,7 +30,7 @@ class AssignmentSearchDocument extends SearchDocument {
     /**
     * constructor
     */
-    public function __construct(&$assignmentitem, $assignment_module_id, $itemtype, $course_id, $owner_id, $context_id) {
+    public function __construct(&$assignmentitem, $assignment_module_id, $itemtype, $course_id, $owner_id, $context_id , $submissionoffset = null) {
         // generic information; required
         $doc->docid         = $assignmentitem['id'];
         $doc->documenttype  = SEARCH_TYPE_ASSIGNMENT;
@@ -42,8 +43,13 @@ class AssignmentSearchDocument extends SearchDocument {
         
         //remove '(ip.ip.ip.ip)' from chat author list
         $doc->author        = $assignmentitem['authors'];
-        $doc->contents      = $assignmentitem['description'];
+        if ($itemtype == 'intro') {
+            $doc->contents      = $assignmentitem['intro'];
         $doc->url           = assignment_make_link($assignment_module_id, $itemtype, $owner_id);
+        } else {
+            $doc->contents      = $assignmentitem['data1'];
+            $doc->url           = assignment_make_link($assignment_module_id, $itemtype, $owner_id, $submissionoffset);
+        }
         
         // module specific information; optional
         $data->assignment         = $assignment_module_id;
@@ -63,19 +69,26 @@ class AssignmentSearchDocument extends SearchDocument {
 * @uses CFG
 * @return a well formed link to session display
 */
-function assignment_make_link($cm_id, $itemtype, $owner) {
+function assignment_make_link($cm_id, $itemtype, $owner, $submissionoffset=null) {
     global $CFG;
 
-    if ($itemtype == 'description')
+    if ($itemtype == 'intro') {
         return $CFG->wwwroot.'/mod/assignment/view.php?id='.$cm_id;
+    } else {
+        return $CFG->wwwroot.'/mod/assignment/submissions.php?id='.$cm_id.'&userid='.$owner.'&mode=single&offset='.$submissionoffset;
+        //?id=80&userid=4&mode=single&filter=0&offset=1
+    }
 }
 
 /**
 * part of search engine API
+* @uses $DB
 *
 */
 function assignment_iterator() {
-    if ($assignments = get_records('assignment'))
+    global $DB;
+
+    if ($assignments = $DB->get_records('assignment'))
         return $assignments;
     else
         return array();
@@ -83,30 +96,28 @@ function assignment_iterator() {
 
 /**
 * part of search engine API
+* @uses $CFG, $DB
 *
 */
 function assignment_get_content_for_index(&$assignment) {
-    global $CFG;
+    global $CFG, $DB;
     
     $documents = array();
-    $course = get_record('course', 'id', $assignment->course);
-    $coursemodule = get_field('modules', 'id', 'name', 'assignment');
-    $cm = get_record('course_modules', 'course', $assignment->course, 'module', $coursemodule, 'instance', $assignment->id);
+    $course = $DB->get_record('course', array('id' => $assignment->course));
+    $coursemodule = $DB->get_field('modules', 'id', array('name' => 'assignment'));
+    $cm = $DB->get_record('course_modules', array('course' => $assignment->course, 'module' => $coursemodule, 'instance' => $assignment->id));
     if ($cm){
         $context = get_context_instance(CONTEXT_MODULE, $cm->id);
 
-        $assignment->authors = '';
-        $assignment->date = $assignment->timemodified;
-        $documents[] = new AssignmentSearchDocument(get_object_vars($assignment), $cm->id, 'description', $assignment->course, null, $context->id);
+        $assignment = assignment_add_document_fields($assignment);
+        $documents[] = new AssignmentSearchDocument(get_object_vars($assignment), $cm->id, 'intro', $assignment->course, null, $context->id);
             
         $submissions = assignment_get_all_submissions($assignment);
         if ($submissions){
+            $submissionoffset=-1;
             foreach($submissions as $submission){
-                $owner = get_record('user', 'id', $submission->userid);
-                $submission->authors = fullname($owner);
-                $submission->assignmenttype = $assignment->assignmenttype;
-                $submission->date = $submission->timemodified;
-                $submission->name = "submission:";
+                $submissionoffset++;
+                $submission = assignment_submission_add_document_fields($assignment, $submission);
                 if (file_exists("{$CFG->dirroot}/mod/assignment/type/{$assignment->assignmenttype}/searchlib.php")){
                     include_once("{$CFG->dirroot}/mod/assignment/type/{$assignment->assignmenttype}/searchlib.php");
                     if (function_exists('assignment_get_submission_location')){
@@ -135,15 +146,15 @@ function assignment_get_content_for_index(&$assignment) {
                 if ($submitted->source = 'text'){
                     $submission->description = $submitted->data;
                     $submission->description = preg_replace("/<[^>]*>/", '', $submission->description); // stip all tags
-                    $documents[] = new AssignmentSearchDocument(get_object_vars($submission), $cm->id, 'submission', $assignment->course, $submission->userid, $context->id);
-                    mtrace("finished online submission for {$submission->authors} in assignement {$assignment->name}");
+                    $documents[] = new AssignmentSearchDocument(get_object_vars($submission), $cm->id, 'submission', $assignment->course, $submission->userid, $context->id, $submissionoffset);
+                    mtrace("finished online submission for {$submission->authors} in assignment {$assignment->name}");
                 } elseif ($submitted->source = 'files'){
                     $SUBMITTED = opendir($submitted->path);
                     while($entry = readdir($SUBMITTED)){
-                        if (ereg("^\.", $entry)) continue; // exclude hidden and dirs . and .. 
+                        if (preg_match("/^\./", $entry)) continue; // exclude hidden and dirs . and ..
                         $path = "{$submitted->path}/{$entry}";
                         $documents[] = assignment_get_physical_file($submission, $assignment, $cm, $path, $context_id, $documents);
-                        mtrace("finished attachement $path for {$submission->authors} in assignement {$assignment->name}");
+                        mtrace("finished attachement $path for {$submission->authors} in assignment {$assignment->name}");
                     } 
                     closedir($submission->path);                            
                 }
@@ -157,16 +168,17 @@ function assignment_get_content_for_index(&$assignment) {
 
 /**
 * get text from a physical file in an assignment submission 
+* @uses $CFG, $DB
 * @param object $submission a submission for which to fetch some representative text
 * @param object $assignment the relevant assignment as a context
 * @param object $cm the corresponding coursemodule
 * @param string $path a file from which to fetch some representative text
 * @param int $contextid the moodle context if needed
-* @param documents the array of documents, by ref, where to add the new document.
+* @param array $documents the array of documents, by ref, where to add the new document.
 * @return a search document when unique or false.
 */
 function assignment_get_physical_file(&$submission, &$assignment, &$cm, $path, $context_id, &$documents = null){
-    global $CFG;
+    global $CFG, $DB;
     
     $fileparts = pathinfo($path);
     // cannot index unknown or masked types
@@ -188,7 +200,7 @@ function assignment_get_physical_file(&$submission, &$assignment, &$cm, $path, $
         $submission->description = $function_name(null, $path);
         
         // get authors
-        $user = get_record('user', 'id', $submission->userid);
+        $user = $DB->get_record('user', array('id' => $submission->userid));
         $submission->authors = fullname($user);
         
         // we need a real id on file
@@ -212,36 +224,41 @@ function assignment_get_physical_file(&$submission, &$assignment, &$cm, $path, $
 
 /**
 * returns a single data search document based on an assignment
+* @uses $DB
 * @param string $id the id of the searchable item
 * @param string $itemtype the type of information
 */
 function assignment_single_document($id, $itemtype) {
-    if ($itemtype == 'requirement'){
-        if (!$assignment = get_record('assignment', 'id', $id)){
+    global $DB;
+
+    if ($itemtype == 'intro') {
+        if (!$assignment = $DB->get_record('assignment', array('id' => $id))) {
             return null;
         }
     } elseif ($itemtype == 'submission') {
-        if ($submission = get_record('assignment_submissions', 'id', $id)){
-            if (!$assignment = get_record('assignment', 'id', $submission->assignment)){
+        if ($submission = $DB->get_record('assignment_submissions', array('id' => $id))) {
+            if (!$assignment = $DB->get_record('assignment', array('id' => $submission->assignment))) {
                 return null;
             }
         } else {
             return null;
         }
     }
-    $course = get_record('course', 'id', $assignment->course);
-    $coursemodule = get_field('modules', 'id', 'name', 'assignment');
-    $cm = get_record('course_modules', 'course', $course->id, 'module', $coursemodule, 'instance', $assignment->id);
+    $course = $DB->get_record('course', array('id' => $assignment->course));
+    $coursemodule = $DB->get_field('modules', 'id', array('name' => 'assignment'));
+    $cm = $DB->get_record('course_modules', array('course' => $course->id, 'module' => $coursemodule, 'instance' => $assignment->id));
     if ($cm){
         $context = get_context_instance(CONTEXT_MODULE, $cm->id);
     
         // should be only one
-        if ($itemtype == 'description'){
-            $document = new AssignmentSearchDocument(get_object_vars($assignment), $cm->id, 'description', $assignment->course, null, $context->id);
+        if ($itemtype == 'intro') {
+            $assignment = assignment_add_document_fields($assignment);
+            $document = new AssignmentSearchDocument(get_object_vars($assignment), $cm->id, 'intro', $assignment->course, null, $context->id);
             return $document;
         }
-        if ($itemtype == 'submittted'){
-            $document = new AssignmentSearchDocument(get_object_vars($submission), $cm->id, 'submitted', $assignment->course, null, $context->id);
+        if ($itemtype == 'submission') {
+            $submission = assignment_submission_add_document_fields($assignment, $submission);
+            $document = new AssignmentSearchDocument(get_object_vars($submission), $cm->id, 'submission', $assignment->course, null, $context->id);
             return $document;
         }
     }
@@ -264,10 +281,10 @@ function assignment_delete($info, $itemtype) {
 * // TODO chat indexable records are virtual. Should proceed in a special way 
 */
 function assignment_db_names() {
-    //[primary id], [table name], [time created field name], [time modified field name]
+    //[primary id], [table name], [time created field name], [time modified field name], [docsubtype], [additional where conditions for sql]]
     return array(
-        array('id', 'assignment', 'timemodified', 'timemodified', 'description'),
-        array('id', 'assignment_submissions', 'timecreated', 'timemodified', 'submitted')
+        array('id', 'assignment', 'timemodified', 'timemodified', 'intro'),
+        array('id', 'assignment_submissions', 'timecreated', 'timemodified', 'submission')
     );
 }
 
@@ -278,29 +295,29 @@ function assignment_db_names() {
 * - user is legitimate in the surrounding context
 * - user may be guest and guest access is allowed to the module
 * - the function may perform local checks within the module information logic
-* @param path the access path to the module script code
-* @param itemtype the information subclassing (usefull for complex modules, defaults to 'standard')
-* @param this_id the item id within the information class denoted by entry_type. In chats, this id 
+* @uses $CFG, $USER, $DB
+* @param string $path the access path to the module script code
+* @param string $itemtype the information subclassing (usefull for complex modules, defaults to 'standard')
+* @param int $this_id the item id within the information class denoted by entry_type. In chats, this id
 * points out a session history which is a close sequence of messages.
-* @param user the user record denoting the user who searches
-* @param group_id the current group used by the user when searching
-* @uses CFG
+* @param int $user the user record denoting the user who searches
+* @param int $group_id the current group used by the user when searching
 * @return true if access is allowed, false elsewhere
 */
 function assignment_check_text_access($path, $itemtype, $this_id, $user, $group_id, $context_id){
-    global $CFG, $USER;
+    global $CFG, $USER, $DB;
     
     include_once("{$CFG->dirroot}/{$path}/lib.php");
 
     // get the chat session and all related stuff
     if ($itemtype == 'description'){
-        $assignment = get_record('assignment', 'id', $this_id);
+        $assignment = $DB->get_record('assignment', array('id' => $this_id));
     } elseif ($itemtype == 'submitted'){
-        $submission = get_record('assignment_submissions', 'id', $this_id);
-        $assignment = get_record('assignment', 'id', $submission->assignment);
+        $submission = $DB->get_record('assignment_submissions', array('id' => $this_id));
+        $assignment = $DB->get_record('assignment', array('id' => $submission->assignment));
     }
-    $context = get_record('context', 'id', $context_id);
-    $cm = get_record('course_modules', 'id', $context->instanceid);
+    $context = $DB->get_record('context', array('id' => $context_id));
+    $cm = $DB->get_record('course_modules', array('id' => $context->instanceid));
 
     if (empty($cm)) return false; // Shirai 20090530 - MDL19342 - course module might have been delete
 
@@ -364,4 +381,29 @@ function assignment_link_post_processing($title){
     }
     return mb_convert_encoding($title, 'auto', 'UTF-8');
 }
+/**
+ * This adds properties to a records from the submissions table to be a search document
+ * @global <type> $DB
+ * @param <type> $assignment
+ * @param <type> $submission
+ * @return <type>
+ */
+function assignment_submission_add_document_fields($assignment, $submission) {
+    global $DB;
+    
+    $owner = $DB->get_record('user', array('id' => $submission->userid));
+    $submission->authors = fullname($owner);
+    $submission->assignmenttype = $assignment->assignmenttype;
+    $submission->date = $submission->timemodified;
+    $submission->name = "submission:";
+
+    return $submission;
+}
+
+function assignment_add_document_fields($assignment) {
+    $assignment->authors = '';
+    $assignment->date = $assignment->timemodified;
+
+    return $assignment;
+}
 ?>
\ No newline at end of file
