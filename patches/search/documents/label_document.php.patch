diff --git a/search/documents/label_document.php b/search/documents/label_document.php
index 9ee0285..e57c1d8 100644
--- a/search/documents/label_document.php
+++ b/search/documents/label_document.php
@@ -9,6 +9,7 @@
 * @contributor Tatsuva Shirai 20090530
 * @date 2008/03/31
 * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
+* @version Moodle 2.0
 *
 * document handling for all resources
 * This file contains the mapping between a resource and it's indexable counterpart,
@@ -20,8 +21,8 @@
 /**
 * requires and includes
 */
-require_once("$CFG->dirroot/search/documents/document.php");
-require_once("$CFG->dirroot/mod/resource/lib.php");
+require_once($CFG->dirroot.'/search/documents/document.php');
+require_once($CFG->dirroot.'/mod/resource/lib.php');
 
 /* *
 * a class for representing searchable information
@@ -38,7 +39,7 @@ class LabelSearchDocument extends SearchDocument {
         $doc->title     = strip_tags($label['name']);
         $doc->date      = $label['timemodified'];
         $doc->author    = '';
-        $doc->contents  = strip_tags($label['name']);
+        $doc->contents  = strip_tags($label['intro']);
         $doc->url       = label_make_link($label['course']);
         
         // module specific information; optional
@@ -51,7 +52,7 @@ class LabelSearchDocument extends SearchDocument {
 
 /**
 * constructs valid access links to information
-* @param resourceId the of the resource 
+* @param int $resourceId the of the resource 
 * @return a full featured link element as a string
 */
 function label_make_link($course_id) {
@@ -65,10 +66,12 @@ function label_make_link($course_id) {
 *
 */
 function label_iterator() {
+    global $DB;
+    
     //trick to leave search indexer functionality intact, but allow
     //this document to only use the below function to return info
     //to be searched
-    $labels = get_records('label');
+    $labels = $DB->get_records('label');
     return $labels;
 }
 
@@ -76,18 +79,18 @@ function label_iterator() {
 * part of standard API
 * this function does not need a content iterator, returns all the info
 * itself;
-* @param notneeded to comply API, remember to fake the iterator array though
-* @uses CFG
+* @param $label notneeded to comply API, remember to fake the iterator array though
+* @uses $CFG, $DB
 * @return an array of searchable documents
 */
 function label_get_content_for_index(&$label) {
-    global $CFG;
+    global $CFG, $DB;
 
     // starting with Moodle native resources
     $documents = array();
 
-    $coursemodule = get_field('modules', 'id', 'name', 'label');
-    $cm = get_record('course_modules', 'course', $label->course, 'module', $coursemodule, 'instance', $label->id);
+    $coursemodule = $DB->get_field('modules', 'id', array('name' => 'label'));
+    $cm = $DB->get_record('course_modules', array('course' => $label->course, 'module' => $coursemodule, 'instance' => $label->id));
     $context = get_context_instance(CONTEXT_MODULE, $cm->id);
 
     $documents[] = new LabelSearchDocument(get_object_vars($label), $context->id);
@@ -99,17 +102,19 @@ function label_get_content_for_index(&$label) {
 /**
 * part of standard API.
 * returns a single resource search document based on a label id
-* @param id the id of the accessible document
+* @uses $CFG, $DB
+* @param int $id the id of the accessible document
+* @param string $itemtype the nature of the information making the document
 * @return a searchable object or null if failure
 */
 function label_single_document($id, $itemtype) {
-    global $CFG;
+    global $CFG, $DB;
     
-    $label = get_record('label', 'id', $id);
+    $label = $DB->get_record('label', array('id' => $id));
 
     if ($label){
-        $coursemodule = get_field('modules', 'id', 'name', 'label');
-        $cm = get_record('course_modules', 'id', $label->id);
+        $coursemodule = $DB->get_field('modules', 'id', array('name' => 'label'));
+        $cm = $DB->get_record('course_modules', array('id' => $label->id));
         $context = get_context_instance(CONTEXT_MODULE, $cm->id);
         return new LabelSearchDocument(get_object_vars($label), $context->id);
     }
@@ -139,28 +144,28 @@ function label_db_names() {
 /**
 * this function handles the access policy to contents indexed as searchable documents. If this 
 * function does not exist, the search engine assumes access is allowed.
-* @param path the access path to the module script code
-* @param itemtype the information subclassing (usefull for complex modules, defaults to 'standard')
-* @param this_id the item id within the information class denoted by itemtype. In resources, this id 
+* @uses $CFG, $DB
+* @param string $path the access path to the module script code
+* @param string $itemtype the information subclassing (usefull for complex modules, defaults to 'standard')
+* @param int $this_id the item id within the information class denoted by itemtype. In resources, this id 
 * points to the resource record and not to the module that shows it.
-* @param user the user record denoting the user who searches
-* @param group_id the current group used by the user when searching
+* @param object $user the user record denoting the user who searches
+* @param int $group_id the current group used by the user when searching
 * @return true if access is allowed, false elsewhere
 */
 function label_check_text_access($path, $itemtype, $this_id, $user, $group_id, $context_id){
-    global $CFG;
+    global $CFG, $DB;
     
-    // include_once("{$CFG->dirroot}/{$path}/lib.php");
+    $r = $DB->get_record('label', array('id' => $this_id));
+    $module_context = $DB->get_record('context', array('id' => $context_id));
+    $cm = $DB->get_record('course_modules', array('id' => $module_context->instanceid));
     
-    $r = get_record('label', 'id', $this_id);
-    $module_context = get_record('context', 'id', $context_id);
-    $cm = get_record('course_modules', 'id', $module_context->instanceid);
-    if (empty($cm)) return false; // Shirai 20093005 - MDL19342 - course module might have been delete
+    if (empty($cm)) return false; // Shirai 20090530 - MDL19342 - course module might have been delete
 
     $course_context = get_context_instance(CONTEXT_COURSE, $r->course);
 
     //check if englobing course is visible
-    if (!has_capability('moodle/course:view', $course_context)){
+    if (!is_enrolled($course_context) and !is_viewing($course_context)) {
         return false;
     }
 
