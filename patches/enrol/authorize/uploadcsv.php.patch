diff --git a/enrol/authorize/uploadcsv.php b/enrol/authorize/uploadcsv.php
index b96a110..3f54231 100644
--- a/enrol/authorize/uploadcsv.php
+++ b/enrol/authorize/uploadcsv.php
@@ -1,58 +1,79 @@
-<?php // $Id$
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Authorize.Net enrolment plugin - support for user self unenrolment.
+ *
+ * @package    enrol
+ * @subpackage authorize
+ * @copyright  2010 Eugene Venter
+ * @author     Eugene Venter
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
 /// Load libraries
-    require_once('../../config.php');
-    require_once($CFG->libdir.'/uploadlib.php');
-    require_once($CFG->dirroot.'/enrol/authorize/const.php');
-    require_once($CFG->dirroot.'/enrol/authorize/localfuncs.php');
+require_once('../../config.php');
+require_once($CFG->dirroot.'/enrol/authorize/const.php');
+require_once($CFG->dirroot.'/enrol/authorize/localfuncs.php');
+require_once($CFG->libdir.'/eventslib.php');
+require_once('import_form.php');
 
-/// Require capabilites
-    require_login();
-    require_capability('enrol/authorize:uploadcsv', get_context_instance(CONTEXT_USER, $USER->id));
+/// Require capabilities
+require_login();
+require_capability('enrol/authorize:uploadcsv', get_context_instance(CONTEXT_SYSTEM));
 
 /// Print header
-    $struploadcsv = get_string('uploadcsv', 'enrol_authorize');
-    $navlinks = array();
-    $navlinks[] = array('name' => $struploadcsv, 'link' => "uploadcsv.php", 'type' => 'misc');
-    $navigation = build_navigation($navlinks);
+$struploadcsv = get_string('uploadcsv', 'enrol_authorize');
+$managebutton = "<form method='get' action='index.php'><input type='submit' value='".get_string('paymentmanagement', 'enrol_authorize')."' /></form>";
+
+$form = new enrol_authorize_import_form();
 
-    print_header_simple($struploadcsv, "", $navigation);
-    print_heading_with_help($struploadcsv, 'uploadcsv', 'enrol/authorize');
+$PAGE->set_url('/enrol/authorize/uploadcsv.php');
+$PAGE->navbar->add(get_string('paymentmanagement', 'enrol_authorize'), 'index.php');
+$PAGE->navbar->add($struploadcsv, 'uploadcsv.php');
+$PAGE->set_title($struploadcsv);
+$PAGE->set_cacheable(false);
+$PAGE->set_button($managebutton);
+echo $OUTPUT->header();
+echo $OUTPUT->heading($struploadcsv);
 
 /// Handle CSV file
-    if (($form = data_submitted()) && confirm_sesskey()) {
-        $um = new upload_manager('csvfile', false, false, null, false, 0);
-        if ($um->preprocess_files()) {
-            $filename = $um->files['csvfile']['tmp_name'];
+if (!$form->get_data()) {
+    $form->display();
+} else {
+    $filename = $CFG->dataroot . '/temp/enrolauthorize/importedfile_'.time().'.csv';
+    make_upload_directory('temp/enrolauthorize');
             // Fix mac/dos newlines
-            $text = file_get_contents($filename);
+    $text = $form->get_file_content('csvfile');
             $text = preg_replace('!\r\n?!', "\n", $text);
             $fp = fopen($filename, "w");
             fwrite($fp, $text);
             fclose($fp);
             authorize_process_csv($filename);
-        }
-    }
-
-/// Print submit form
-    $maxuploadsize = get_max_upload_file_size();
-    echo '<center><form method="post" enctype="multipart/form-data" action="uploadcsv.php">
-          <input type="hidden" name="MAX_FILE_SIZE" value="'.$maxuploadsize.'" />
-          <input type="hidden" name="sesskey" value="'.$USER->sesskey.'">';
-          upload_print_form_fragment(1, array('csvfile'), array(get_string('file')));
-    echo '<input type="submit" value="'.get_string('upload').'" />';
-    echo '</form></center><br />';
+}
 
 /// Print footer
-    print_footer();
+echo $OUTPUT->footer();
 
-?><?php
+function authorize_process_csv($filename) {
+    global $CFG, $SITE, $DB;
 
-function authorize_process_csv($filename)
-{
-    global $CFG, $SITE;
+    $plugin = enrol_get_plugin('authorize');
 
-/// We need these fields
+    /// We need these fields
     $myfields = array(
         'Transaction ID',           // enrol_authorize.transid or enrol_authorize_refunds.transid; See: Reference Transaction ID
         'Transaction Status',       // Under Review,Approved Review,Review Failed,Settled Successfully
@@ -70,19 +91,19 @@ function authorize_process_csv($filename)
         'Customer ID'               // enrol_authorize.userid
     );
 
-/// Open the file and get first line
+    /// Open the file and get first line
     $handle = fopen($filename, "r");
     if (!$handle) {
-        error('CANNOT OPEN CSV FILE');
+        print_error('cannotopencsv');
     }
     $firstline = fgetcsv($handle, 8192, ",");
     $numfields = count($firstline);
     if ($numfields != 49 && $numfields != 70) {
         @fclose($handle);
-        error('INVALID CSV FILE; Each line must include 49 or 70 fields');
+        print_error('csvinvalidcolsnum');
     }
 
-/// Re-sort fields
+    /// Re-sort fields
     $csvfields = array();
     foreach ($myfields as $myfield) {
         $csvindex = array_search($myfield, $firstline);
@@ -94,12 +115,10 @@ function authorize_process_csv($filename)
     }
     if (empty($csvfields)) {
         @fclose($handle);
-        error("<b>INVALID CSV FILE:</b> First line must include 'Header Fields' and
-               the file must be type of <br />'Expanded Fields/Comma Separated'<br />or<br />
-              'Expanded Fields with CAVV Result Code/Comma Separated'");
+        print_error('csvinvalidcols');
     }
 
-/// Read lines
+    /// Read lines
     $sendem = array();
     $ignoredlines = '';
 
@@ -119,22 +138,22 @@ function authorize_process_csv($filename)
         $settlementdate = strtotime($data[$csvfields['Settlement Date/Time']]);
 
         if ($transstatus == 'Approved Review' || $transstatus == 'Review Failed') {
-            if (($order = get_record('enrol_authorize', 'transid', $transid))) {
+            if (($order = $DB->get_record('enrol_authorize', array('transid'=>$transid)))) {
                 $order->status = ($transstatus == 'Approved Review') ? AN_STATUS_APPROVEDREVIEW : AN_STATUS_REVIEWFAILED;
-                update_record('enrol_authorize', $order);
+                $DB->update_record('enrol_authorize', $order);
                 $updated++; // Updated order status
             }
             continue;
         }
 
         if (!empty($reftransid) && is_numeric($reftransid) && 'Settled Successfully' == $transstatus && 'Credit' == $transtype) {
-            if (($order = get_record('enrol_authorize', 'transid', $reftransid))) {
+            if (($order = $DB->get_record('enrol_authorize', array('transid'=>$reftransid)))) {
                 if (AN_METHOD_ECHECK == $order->paymentmethod) {
-                    $refund = get_record('enrol_authorize_refunds', 'transid', $transid);
+                    $refund = $DB->get_record('enrol_authorize_refunds', array('transid'=>$transid));
                     if ($refund) {
                         $refund->status = AN_STATUS_CREDIT;
                         $refund->settletime = $settlementdate;
-                        update_record('enrol_authorize_refunds', $refund);
+                        $DB->update_record('enrol_authorize_refunds', $refund);
                         $updated++;
                     }
                     else {
@@ -157,7 +176,7 @@ function authorize_process_csv($filename)
         }
 
         // TransactionId must match
-        $order = get_record('enrol_authorize', 'transid', $transid);
+        $order = $DB->get_record('enrol_authorize', array('transid'=>$transid));
         if (!$order) {
             $ignored++;
             $ignoredlines .= $transid . ": Not our business\n";
@@ -167,7 +186,7 @@ function authorize_process_csv($filename)
         // Authorized/Captured and Settled
         $order->status = AN_STATUS_AUTHCAPTURE;
         $order->settletime = $settlementdate;
-        update_record('enrol_authorize', $order);
+        $DB->update_record('enrol_authorize', $order);
         $updated++; // Updated order status and settlement date
 
         if ($order->paymentmethod != AN_METHOD_ECHECK) {
@@ -177,7 +196,7 @@ function authorize_process_csv($filename)
         }
 
         // Get course and context
-        $course = get_record('course', 'id', $order->courseid);
+        $course = $DB->get_record('course', array('id'=>$order->courseid));
         if (!$course) {
             $ignored++;
             $ignoredlines .= $transid . ": Could not find this course: " . $order->courseid . "\n";
@@ -191,7 +210,7 @@ function authorize_process_csv($filename)
         }
 
         // Get user
-        $user = get_record('user', 'id', $order->userid);
+        $user = $DB->get_record('user', array('id'=>$order->userid));
         if (!$user) {
             $ignored++;
             $ignoredlines .= $transid . ": Could not find this user: " . $order->userid . "\n";
@@ -206,33 +225,42 @@ function authorize_process_csv($filename)
                     $timestart = time();
                     $timeend = $timestart + $course->enrolperiod;
                 }
-                if (role_assign($role->id, $user->id, 0, $coursecontext->id, $timestart, $timeend, 0, 'authorize')) {
+                // Enrol user
+                $pinstance = $DB->get_record('enrol', array('id'=>$order->instanceid));
+                $plugin->enrol_user($pinstance, $user->id, $pinstance->roleid, $timestart, $timeend);
+
                     $imported++;
-                    if (!empty($CFG->enrol_mailstudents)) {
+                if ($plugin->get_config('enrol_mailstudents')) {
                         $sendem[] = $order->id;
                     }
                 }
-                else {
-                    $ignoredlines .= $transid . ": Error while trying to enrol " . fullname($user) . " in '$course->fullname' \n";
-                }
-            }
         }
     }
     fclose($handle);
 
-/// Send email to admin
+    /// Send email to admin
     if (!empty($ignoredlines)) {
         $admin = get_admin();
-        email_to_user($admin, $admin, "$SITE->fullname: Authorize.net CSV ERROR LOG", $ignoredlines);
+
+        $eventdata = new stdClass();
+        $eventdata->modulename        = 'moodle';
+        $eventdata->component         = 'enrol_authorize';
+        $eventdata->name              = 'authorize_enrolment';
+        $eventdata->userfrom          = $admin;
+        $eventdata->userto            = $admin;
+        $eventdata->subject           = format_string($SITE->fullname, true, array('context' => get_context_instance(CONTEXT_COURSE, SITEID))).': Authorize.net CSV ERROR LOG';
+        $eventdata->fullmessage       = $ignoredlines;
+        $eventdata->fullmessageformat = FORMAT_PLAIN;
+        $eventdata->fullmessagehtml   = '';
+        $eventdata->smallmessage      = '';
+        message_send($eventdata);
     }
 
-/// Send welcome messages to users
+    /// Send welcome messages to users
     if (!empty($sendem)) {
         send_welcome_messages($sendem);
     }
 
-/// Show result
+    /// Show result
     notice("<b>Done...</b><br />Imported: $imported<br />Updated: $updated<br />Ignored: $ignored");
 }
-
-?>
