diff --git a/admin/xmldb/index.php b/admin/xmldb/index.php
index d6313bf..70c3f6d 100644
--- a/admin/xmldb/index.php
+++ b/admin/xmldb/index.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 
 ///////////////////////////////////////////////////////////////////////////
 //                                                                       //
@@ -27,56 +27,31 @@
 /// This is the main script for the complete XMLDB interface. From here
 /// all the actions supported will be launched.
 
-/// Add required XMLDB constants
-    require_once('../../lib/xmldb/classes/XMLDBConstants.php');
-
+    require_once('../../config.php');
+    require_once($CFG->libdir.'/adminlib.php');
+    require_once($CFG->libdir.'/ddllib.php');
 /// Add required XMLDB action classes
     require_once('actions/XMLDBAction.class.php');
+    require_once('actions/XMLDBCheckAction.class.php');
 
-/// Add main XMLDB Generator
-    require_once('../../lib/xmldb/classes/generators/XMLDBGenerator.class.php');
-
-/// Add required XMLDB DB classes
-    require_once('../../lib/xmldb/classes/XMLDBObject.class.php');
-    require_once('../../lib/xmldb/classes/XMLDBFile.class.php');
-    require_once('../../lib/xmldb/classes/XMLDBStructure.class.php');
-    require_once('../../lib/xmldb/classes/XMLDBTable.class.php');
-    require_once('../../lib/xmldb/classes/XMLDBField.class.php');
-    require_once('../../lib/xmldb/classes/XMLDBKey.class.php');
-    require_once('../../lib/xmldb/classes/XMLDBIndex.class.php');
-    require_once('../../lib/xmldb/classes/XMLDBStatement.class.php');
-
-/// Add Moodle config script (this is loaded AFTER all the rest
-/// of classes because it starts the SESSION and classes to be
-/// stored there MUST be declared before in order to avoid
-/// getting "incomplete" objects
-    require_once('../../config.php');
-    require_once($CFG->libdir.'/adminlib.php');
-    require_once($CFG->libdir.'/ddllib.php'); // Install/upgrade related db functions
 
     admin_externalpage_setup('xmldbeditor');
 
 /// Add other used libraries
     require_once($CFG->libdir . '/xmlize.php');
 
-/// Add all the available SQL generators
-    $generators = get_list_of_plugins('lib/xmldb/classes/generators');
-    foreach($generators as $generator) {
-        require_once ('../../lib/xmldb/classes/generators/' . $generator . '/' . $generator . '.class.php');
-    }
-
 /// Handle session data
     global $XMLDB;
-/// The global SESSION object where everything will happen
+
+/// State is stored in session - we have to serialise it because the classes are not loaded when creating session
     if (!isset($SESSION->xmldb)) {
-        $SESSION->xmldb = new stdClass;
+        $XMLDB = new stdClass;
+    } else {
+        $XMLDB = unserialize($SESSION->xmldb);
     }
-    $XMLDB =& $SESSION->xmldb;
 
 /// Some previous checks
-    if (! $site = get_site()) {
-        redirect("$CFG->wwwroot/$CFG->admin/index.php");
-    }
+    $site = get_site();
 
     require_login();
     require_capability('moodle/site:config', get_context_instance(CONTEXT_SYSTEM));
@@ -95,34 +70,55 @@
         if ($xmldb_action = new $action) {
             //Invoke it
             $result = $xmldb_action->invoke();
+            // store the result in session
+            $SESSION->xmldb = serialize($XMLDB);
+
             if ($result) {
             /// Based on getDoesGenerate()
                 switch ($xmldb_action->getDoesGenerate()) {
                     case ACTION_GENERATE_HTML:
-                    /// Define $CFG->javascript to use our custom javascripts.
-                    /// Save the original one to add it from ours. Global too! :-(
-                        global $standard_javascript;
-                        $standard_javascript = $CFG->javascript;  // Save original javascript file
-                        $CFG->javascript = $CFG->dirroot.'/'.$CFG->admin.'/xmldb/javascript.php';  //Use our custom javascript code
+
+                        $action = optional_param('action', '', PARAM_ALPHAEXT);
+                        $postaction = optional_param('postaction', '', PARAM_ALPHAEXT);
+                    /// If the js exists, load it
+                        if ($action) {
+                            $script = $CFG->admin . '/xmldb/actions/' . $action . '/' . $action . '.js';
+                            $file = $CFG->dirroot . '/' . $script;
+                            if (file_exists($file) && is_readable($file)) {
+                                $PAGE->requires->js('/'.$script);
+                            } else if ($postaction) {
+                            /// Try to load the postaction javascript if exists
+                                $script = $CFG->admin . '/xmldb/actions/' . $postaction . '/' . $postaction . '.js';
+                                $file = $CFG->dirroot . '/' . $script;
+                                if (file_exists($file) && is_readable($file)) {
+                                    $PAGE->requires->js('/'.$script);
+                                }
+                            }
+                        }
+
                     /// Go with standard admin header
-                        admin_externalpage_print_header();
-                        print_heading($xmldb_action->getTitle());
+                        echo $OUTPUT->header();
+                        echo $OUTPUT->heading($xmldb_action->getTitle());
                         echo $xmldb_action->getOutput();
-                        admin_externalpage_print_footer();
+                        echo $OUTPUT->footer();
                         break;
                     case ACTION_GENERATE_XML:
-                        header('Content-type: application/xhtml+xml');
+                        header('Content-type: application/xhtml+xml; charset=utf-8');
                         echo $xmldb_action->getOutput();
                         break;
                 }
             } else {
-                error($xmldb_action->getError());
+                //TODO: need more detailed error info
+                print_error('xmldberror');
             }
         } else {
-            error ("Error: cannot instantiate class (actions/$action/$actionclass)");
+            $a = new stdClass();
+            $a->action = $action;
+            $a->actionclass = $actionclass;
+            print_error('cannotinstantiateclass', 'xmldb', '', $a);
         }
     } else {
-        error ("Error: wrong action specified ($action)");
+        print_error('invalidaction');
     }
 
     if ($xmldb_action->getDoesGenerate() != ACTION_GENERATE_XML) {
@@ -130,5 +126,3 @@
             ///print_object($XMLDB);
         }
     }
-
-?>
