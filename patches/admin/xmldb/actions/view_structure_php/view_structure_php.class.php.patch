diff --git a/admin/xmldb/actions/view_structure_php/view_structure_php.class.php b/admin/xmldb/actions/view_structure_php/view_structure_php.class.php
index 9a920ff..e7963ff 100644
--- a/admin/xmldb/actions/view_structure_php/view_structure_php.class.php
+++ b/admin/xmldb/actions/view_structure_php/view_structure_php.class.php
@@ -1,32 +1,34 @@
-<?php // $Id$
-
-///////////////////////////////////////////////////////////////////////////
-//                                                                       //
-// NOTICE OF COPYRIGHT                                                   //
-//                                                                       //
-// Moodle - Modular Object-Oriented Dynamic Learning Environment         //
-//          http://moodle.com                                            //
-//                                                                       //
-// Copyright (C) 1999 onwards Martin Dougiamas     http://dougiamas.com  //
-//           (C) 2001-3001 Eloy Lafuente (stronk7) http://contiento.com  //
-//                                                                       //
-// This program is free software; you can redistribute it and/or modify  //
-// it under the terms of the GNU General Public License as published by  //
-// the Free Software Foundation; either version 2 of the License, or     //
-// (at your option) any later version.                                   //
-//                                                                       //
-// This program is distributed in the hope that it will be useful,       //
-// but WITHOUT ANY WARRANTY; without even the implied warranty of        //
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         //
-// GNU General Public License for more details:                          //
-//                                                                       //
-//          http://www.gnu.org/copyleft/gpl.html                         //
-//                                                                       //
-///////////////////////////////////////////////////////////////////////////
-
-/// This class will show the PHP needed to perform the desired action
-/// with the specified table.
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * @package   xmldb-editor
+ * @copyright 2003 onwards Eloy Lafuente (stronk7) {@link http://stronk7.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
+/**
+ * This class will show the PHP needed (upgrade block) to perform
+ * the desired DDL action with the specified table
+ *
+ * @package   xmldb-editor
+ * @copyright 2003 onwards Eloy Lafuente (stronk7) {@link http://stronk7.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 class view_structure_php extends XMLDBAction {
 
     /**
@@ -61,12 +63,12 @@ class view_structure_php extends XMLDBAction {
         $this->does_generate = ACTION_GENERATE_HTML;
 
     /// These are always here
-        global $CFG, $XMLDB;
+        global $CFG, $XMLDB, $OUTPUT;
 
     /// Do the job, setting result as needed
     /// Get the dir containing the file
         $dirpath = required_param('dir', PARAM_PATH);
-        $dirpath = $CFG->dirroot . stripslashes_safe($dirpath);
+        $dirpath = $CFG->dirroot . $dirpath;
 
     /// Get the correct dirs
         if (!empty($XMLDB->dbdirs)) {
@@ -114,7 +116,7 @@ class view_structure_php extends XMLDBAction {
         $o.= '    <input type="hidden" name ="dir" value="' . str_replace($CFG->dirroot, '', $dirpath) . '" />';
         $o.= '    <input type="hidden" name ="action" value="view_structure_php" />';
         $o.= '    <table id="formelements" class="boxaligncenter" cellpadding="5">';
-        $o.= '      <tr><td><label for="action" accesskey="c">' . $this->str['selectaction'] .' </label>' . choose_from_menu($popcommands, 'command', $commandparam, '', '', 0, true) . '&nbsp;<label for="table" accesskey="t">' . $this->str['selecttable'] . ' </label>' .choose_from_menu($poptables, 'table', $tableparam, '', '', 0, true) . '</td></tr>';
+        $o.= '      <tr><td><label for="action" accesskey="c">' . $this->str['selectaction'] .' </label>' . html_writer::select($popcommands, 'command', $commandparam, false) . '&nbsp;<label for="table" accesskey="t">' . $this->str['selecttable'] . ' </label>' .html_writer::select($poptables, 'table', $tableparam, false) . '</td></tr>';
         $o.= '      <tr><td colspan="2" align="center"><input type="submit" value="' .$this->str['view'] . '" /></td></tr>';
         $o.= '    </table>';
         $o.= '</div></form>';
@@ -150,7 +152,7 @@ class view_structure_php extends XMLDBAction {
      * This function will generate all the PHP code needed to
      * create one table using XMLDB objects and functions
      *
-     * @param XMLDBStructure structure object containing all the info
+     * @param xmldb_structure structure object containing all the info
      * @param string table table code to be created
      * @return string PHP code to be used to create the table
      */
@@ -170,14 +172,14 @@ class view_structure_php extends XMLDBAction {
 
     /// Add contents
         $result .= XMLDB_LINEFEED;
-        $result .= '    /// Define table ' . $table->getName() . ' to be created' . XMLDB_LINEFEED;
-        $result .= '        $table = new XMLDBTable(' . "'" . $table->getName() . "'" . ');' . XMLDB_LINEFEED;
+        $result .= '        // Define table ' . $table->getName() . ' to be created' . XMLDB_LINEFEED;
+        $result .= '        $table = new xmldb_table(' . "'" . $table->getName() . "'" . ');' . XMLDB_LINEFEED;
         $result .= XMLDB_LINEFEED;
-        $result .= '    /// Adding fields to table ' . $table->getName() . XMLDB_LINEFEED;
+        $result .= '        // Adding fields to table ' . $table->getName() . XMLDB_LINEFEED;
     /// Iterate over each field
         foreach ($table->getFields() as $field) {
         /// The field header, with name
-            $result .= '        $table->addFieldInfo(' . "'" . $field->getName() . "', ";
+            $result .= '        $table->add_field(' . "'" . $field->getName() . "', ";
         /// The field PHP specs
             $result .= $field->getPHP(false);
         /// The end of the line
@@ -186,10 +188,10 @@ class view_structure_php extends XMLDBAction {
     /// Iterate over each key
         if ($keys = $table->getKeys()) {
             $result .= XMLDB_LINEFEED;
-            $result .= '    /// Adding keys to table ' . $table->getName() . XMLDB_LINEFEED;
+            $result .= '        // Adding keys to table ' . $table->getName() . XMLDB_LINEFEED;
             foreach ($keys as $key) {
             /// The key header, with name
-                $result .= '        $table->addKeyInfo(' . "'" . $key->getName() . "', ";
+                $result .= '        $table->add_key(' . "'" . $key->getName() . "', ";
             /// The key PHP specs
                 $result .= $key->getPHP();
             /// The end of the line
@@ -199,10 +201,10 @@ class view_structure_php extends XMLDBAction {
     /// Iterate over each index
         if ($indexes = $table->getIndexes()) {
             $result .= XMLDB_LINEFEED;
-            $result .= '    /// Adding indexes to table ' . $table->getName() . XMLDB_LINEFEED;
+            $result .= '        // Adding indexes to table ' . $table->getName() . XMLDB_LINEFEED;
             foreach ($indexes as $index) {
             /// The index header, with name
-                $result .= '        $table->addIndexInfo(' . "'" . $index->getName() . "', ";
+                $result .= '        $table->add_index(' . "'" . $index->getName() . "', ";
             /// The index PHP specs
                 $result .= $index->getPHP();
             /// The end of the line
@@ -212,8 +214,10 @@ class view_structure_php extends XMLDBAction {
 
     /// Launch the proper DDL
         $result .= XMLDB_LINEFEED;
-        $result .= '    /// Launch create table for ' . $table->getName() . XMLDB_LINEFEED;
-        $result .= '        $result = $result && create_table($table);' . XMLDB_LINEFEED;
+        $result .= '        // Conditionally launch create table for ' . $table->getName() . XMLDB_LINEFEED;
+        $result .= '        if (!$dbman->table_exists($table)) {' . XMLDB_LINEFEED;
+        $result .= '            $dbman->create_table($table);' . XMLDB_LINEFEED;
+        $result .= '        }' . XMLDB_LINEFEED;
 
     /// Add the proper upgrade_xxxx_savepoint call
         $result .= $this->upgrade_savepoint_php ($structure);
@@ -228,7 +232,7 @@ class view_structure_php extends XMLDBAction {
      * This function will generate all the PHP code needed to
      * drop one table using XMLDB objects and functions
      *
-     * @param XMLDBStructure structure object containing all the info
+     * @param xmldb_structure structure object containing all the info
      * @param string table table code to be dropped
      * @return string PHP code to be used to drop the table
      */
@@ -248,13 +252,15 @@ class view_structure_php extends XMLDBAction {
 
     /// Add contents
         $result .= XMLDB_LINEFEED;
-        $result .= '    /// Define table ' . $table->getName() . ' to be dropped' . XMLDB_LINEFEED;
-        $result .= '        $table = new XMLDBTable(' . "'" . $table->getName() . "'" . ');' . XMLDB_LINEFEED;
+        $result .= '        // Define table ' . $table->getName() . ' to be dropped' . XMLDB_LINEFEED;
+        $result .= '        $table = new xmldb_table(' . "'" . $table->getName() . "'" . ');' . XMLDB_LINEFEED;
 
     /// Launch the proper DDL
         $result .= XMLDB_LINEFEED;
-        $result .= '    /// Launch drop table for ' . $table->getName() . XMLDB_LINEFEED;
-        $result .= '        $result = $result && drop_table($table);' . XMLDB_LINEFEED;
+        $result .= '        // Conditionally launch drop table for ' . $table->getName() . XMLDB_LINEFEED;
+        $result .= '        if ($dbman->table_exists($table)) {' . XMLDB_LINEFEED;
+        $result .= '            $dbman->drop_table($table);' . XMLDB_LINEFEED;
+        $result .= '        }' . XMLDB_LINEFEED;
 
     /// Add the proper upgrade_xxxx_savepoint call
         $result .= $this->upgrade_savepoint_php ($structure);
@@ -269,7 +275,7 @@ class view_structure_php extends XMLDBAction {
      * This function will generate all the PHP code needed to
      * rename one table using XMLDB objects and functions
      *
-     * @param XMLDBStructure structure object containing all the info
+     * @param xmldb_structure structure object containing all the info
      * @param string table table code to be renamed
      * @return string PHP code to be used to rename the table
      */
@@ -289,13 +295,13 @@ class view_structure_php extends XMLDBAction {
 
     /// Add contents
         $result .= XMLDB_LINEFEED;
-        $result .= '    /// Define table ' . $table->getName() . ' to be renamed to NEWNAMEGOESHERE' . XMLDB_LINEFEED;
-        $result .= '        $table = new XMLDBTable(' . "'" . $table->getName() . "'" . ');' . XMLDB_LINEFEED;
+        $result .= '        // Define table ' . $table->getName() . ' to be renamed to NEWNAMEGOESHERE' . XMLDB_LINEFEED;
+        $result .= '        $table = new xmldb_table(' . "'" . $table->getName() . "'" . ');' . XMLDB_LINEFEED;
 
     /// Launch the proper DDL
         $result .= XMLDB_LINEFEED;
-        $result .= '    /// Launch rename table for ' . $table->getName() . XMLDB_LINEFEED;
-        $result .= '        $result = $result && rename_table($table, ' . "'NEWNAMEGOESHERE'" . ');' . XMLDB_LINEFEED;
+        $result .= '        // Launch rename table for ' . $table->getName() . XMLDB_LINEFEED;
+        $result .= '        $dbman->rename_table($table, ' . "'NEWNAMEGOESHERE'" . ');' . XMLDB_LINEFEED;
 
     /// Add the proper upgrade_xxxx_savepoint call
         $result .= $this->upgrade_savepoint_php ($structure);
@@ -306,28 +312,5 @@ class view_structure_php extends XMLDBAction {
         return $result;
     }
 
-    /**
-     * This function will generate the PHP code needed to
-     * implement the upgrade_xxxx_savepoint() php calls in
-     * upgrade code generated from the editor
-     *
-     * @param XMLDBStructure structure object containing all the info
-     * @return string PHP code to be used to stabilish a savepoint
-     */
-    function upgrade_savepoint_php ($structure) {
-
-        $path = $structure->getPath();
-
-        $result = '';
-
-        switch ($path) {
-            case 'lib/db':
-                $result = XMLDB_LINEFEED .
-                         '    /// Main savepoint reached' . XMLDB_LINEFEED .
-                         '        upgrade_main_savepoint($result, XXXXXXXXXX);' . XMLDB_LINEFEED;
-                break;
-        }
-        return $result;
-    }
 }
-?>
+
