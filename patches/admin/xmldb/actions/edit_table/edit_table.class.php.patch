diff --git a/admin/xmldb/actions/edit_table/edit_table.class.php b/admin/xmldb/actions/edit_table/edit_table.class.php
index 58af0ee..70b87d9 100644
--- a/admin/xmldb/actions/edit_table/edit_table.class.php
+++ b/admin/xmldb/actions/edit_table/edit_table.class.php
@@ -1,31 +1,37 @@
-<?php // $Id$
+<?php
 
-///////////////////////////////////////////////////////////////////////////
-//                                                                       //
-// NOTICE OF COPYRIGHT                                                   //
-//                                                                       //
-// Moodle - Modular Object-Oriented Dynamic Learning Environment         //
-//          http://moodle.com                                            //
-//                                                                       //
-// Copyright (C) 1999 onwards Martin Dougiamas        http://dougiamas.com  //
-//           (C) 2001-3001 Eloy Lafuente (stronk7) http://contiento.com  //
-//                                                                       //
-// This program is free software; you can redistribute it and/or modify  //
-// it under the terms of the GNU General Public License as published by  //
-// the Free Software Foundation; either version 2 of the License, or     //
-// (at your option) any later version.                                   //
-//                                                                       //
-// This program is distributed in the hope that it will be useful,       //
-// but WITHOUT ANY WARRANTY; without even the implied warranty of        //
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         //
-// GNU General Public License for more details:                          //
-//                                                                       //
-//          http://www.gnu.org/copyleft/gpl.html                         //
-//                                                                       //
-///////////////////////////////////////////////////////////////////////////
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
 
-/// This class will provide the interface for all the edit table actions
+/**
+ * @package   xmldb-editor
+ * @copyright 2003 onwards Eloy Lafuente (stronk7) {@link http://stronk7.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
+/**
+ * This class provides the interface for all the edit table actions
+ *
+ * Main page of edit table actions, from here fields/indexes/keys edition
+ * can be invoked, plus links to PHP code generator, view SQL, rearrange
+ * elements and so on.
+ *
+ * @package   xmldb-editor
+ * @copyright 2003 onwards Eloy Lafuente (stronk7) {@link http://stronk7.com}
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 class edit_table extends XMLDBAction {
 
     /**
@@ -55,7 +61,11 @@ class edit_table extends XMLDBAction {
             'down' => 'xmldb',
             'delete' => 'xmldb',
             'reserved' => 'xmldb',
-            'back' => 'xmldb'
+            'back' => 'xmldb',
+            'viewxml' => 'xmldb',
+            'pendingchanges' => 'xmldb',
+            'pendingchangescannotbesaved' => 'xmldb',
+            'save' => 'xmldb'
         ));
     }
 
@@ -78,7 +88,7 @@ class edit_table extends XMLDBAction {
     /// Do the job, setting result as needed
     /// Get the dir containing the file
         $dirpath = required_param('dir', PARAM_PATH);
-        $dirpath = $CFG->dirroot . stripslashes_safe($dirpath);
+        $dirpath = $CFG->dirroot . $dirpath;
 
     /// Get the correct dirs
         if (!empty($XMLDB->dbdirs)) {
@@ -86,6 +96,12 @@ class edit_table extends XMLDBAction {
         } else {
             return false;
         }
+    /// Check if the dir exists and copy it from dbdirs
+    /// (because we need straight load in case of saving from here)
+        if (!isset($XMLDB->editeddirs[$dirpath])) {
+            $XMLDB->editeddirs[$dirpath] = unserialize(serialize($dbdir));
+        }
+
         if (!empty($XMLDB->editeddirs)) {
             $editeddir =& $XMLDB->editeddirs[$dirpath];
             $structure =& $editeddir->xml_file->getStructure();
@@ -121,6 +137,17 @@ class edit_table extends XMLDBAction {
         $o.= '      <tr valign="top"><td>&nbsp;</td><td><input type="submit" value="' .$this->str['change'] . '" /></td></tr>';
         $o.= '    </table>';
         $o.= '</div></form>';
+    /// Calculate the pending changes / save message
+        $e = '';
+        $cansavenow = false;
+        if ($structure->hasChanged()) {
+            if (!is_writeable($dirpath . '/install.xml') || !is_writeable($dirpath)) {
+                $e .= '<p class="centerpara error">' . $this->str['pendingchangescannotbesaved'] . '</p>';
+            } else {
+                $e .= '<p class="centerpara warning">' . $this->str['pendingchanges'] . '</p>';
+                $cansavenow = true;
+            }
+        }
     /// Calculate the buttons
         $b = ' <p class="centerpara buttons">';
     /// The view original XML button
@@ -141,28 +168,24 @@ class edit_table extends XMLDBAction {
         $b .= '&nbsp;<a href="index.php?action=new_key&amp;sesskey=' . sesskey() . '&amp;postaction=edit_key&amp;table=' . $tableparam . '&amp;key=changeme&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' . $this->str['newkey'] . ']</a>';
     /// The new index button
         $b .= '&nbsp;<a href="index.php?action=new_index&amp;sesskey=' . sesskey() . '&amp;postaction=edit_index&amp;table=' . $tableparam . '&amp;index=changeme&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' . $this->str['newindex'] . ']</a>';
-    /// The back to edit xml file button
-        $b .= '&nbsp;<a href="index.php?action=edit_xml_file&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' . $this->str['back'] . ']</a>';
         $b .= '</p>';
+
         $b .= ' <p class="centerpara buttons">';
     /// The view sql code button
         $b .= '<a href="index.php?action=view_table_sql&amp;table=' . $tableparam . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' .$this->str['viewsqlcode'] . ']</a>';
     /// The view php code button
         $b .= '&nbsp;<a href="index.php?action=view_table_php&amp;table=' . $tableparam . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' . $this->str['viewphpcode'] . ']</a>';
+    /// The save button (if possible)
+        if ($cansavenow) {
+            $b .= '&nbsp;<a href="index.php?action=save_xml_file&amp;sesskey=' . sesskey() . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '&amp;time=' . time() . '&amp;unload=false&amp;postaction=edit_table&amp;table=' . $tableparam . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' . $this->str['save'] . ']</a>';
+        }
+    /// The back to edit xml file button
+        $b .= '&nbsp;<a href="index.php?action=edit_xml_file&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' . $this->str['back'] . ']</a>';
         $b .= '</p>';
-        $o .= $b;
+        $o .= $e . $b;
 
-    /// Join all the reserved words into one big array
-    /// Calculate list of available SQL generators
-        $plugins = get_list_of_plugins('lib/xmldb/classes/generators');
-        $reserved_words = array();
-        foreach($plugins as $plugin) {
-            $classname = 'XMLDB' . $plugin;
-            $generator = new $classname();
-            $reserved_words = array_merge($reserved_words, $generator->getReservedWords());
-        }
-        sort($reserved_words);
-        $reserved_words = array_unique($reserved_words);
+        require_once("$CFG->libdir/ddl/sql_generator.php");
+        $reserved_words = sql_generator::getAllReservedWords();
 
     /// Delete any 'changeme' field/key/index
         $table->deleteField('changeme');
@@ -176,6 +199,12 @@ class edit_table extends XMLDBAction {
             $o .= '<table id="listfields" border="0" cellpadding="5" cellspacing="1" class="boxaligncenter flexible">';
             $row = 0;
             foreach ($fields as $field) {
+            /// The field name (link to edit - if the field has no uses)
+                if (!$structure->getFieldUses($table->getName(), $field->getName())) {
+                    $f = '<a href="index.php?action=edit_field&amp;field=' .$field->getName() . '&amp;table=' . $table->getName() . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">' . $field->getName() . '</a>';
+                } else {
+                    $f = $field->getName();
+                }
             /// Calculate buttons
                 $b = '</td><td class="button cell">';
             /// The edit button (if the field has no uses)
@@ -206,14 +235,17 @@ class edit_table extends XMLDBAction {
                 } else {
                     $b .= '[' . $this->str['delete'] . ']';
                 }
+                $b .= '</td><td class="button cell">';
+            /// The view xml button
+                $b .= '<a href="index.php?action=view_field_xml&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '&amp;field=' . $field->getName() . '&amp;table=' . $table->getName() . '&amp;select=edited">[' . $this->str['viewxml'] . ']</a>';
             /// Detect if the table name is a reserved word
-                if (in_array($field->getName(), $reserved_words)) {
+                if (array_key_exists($field->getName(), $reserved_words)) {
                     $b .= '&nbsp;<a href="index.php?action=view_reserved_words"><span class="error">' . $this->str['reserved'] . '</span></a>';
                 }
             /// The readable info
                 $r = '</td><td class="readableinfo cell">' . $field->readableInfo() . '</td>';
             /// Print table row
-            $o .= '<tr class="r' . $row . '"><td class="table cell"><a href="index.php?action=view_field_xml&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '&amp;field=' . $field->getName() . '&amp;table=' . $table->getName() . '&amp;select=edited">' . $field->getName() . '</a>' . $b . $r . '</tr>';
+                $o .= '<tr class="r' . $row . '"><td class="table cell">' . $f . $b . $r . '</tr>';
                 $row = ($row + 1) % 2;
             }
             $o .= '</table>';
@@ -225,6 +257,12 @@ class edit_table extends XMLDBAction {
             $o .= '<table id="listkeys" border="0"  cellpadding="5" cellspacing="1" class="boxaligncenter flexible">';
             $row = 0;
             foreach ($keys as $key) {
+            /// The key name (link to edit - if the key has no uses)
+                if (!$structure->getKeyUses($table->getName(), $key->getName())) {
+                    $k = '<a href="index.php?action=edit_key&amp;key=' .$key->getName() . '&amp;table=' . $table->getName() . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">' . $key->getName() . '</a>';
+                } else {
+                    $k = $key->getName();
+                }
             /// Calculate buttons
                 $b = '</td><td class="button cell">';
             /// The edit button (if the key hasn't uses)
@@ -254,10 +292,13 @@ class edit_table extends XMLDBAction {
                 } else {
                     $b .= '[' . $this->str['delete'] . ']';
                 }
+                $b .= '</td><td class="button cell">';
+            /// The view xml button
+                $b .= '<a href="index.php?action=view_key_xml&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '&amp;key=' . $key->getName() . '&amp;table=' . $table->getName() . '&amp;select=edited">[' . $this->str['viewxml'] . ']</a>';
             /// The readable info
                 $r = '</td><td class="readableinfo cell">' . $key->readableInfo() . '</td>';
             /// Print table row
-            $o .= '<tr class="r' . $row . '"><td class="table cell"><a href="index.php?action=view_key_xml&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '&amp;key=' . $key->getName() . '&amp;table=' . $table->getName() . '&amp;select=edited">' . $key->getName() . '</a>' . $b . $r .'</tr>';
+            $o .= '<tr class="r' . $row . '"><td class="table cell">' . $k . $b . $r .'</tr>';
                 $row = ($row + 1) % 2;
             }
             $o .= '</table>';
@@ -269,6 +310,8 @@ class edit_table extends XMLDBAction {
             $o .= '<table id="listindexes" border="0" cellpadding="5" cellspacing="1" class="boxaligncenter flexible">';
             $row = 0;
             foreach ($indexes as $index) {
+            /// The index name (link to edit)
+                $i = '<a href="index.php?action=edit_index&amp;index=' .$index->getName() . '&amp;table=' . $table->getName() . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">' . $index->getName() . '</a>';
             /// Calculate buttons
                 $b = '</td><td class="button cell">';
             /// The edit button
@@ -290,10 +333,13 @@ class edit_table extends XMLDBAction {
                 $b .= '</td><td class="button cell">';
             /// The delete button
                     $b .= '<a href="index.php?action=delete_index&amp;sesskey=' . sesskey() . '&amp;index=' . $index->getName() . '&amp;table=' . $table->getName() . '&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '">[' . $this->str['delete'] . ']</a>';
+                $b .= '</td><td class="button cell">';
+            /// The view xml button
+                $b .= '<a href="index.php?action=view_index_xml&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '&amp;index=' . $index->getName() . '&amp;table=' . $table->getName() . '&amp;select=edited">[' . $this->str['viewxml'] . ']</a>';
             /// The readable info
                 $r = '</td><td class="readableinfo cell">' . $index->readableInfo() . '</td>';
             /// Print table row
-            $o .= '<tr class="r' . $row . '"><td class="table cell"><a href="index.php?action=view_index_xml&amp;dir=' . urlencode(str_replace($CFG->dirroot, '', $dirpath)) . '&amp;index=' . $index->getName() . '&amp;table=' . $table->getName() . '&amp;select=edited">' . $index->getName() . '</a>' . $b . $r .'</tr>';
+            $o .= '<tr class="r' . $row . '"><td class="table cell">' . $i . $b . $r .'</tr>';
                 $row = ($row + 1) % 2;
             }
             $o .= '</table>';
@@ -310,4 +356,4 @@ class edit_table extends XMLDBAction {
         return $result;
     }
 }
-?>
+
