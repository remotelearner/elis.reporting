diff --git a/admin/oacleanup.php b/admin/oacleanup.php
index 04d0cd3..891a20a 100644
--- a/admin/oacleanup.php
+++ b/admin/oacleanup.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 
 if (!isset($CFG)) {
 
@@ -7,19 +7,19 @@ if (!isset($CFG)) {
 
     admin_externalpage_setup('oacleanup');
 
-    admin_externalpage_print_header();
+    echo $OUTPUT->header();
     online_assignment_cleanup(true);
-    admin_externalpage_print_footer();
+    echo $OUTPUT->footer();
 
 }
 
 
 
 function online_assignment_cleanup($output=false) {
-    global $CFG;
+    global $CFG, $DB, $OUTPUT;
 
     if ($output) {
-        print_heading('Online Assignment Cleanup');
+        echo $OUTPUT->heading('Online Assignment Cleanup');
         echo '<center>';
     }
 
@@ -27,7 +27,7 @@ function online_assignment_cleanup($output=false) {
     /// We don't want to run this code if we are doing an upgrade from an assignment
     /// version earlier than 2005041400
     /// because the assignment type field will not exist
-    $amv = get_field('modules', 'version', 'name', 'assignment');
+    $amv = $DB->get_field('modules', 'version', array('name'=>'assignment'));
     if ((int)$amv < 2005041400) {
         if ($output) {
             echo '</center>';
@@ -37,22 +37,34 @@ function online_assignment_cleanup($output=false) {
 
 
     /// get the module id for assignments from db
-    $arecord = get_record('modules', 'name', 'assignment');
+    $arecord = $DB->get_record('modules', array('name', 'assignment'));
     $aid = $arecord->id;
 
 
     /// get a list of all courses on this site
-    $courses = get_records('course');
+    list($ctxselect, $ctxjoin) = context_instance_preload_sql('c.id', CONTEXT_COURSE, 'ctx');
+    $sql = "SELECT c.* $ctxselect FROM {course} c $ctxjoin";
+    $courses = $DB->get_records_sql($sql);
 
     /// cycle through each course
     foreach ($courses as $course) {
+        context_instance_preload($course);
+        $context = get_context_instance(CONTEXT_COURSE, $course->id);
 
-        $fullname = empty($course->fullname) ? 'Course: '.$course->id : $course->fullname;
-        if ($output) print_heading($fullname);
+        if (empty($course->fullname)) {
+            $fullname = get_string('course').': '.$course->id;
+        } else {
+            $fullname = format_string($course->fullname, true, array('context' => $context));
+        }
+        if ($output) echo $OUTPUT->heading($fullname);
 
         /// retrieve a list of sections beyond what is currently being shown
-        $sql = 'SELECT * FROM '.$CFG->prefix.'course_sections WHERE course='.$course->id.' AND section>'.$course->numsections.' ORDER BY section ASC';
-        if (!($xsections = get_records_sql($sql))) {
+        $sql = "SELECT *
+                  FROM {course_sections}
+                 WHERE course=? AND section>?
+              ORDER BY section ASC";
+        $params = array($course->id, $course->numsections);
+        if (!($xsections = $DB->get_records_sql($sql, $params))) {
             if ($output) echo 'No extra sections<br />';
             continue;
         }
@@ -70,16 +82,13 @@ function online_assignment_cleanup($output=false) {
                 foreach ($instances as $instance) {
                     /// is this an instance of an online assignment
                     $sql = "SELECT a.id
-                        FROM  {$CFG->prefix}course_modules cm,
-                    {$CFG->prefix}assignment a
-                    WHERE cm.id = '$instance' AND
-                        cm.module = '$aid' AND
-                        cm.instance = a.id AND
-                        a.assignmenttype = 'online'";
-
+                              FROM  {course_modules} cm, {assignment} a
+                             WHERE cm.id = ? AND cm.module = ? AND
+                                   cm.instance = a.id AND a.assignmenttype = 'online'";
+                    $params = array($instance, $aid);
 
                     /// if record exists then we need to move instance to it's correct section
-                    if (record_exists_sql($sql)) {
+                    if ($DB->record_exists_sql($sql, $params)) {
 
                         /// check the new section id
                         /// the journal update erroneously stored it in course_sections->section
@@ -87,15 +96,17 @@ function online_assignment_cleanup($output=false) {
                         /// double check the new section
                         if ($newsection > $course->numsections) {
                             /// get the record for section 0 for this course
-                            if (!($zerosection = get_record('course_sections', 'course', $course->id, 'section', '0'))) {
+                            if (!($zerosection = $DB->get_record('course_sections', array('course'=>$course->id, 'section'=>'0')))) {
                                 continue;
                             }
                             $newsection = $zerosection->id;
                         }
 
                         /// grab the section record
-                        if (!($section = get_record('course_sections', 'id', $newsection))) {
-                            if ($output) echo 'Serious error: Cannot retrieve section: '.$newsection.' for course: '. format_string($course->fullname) .'<br />';
+                        if (!($section = $DB->get_record('course_sections', array('id'=>$newsection)))) {
+                            if ($output) {
+                                echo 'Serious error: Cannot retrieve section: '.$newsection.' for course: '. $fullname .'<br />';
+                            }
                             continue;
                         }
 
@@ -110,13 +121,13 @@ function online_assignment_cleanup($output=false) {
                         /// implode the sequence
                         $section->sequence = implode(',', $sequence);
 
-                        set_field('course_sections', 'sequence', $section->sequence, 'id', $section->id);
+                        $DB->set_field('course_sections', 'sequence', $section->sequence, array('id'=>$section->id));
 
                         /// now we need to remove the instance from the old sequence
 
                         /// grab the old section record
-                        if (!($section = get_record('course_sections', 'id', $xsection->id))) {
-                            if ($output) echo 'Serious error: Cannot retrieve old section: '.$xsection->id.' for course: '.$course->fullname.'<br />';
+                        if (!($section = $DB->get_record('course_sections', array('id'=>$xsection->id)))) {
+                            if ($output) echo 'Serious error: Cannot retrieve old section: '.$xsection->id.' for course: '.$fullname.'<br />';
                             continue;
                         }
 
@@ -132,7 +143,7 @@ function online_assignment_cleanup($output=false) {
                         /// implode the sequence
                         $section->sequence = implode(',', $sequence);
 
-                        set_field('course_sections', 'sequence', $section->sequence, 'id', $section->id);
+                        $DB->set_field('course_sections', 'sequence', $section->sequence, array('id'=>$section->id));
 
 
                         if ($output) echo 'Online Assignment (instance '.$instance.') moved from section '.$section->id.': to section '.$newsection.'<br />';
@@ -143,7 +154,7 @@ function online_assignment_cleanup($output=false) {
 
             /// if the summary and sequence are empty then remove this section
             if (empty($xsection->summary) and empty($xsection->sequence)) {
-                delete_records('course_sections', 'id', $xsection->id);
+                $DB->delete_records('course_sections', array('id'=>$xsection->id));
                 if ($output) echo 'Deleting empty section '.$xsection->section.'<br />';
             }
         }
@@ -152,4 +163,4 @@ function online_assignment_cleanup($output=false) {
     echo '</center>';
 }
 
-?>
+
