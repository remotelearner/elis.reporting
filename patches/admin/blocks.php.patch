diff --git a/admin/blocks.php b/admin/blocks.php
index 277645a..55170d2 100644
--- a/admin/blocks.php
+++ b/admin/blocks.php
@@ -1,12 +1,10 @@
-<?PHP // $Id$
+<?php
 
     // Allows the admin to configure blocks (hide/show, delete and configure)
 
     require_once('../config.php');
     require_once($CFG->libdir.'/adminlib.php');
-    require_once($CFG->libdir.'/blocklib.php');
     require_once($CFG->libdir.'/tablelib.php');
-    require_once($CFG->libdir.'/ddllib.php');
 
     admin_externalpage_setup('manageblocks');
 
@@ -14,7 +12,8 @@
     $hide     = optional_param('hide', 0, PARAM_INT);
     $show     = optional_param('show', 0, PARAM_INT);
     $delete   = optional_param('delete', 0, PARAM_INT);
-    $multiple = optional_param('multiple', 0, PARAM_INT);
+    $unprotect = optional_param('unprotect', 0, PARAM_INT);
+    $protect = optional_param('protect', 0, PARAM_INT);
 
 /// Print headings
 
@@ -26,79 +25,97 @@
     $strsettings = get_string('settings');
     $strcourses = get_string('blockinstances', 'admin');
     $strname = get_string('name');
-    $strmultiple = get_string('blockmultiple', 'admin');
     $strshowblockcourse = get_string('showblockcourse');
+    $strprotecthdr = get_string('blockprotect', 'admin'). $OUTPUT->help_icon('blockprotect','admin');
+    $strprotect = get_string('blockprotect', 'admin');
+    $strunprotect = get_string('blockunprotect', 'admin');
 
 /// If data submitted, then process and store.
 
     if (!empty($hide) && confirm_sesskey()) {
-        if (!$block = get_record('block', 'id', $hide)) {
-            error("Block doesn't exist!");
+        if (!$block = $DB->get_record('block', array('id'=>$hide))) {
+            print_error('blockdoesnotexist', 'error');
         }
-        set_field('block', 'visible', '0', 'id', $block->id);      // Hide block
+        $DB->set_field('block', 'visible', '0', array('id'=>$block->id));      // Hide block
         admin_get_root(true, false);  // settings not required - only pages
     }
 
     if (!empty($show) && confirm_sesskey() ) {
-        if (!$block = get_record('block', 'id', $show)) {
-            error("Block doesn't exist!");
+        if (!$block = $DB->get_record('block', array('id'=>$show))) {
+            print_error('blockdoesnotexist', 'error');
         }
-        set_field('block', 'visible', '1', 'id', $block->id);      // Show block
+        $DB->set_field('block', 'visible', '1', array('id'=>$block->id));      // Show block
         admin_get_root(true, false);  // settings not required - only pages
     }
 
-    if (!empty($multiple) && confirm_sesskey()) {
-        if (!$block = blocks_get_record($multiple)) {
-            error("Block doesn't exist!");
+    if (!isset($CFG->undeletableblocktypes) || (!is_array($CFG->undeletableblocktypes) && !is_string($CFG->undeletableblocktypes))) {
+        $undeletableblocktypes = array('navigation', 'settings');
+    } else if (is_string($CFG->undeletableblocktypes)) {
+        $undeletableblocktypes = explode(',', $CFG->undeletableblocktypes);
+    } else {
+        $undeletableblocktypes = $CFG->undeletableblocktypes;
+    }
+
+    if (!empty($protect) && confirm_sesskey()) {
+        if (!$block = $DB->get_record('block', array('id'=>$protect))) {
+            print_error('blockdoesnotexist', 'error');
+        }
+        if (!in_array($block->name, $undeletableblocktypes)) {
+            $undeletableblocktypes[] = $block->name;
+            set_config('undeletableblocktypes', implode(',', $undeletableblocktypes));
+        }
+        admin_get_root(true, false);  // settings not required - only pages
+    }
+
+    if (!empty($unprotect) && confirm_sesskey()) {
+        if (!$block = $DB->get_record('block', array('id'=>$unprotect))) {
+            print_error('blockdoesnotexist', 'error');
+        }
+        if (in_array($block->name, $undeletableblocktypes)) {
+            $undeletableblocktypes = array_diff($undeletableblocktypes, array($block->name));
+            set_config('undeletableblocktypes', implode(',', $undeletableblocktypes));
         }
-        $block->multiple = !$block->multiple;
-        update_record('block', $block);
         admin_get_root(true, false);  // settings not required - only pages
     }
 
     if (!empty($delete) && confirm_sesskey()) {
-        admin_externalpage_print_header();
-        print_heading($strmanageblocks);
+        echo $OUTPUT->header();
+        echo $OUTPUT->heading($strmanageblocks);
 
         if (!$block = blocks_get_record($delete)) {
-            error("Block doesn't exist!");
+            print_error('blockdoesnotexist', 'error');
         }
 
-        if (!block_is_compatible($block->name)) {
+        if (get_string_manager()->string_exists('pluginname', "block_$block->name")) {
+            $strblockname = get_string('pluginname', "block_$block->name");
+        } else {
             $strblockname = $block->name;
         }
-        else {
-            $blockobject = block_instance($block->name);
-            $strblockname = $blockobject->get_title();
-        }
 
         if (!$confirm) {
-            notice_yesno(get_string('blockdeleteconfirm', '', $strblockname),
-                         'blocks.php?delete='.$block->id.'&amp;confirm=1&amp;sesskey='.$USER->sesskey,
-                         'blocks.php');
-            admin_externalpage_print_footer();
+            echo $OUTPUT->confirm(get_string('blockdeleteconfirm', '', $strblockname), 'blocks.php?delete='.$block->id.'&confirm=1', 'blocks.php');
+            echo $OUTPUT->footer();
             exit;
 
         } else {
             // Inform block it's about to be deleted
+            if (file_exists("$CFG->dirroot/blocks/$block->name/block_$block->name.php")) {
             $blockobject = block_instance($block->name);
             if ($blockobject) {
                 $blockobject->before_delete();  //only if we can create instance, block might have been already removed
             }
+            }
 
             // First delete instances and then block
-            $instances = get_records('block_instance', 'blockid', $block->id);
+            $instances = $DB->get_records('block_instances', array('blockname' => $block->name));
             if(!empty($instances)) {
                 foreach($instances as $instance) {
                     blocks_delete_instance($instance);
-                    blocks_delete_instance($instance, true);
                 }
             }
 
             // Delete block
-            if (!delete_records('block', 'id', $block->id)) {
-                notify("Error occurred while deleting the $strblockname record from blocks table");
-            }
+            $DB->delete_records('block', array('id'=>$block->id));
 
             drop_plugin_tables($block->name, "$CFG->dirroot/blocks/$block->name/db/install.xml", false); // old obsoleted table names
             drop_plugin_tables('block_'.$block->name, "$CFG->dirroot/blocks/$block->name/db/install.xml", false);
@@ -106,7 +123,7 @@
             // Delete the capabilities that were defined by this block
             capabilities_cleanup('block/'.$block->name);
 
-            // remove entent handlers and dequeue pending events
+            // Remove event handlers and dequeue pending events
             events_uninstall('block/'.$block->name);
 
             $a->block = $strblockname;
@@ -115,60 +132,62 @@
         }
     }
 
-    admin_externalpage_print_header();
-    print_heading($strmanageblocks);
+    echo $OUTPUT->header();
+    echo $OUTPUT->heading($strmanageblocks);
 
 /// Main display starts here
 
 /// Get and sort the existing blocks
 
-    if (false === ($blocks = get_records('block'))) {
-        error('No blocks found!');  // Should never happen
+    if (!$blocks = $DB->get_records('block', array(), 'name ASC')) {
+        print_error('noblocks', 'error');  // Should never happen
     }
 
     $incompatible = array();
 
-    foreach ($blocks as $block) {
-        if(!block_is_compatible($block->name)) {
-            notify('Block '. $block->name .' is not compatible with the current version of Moodle and needs to be updated by a programmer.');
-            $incompatible[] = $block;
-            continue;
-        }
-        if(($blockobject = block_instance($block->name)) === false) {
-            // Failed to load
-            continue;
-        }
-        $blockbyname[$blockobject->get_title()] = $block->id;
-        $blockobjects[$block->id] = $blockobject;
-    }
-
-    if(empty($blockbyname)) {
-        error('One or more blocks are registered in the database, but they all failed to load!');
-    }
-
-    ksort($blockbyname);
-
 /// Print the table of all blocks
 
     $table = new flexible_table('admin-blocks-compatible');
 
-    $table->define_columns(array('name', 'instances', 'version', 'hideshow', 'multiple', 'delete', 'settings'));
-    $table->define_headers(array($strname, $strcourses, $strversion, $strhide.'/'.$strshow, $strmultiple, $strdelete, $strsettings));
+    $table->define_columns(array('name', 'instances', 'version', 'hideshow', 'undeletable', 'delete', 'settings'));
+    $table->define_headers(array($strname, $strcourses, $strversion, $strhide.'/'.$strshow, $strprotecthdr, $strdelete, $strsettings));
     $table->define_baseurl($CFG->wwwroot.'/'.$CFG->admin.'/blocks.php');
-    $table->set_attribute('id', 'blocks');
-    $table->set_attribute('class', 'generaltable generalbox boxaligncenter boxwidthwide');
+    $table->set_attribute('class', 'compatibleblockstable blockstable generaltable');
     $table->setup();
+    $tablerows = array();
+
+    foreach ($blocks as $blockid=>$block) {
+        $blockname = $block->name;
+
+        if (!file_exists("$CFG->dirroot/blocks/$blockname/block_$blockname.php")) {
+            $blockobject  = false;
+            $strblockname = '<span class="notifyproblem">'.$blockname.' ('.get_string('missingfromdisk').')</span>';
+            $plugin = new stdClass();
+            $plugin->version = $block->version;
 
-    foreach ($blockbyname as $blockname => $blockid) {
+        } else {
+            $plugin = new stdClass();
+            $plugin->version = '???';
+            if (file_exists("$CFG->dirroot/blocks/$blockname/version.php")) {
+                include("$CFG->dirroot/blocks/$blockname/version.php");
+            }
 
-        $blockobject = $blockobjects[$blockid];
-        $block       = $blocks[$blockid];
+            if (!$blockobject  = block_instance($block->name)) {
+                $incompatible[] = $block;
+                continue;
+            }
+            $strblockname = get_string('pluginname', 'block_'.$blockname);
+        }
 
-        $delete = '<a href="blocks.php?delete='.$blockid.'&amp;sesskey='.$USER->sesskey.'">'.$strdelete.'</a>';
+        $delete = '<a href="blocks.php?delete='.$blockid.'&amp;sesskey='.sesskey().'">'.$strdelete.'</a>';
 
         $settings = ''; // By default, no configuration
-        if ($blockobject->has_config()) {
-            if (file_exists($CFG->dirroot.'/blocks/'.$block->name.'/settings.php')) {
+        if ($blockobject and $blockobject->has_config()) {
+            $blocksettings = admin_get_root()->locate('blocksetting' . $block->name);
+
+            if ($blocksettings instanceof admin_externalpage) {
+                $settings = '<a href="' . $blocksettings->url .  '">' . get_string('settings') . '</a>';
+            } else if ($blocksettings instanceof admin_settingpage) {
                 $settings = '<a href="'.$CFG->wwwroot.'/'.$CFG->admin.'/settings.php?section=blocksetting'.$block->name.'">'.$strsettings.'</a>';
             } else {
                 $settings = '<a href="block.php?block='.$blockid.'">'.$strsettings.'</a>';
@@ -178,15 +197,11 @@
         // MDL-11167, blocks can be placed on mymoodle, or the blogs page
         // and it should not show up on course search page
 
-        $totalcount = count_records('block_instance', 'blockid', $blockid);
-
-        $count = count_records_sql('SELECT COUNT(*)
-                                        FROM '.$CFG->prefix.'block_instance
-                                        WHERE blockid = '.$blockid.' AND
-                                        pagetype = \'course-view\'');
+        $totalcount = $DB->count_records('block_instances', array('blockname'=>$blockname));
+        $count = $DB->count_records('block_instances', array('blockname'=>$blockname, 'pagetypepattern'=>'course-view-*'));
 
         if ($count>0) {
-            $blocklist = "<a href=\"{$CFG->wwwroot}/course/search.php?blocklist=$blockid&amp;sesskey={$USER->sesskey}\" ";
+            $blocklist = "<a href=\"{$CFG->wwwroot}/course/search.php?blocklist=$blockid&amp;sesskey=".sesskey()."\" ";
             $blocklist .= "title=\"$strshowblockcourse\" >$totalcount</a>";
         }
         else {
@@ -194,41 +209,56 @@
         }
         $class = ''; // Nothing fancy, by default
 
-        if ($blocks[$blockid]->visible) {
-            $visible = '<a href="blocks.php?hide='.$blockid.'&amp;sesskey='.$USER->sesskey.'" title="'.$strhide.'">'.
-                       '<img src="'.$CFG->pixpath.'/i/hide.gif" class="icon" alt="'.$strhide.'" /></a>';
+        if (!$blockobject) {
+            // ignore
+            $visible = '';
+        } else if ($blocks[$blockid]->visible) {
+            $visible = '<a href="blocks.php?hide='.$blockid.'&amp;sesskey='.sesskey().'" title="'.$strhide.'">'.
+                       '<img src="'.$OUTPUT->pix_url('i/hide') . '" class="icon" alt="'.$strhide.'" /></a>';
         } else {
-            $visible = '<a href="blocks.php?show='.$blockid.'&amp;sesskey='.$USER->sesskey.'" title="'.$strshow.'">'.
-                       '<img src="'.$CFG->pixpath.'/i/show.gif" class="icon" alt="'.$strshow.'" /></a>';
+            $visible = '<a href="blocks.php?show='.$blockid.'&amp;sesskey='.sesskey().'" title="'.$strshow.'">'.
+                       '<img src="'.$OUTPUT->pix_url('i/show') . '" class="icon" alt="'.$strshow.'" /></a>';
             $class = ' class="dimmed_text"'; // Leading space required!
         }
-        if ($blockobject->instance_allow_multiple()) {
-            if($blocks[$blockid]->multiple) {
-                $multiple = '<span style="white-space: nowrap;">'.get_string('yes').' (<a href="blocks.php?multiple='.$blockid.'&amp;sesskey='.$USER->sesskey.'">'.get_string('change', 'admin').'</a>)</span>';
-            }
-            else {
-                $multiple = '<span style="white-space: nowrap;">'.get_string('no').' (<a href="blocks.php?multiple='.$blockid.'&amp;sesskey='.$USER->sesskey.'">'.get_string('change', 'admin').'</a>)</span>';
-            }
+
+        if ($block->version == $plugin->version) {
+            $version = $block->version;
+        } else {
+            $version = "$block->version ($plugin->version)";
         }
-        else {
-            $multiple = '';
+
+        if (!$blockobject) {
+            // ignore
+            $undeletable = '';
+        } else if (in_array($blockname, $undeletableblocktypes)) {
+            $undeletable = '<a href="blocks.php?unprotect='.$blockid.'&amp;sesskey='.sesskey().'" title="'.$strunprotect.'">'.
+                       '<img src="'.$OUTPUT->pix_url('t/unlock') . '" class="icon" alt="'.$strunprotect.'" /></a>';
+        } else {
+            $undeletable = '<a href="blocks.php?protect='.$blockid.'&amp;sesskey='.sesskey().'" title="'.$strprotect.'">'.
+                       '<img src="'.$OUTPUT->pix_url('t/unlock_gray') . '" class="icon" alt="'.$strprotect.'" /></a>';
         }
 
-        $table->add_data(array(
-            '<span'.$class.'>'.$blockobject->get_title().'</span>',
+        $row = array(
+            '<span'.$class.'>'.$strblockname.'</span>',
             $blocklist,
-            '<span'.$class.'>'.$blockobject->get_version().'</span>',
+            '<span'.$class.'>'.$version.'</span>',
             $visible,
-            $multiple,
+            $undeletable,
             $delete,
             $settings
-        ));
+        );
+        $tablerows[] = array(strip_tags($strblockname), $row); // first element will be used for sorting
+    }
+
+    textlib_get_instance()->asort($tablerows);
+    foreach ($tablerows as $row) {
+        $table->add_data($row[1]);
     }
 
     $table->print_html();
 
-    if(!empty($incompatible)) {
-        print_heading(get_string('incompatibleblocks', 'admin'));
+    if (!empty($incompatible)) {
+        echo $OUTPUT->heading(get_string('incompatibleblocks', 'blockstable', 'admin'));
 
         $table = new flexible_table('admin-blocks-incompatible');
 
@@ -236,20 +266,19 @@
         $table->define_headers(array($strname, $strdelete));
         $table->define_baseurl($CFG->wwwroot.'/'.$CFG->admin.'/blocks.php');
 
-        $table->set_attribute('id', 'incompatible');
-        $table->set_attribute('class', 'generaltable generalbox boxaligncenter boxwidthwide');
+        $table->set_attribute('class', 'incompatibleblockstable generaltable');
 
         $table->setup();
 
         foreach ($incompatible as $block) {
             $table->add_data(array(
                 $block->name,
-                '<a href="blocks.php?delete='.$block->id.'&amp;sesskey='.$USER->sesskey.'">'.$strdelete.'</a>',
+                '<a href="blocks.php?delete='.$block->id.'&amp;sesskey='.sesskey().'">'.$strdelete.'</a>',
             ));
         }
         $table->print_html();
     }
 
-    admin_externalpage_print_footer();
+    echo $OUTPUT->footer();
+
 
-?>
