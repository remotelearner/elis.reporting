diff --git a/admin/user.php b/admin/user.php
index 3a7b1f9..2827ccf 100644
--- a/admin/user.php
+++ b/admin/user.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 
     require_once('../config.php');
     require_once($CFG->libdir.'/adminlib.php');
@@ -22,7 +22,7 @@
     $site = get_site();
 
     if (!has_capability('moodle/user:update', $sitecontext) and !has_capability('moodle/user:delete', $sitecontext)) {
-        error('You do not have the required permission to edit/delete users.');
+        print_error('nopermissions', 'error', '', 'edit/delete users');
     }
 
     $stredit   = get_string('edit');
@@ -36,89 +36,85 @@
         $securewwwroot = str_replace('http:','https:',$CFG->wwwroot);
     }
 
-    admin_externalpage_print_header();
+    $returnurl = "$CFG->wwwroot/$CFG->admin/user.php";
 
     if ($confirmuser and confirm_sesskey()) {
-        if (!$user = get_record('user', 'id', $confirmuser)) {
-            error("No such user!", '', true);
+        if (!$user = $DB->get_record('user', array('id'=>$confirmuser))) {
+            print_error('nousers');
         }
 
         $auth = get_auth_plugin($user->auth);
 
-        $result = $auth->user_confirm(addslashes($user->username), addslashes($user->secret));
+        $result = $auth->user_confirm($user->username, $user->secret);
 
         if ($result == AUTH_CONFIRM_OK or $result == AUTH_CONFIRM_ALREADY) {
-            notify(get_string('userconfirmed', '', fullname($user, true)) );
+            redirect($returnurl);
         } else {
-            notify(get_string('usernotconfirmed', '', fullname($user, true)));
+            echo $OUTPUT->header();
+            redirect($returnurl, get_string('usernotconfirmed', '', fullname($user, true)));
         }
 
     } else if ($delete and confirm_sesskey()) {              // Delete a selected user, after confirmation
 
-        if (!has_capability('moodle/user:delete', $sitecontext)) {
-            error('You do not have the required permission to delete a user.');
-        }
+        require_capability('moodle/user:delete', $sitecontext);
 
-        if (!$user = get_record('user', 'id', $delete)) {
-            error("No such user!", '', true);
-        }
+        $user = $DB->get_record('user', array('id'=>$delete), '*', MUST_EXIST);
 
-        if (is_primary_admin($user->id)) {
-            error("You are not allowed to delete the primary admin user!", '', true);
+        if (is_siteadmin($user->id)) {
+            print_error('useradminodelete', 'error');
         }
 
         if ($confirm != md5($delete)) {
+            echo $OUTPUT->header();
             $fullname = fullname($user, true);
-            print_heading(get_string('deleteuser', 'admin'));
+            echo $OUTPUT->heading(get_string('deleteuser', 'admin'));
             $optionsyes = array('delete'=>$delete, 'confirm'=>md5($delete), 'sesskey'=>sesskey());
-            notice_yesno(get_string('deletecheckfull', '', "'$fullname'"), 'user.php', 'user.php', $optionsyes, NULL, 'post', 'get');
-            admin_externalpage_print_footer();
+            echo $OUTPUT->confirm(get_string('deletecheckfull', '', "'$fullname'"), new moodle_url('user.php', $optionsyes), 'user.php');
+            echo $OUTPUT->footer();
             die;
         } else if (data_submitted() and !$user->deleted) {
             if (delete_user($user)) {
-                notify(get_string('deletedactivity', '', fullname($user, true)) );
+                session_gc(); // remove stale sessions
+                redirect($returnurl);
             } else {
-                notify(get_string('deletednot', '', fullname($user, true)));
+                session_gc(); // remove stale sessions
+                echo $OUTPUT->header();
+                echo $OUTPUT->notification($returnurl, get_string('deletednot', '', fullname($user, true)));
             }
         }
     } else if ($acl and confirm_sesskey()) {
         if (!has_capability('moodle/user:delete', $sitecontext)) {
             // TODO: this should be under a separate capability
-            error('You are not permitted to modify the MNET access control list.');
+            print_error('nopermissions', 'error', '', 'modify the NMET access control list');
         }
-        if (!$user = get_record('user', 'id', $acl)) {
-            error("No such user.", '', true);
+        if (!$user = $DB->get_record('user', array('id'=>$acl))) {
+            print_error('nousers', 'error');
         }
         if (!is_mnet_remote_user($user)) {
-            error('Users in the MNET access control list must be remote MNET users.');
+            print_error('usermustbemnet', 'error');
         }
         $accessctrl = strtolower(required_param('accessctrl', PARAM_ALPHA));
         if ($accessctrl != 'allow' and $accessctrl != 'deny') {
-            error('Invalid access parameter.');
+            print_error('invalidaccessparameter', 'error');
         }
-        $aclrecord = get_record('mnet_sso_access_control', 'username', $user->username, 'mnet_host_id', $user->mnethostid);
+        $aclrecord = $DB->get_record('mnet_sso_access_control', array('username'=>$user->username, 'mnet_host_id'=>$user->mnethostid));
         if (empty($aclrecord)) {
-            $aclrecord = new object();
+            $aclrecord = new stdClass();
             $aclrecord->mnet_host_id = $user->mnethostid;
             $aclrecord->username = $user->username;
             $aclrecord->accessctrl = $accessctrl;
-            if (!insert_record('mnet_sso_access_control', $aclrecord)) {
-                error("Database error - Couldn't modify the MNET access control list.", '', true);
-            }
+            $DB->insert_record('mnet_sso_access_control', $aclrecord);
         } else {
             $aclrecord->accessctrl = $accessctrl;
-            if (!update_record('mnet_sso_access_control', $aclrecord)) {
-                error("Database error - Couldn't modify the MNET access control list.", '', true);
+            $DB->update_record('mnet_sso_access_control', $aclrecord);
             }
-        }
-        $mnethosts = get_records('mnet_host', '', '', 'id', 'id,wwwroot,name');
-        notify("MNET access control list updated: username '$user->username' from host '"
-                . $mnethosts[$user->mnethostid]->name
-                . "' access now set to '$accessctrl'.");
+        $mnethosts = $DB->get_records('mnet_host', null, 'id', 'id,wwwroot,name');
+        redirect($returnurl);
     }
 
     // create the user filter form
     $ufiltering = new user_filtering();
+    echo $OUTPUT->header();
 
     // Carry on with the user listing
 
@@ -140,7 +136,7 @@
             } else {
                 $columnicon = $dir == "ASC" ? "down":"up";
             }
-            $columnicon = " <img src=\"$CFG->pixpath/t/$columnicon.gif\" alt=\"\" />";
+            $columnicon = " <img src=\"" . $OUTPUT->pix_url('t/' . $columnicon) . "\" alt=\"\" />";
 
         }
         $$column = "<a href=\"user.php?sort=$column&amp;dir=$columndir\">".$string[$column]."</a>$columnicon";
@@ -150,42 +146,41 @@
         $sort = "firstname";
     }
 
-    $extrasql = $ufiltering->get_sql_filter();
-    $users = get_users_listing($sort, $dir, $page*$perpage, $perpage, '', '', '', $extrasql);
+    list($extrasql, $params) = $ufiltering->get_sql_filter();
+    $users = get_users_listing($sort, $dir, $page*$perpage, $perpage, '', '', '', $extrasql, $params);
     $usercount = get_users(false);
-    $usersearchcount = get_users(false, '', true, "", "", '', '', '', '', '*', $extrasql);
+    $usersearchcount = get_users(false, '', true, null, "", '', '', '', '', '*', $extrasql, $params);
 
     if ($extrasql !== '') {
-        print_heading("$usersearchcount / $usercount ".get_string('users'));
+        echo $OUTPUT->heading("$usersearchcount / $usercount ".get_string('users'));
         $usercount = $usersearchcount;
     } else {
-        print_heading("$usercount ".get_string('users'));
+        echo $OUTPUT->heading("$usercount ".get_string('users'));
     }
 
-    $alphabet = explode(',', get_string('alphabet'));
     $strall = get_string('all');
 
-    print_paging_bar($usercount, $page, $perpage,
-            "user.php?sort=$sort&amp;dir=$dir&amp;perpage=$perpage&amp;");
+    $baseurl = new moodle_url('user.php', array('sort' => $sort, 'dir' => $dir, 'perpage' => $perpage));
+    echo $OUTPUT->paging_bar($usercount, $page, $perpage, $baseurl);
 
     flush();
 
 
     if (!$users) {
         $match = array();
-        print_heading(get_string('nousersfound'));
+        echo $OUTPUT->heading(get_string('nousersfound'));
 
         $table = NULL;
 
     } else {
 
-        $countries = get_list_of_countries();
+        $countries = get_string_manager()->get_list_of_countries(false);
         if (empty($mnethosts)) {
-            $mnethosts = get_records('mnet_host', '', '', 'id', 'id,wwwroot,name');
+            $mnethosts = $DB->get_records('mnet_host', null, 'id', 'id,wwwroot,name');
         }
 
         foreach ($users as $key => $user) {
-            if (!empty($user->country)) {
+            if (isset($countries[$user->country])) {
                 $users[$key]->country = $countries[$user->country];
             }
         }
@@ -200,9 +195,7 @@
             $users = $nusers;
         }
 
-        $mainadmin = get_admin();
-
-        $override = new object();
+        $override = new stdClass();
         $override->firstname = 'firstname';
         $override->lastname = 'lastname';
         $fullnamelanguage = get_string('fullnamedisplay', '', $override);
@@ -213,28 +206,30 @@
         } else { // ($CFG->fullnamedisplay == 'language' and $fullnamelanguage == 'lastname firstname') 
             $fullnamedisplay = "$lastname / $firstname";
         }
+
+        $table = new html_table();
         $table->head = array ($fullnamedisplay, $email, $city, $country, $lastaccess, "", "", "");
         $table->align = array ("left", "left", "left", "left", "left", "center", "center", "center");
         $table->width = "95%";
         foreach ($users as $user) {
-            if ($user->username == 'guest') {
-                continue; // do not dispaly dummy new user and guest here
+            if (isguestuser($user)) {
+                continue; // do not display guest here
             }
 
-            if ($user->id == $USER->id) {
+            if ($user->id == $USER->id or is_siteadmin($user)) {
                 $deletebutton = "";
             } else {
                 if (has_capability('moodle/user:delete', $sitecontext)) {
-                    $deletebutton = "<a href=\"user.php?delete=$user->id&amp;sesskey=$USER->sesskey\">$strdelete</a>";
+                    $deletebutton = "<a href=\"user.php?delete=$user->id&amp;sesskey=".sesskey()."\">$strdelete</a>";
                 } else {
                     $deletebutton ="";
                 }
             }
 
-            if (has_capability('moodle/user:update', $sitecontext) and ($user->id==$USER->id or $user->id != $mainadmin->id) and !is_mnet_remote_user($user)) {
+            if (has_capability('moodle/user:update', $sitecontext) and (is_siteadmin($USER) or !is_siteadmin($user)) and !is_mnet_remote_user($user)) {
                 $editbutton = "<a href=\"$securewwwroot/user/editadvanced.php?id=$user->id&amp;course=$site->id\">$stredit</a>";
                 if ($user->confirmed == 0) {
-                    $confirmbutton = "<a href=\"user.php?confirmuser=$user->id&amp;sesskey=$USER->sesskey\">" . get_string('confirm') . "</a>";
+                    $confirmbutton = "<a href=\"user.php?confirmuser=$user->id&amp;sesskey=".sesskey()."\">" . get_string('confirm') . "</a>";
                 } else {
                     $confirmbutton = "";
                 }
@@ -250,7 +245,7 @@
             // for remote users, shuffle columns around and display MNET stuff
             if (is_mnet_remote_user($user)) {
                 $accessctrl = 'allow';
-                if ($acl = get_record('mnet_sso_access_control', 'username', $user->username, 'mnet_host_id', $user->mnethostid)) {
+                if ($acl = $DB->get_record('mnet_sso_access_control', array('username'=>$user->username, 'mnet_host_id'=>$user->mnethostid))) {
                     $accessctrl = $acl->accessctrl;
                 }
                 $changeaccessto = ($accessctrl == 'deny' ? 'allow' : 'deny');
@@ -261,7 +256,7 @@
                 $deletebutton = get_string($accessctrl, 'mnet');
                 if (has_capability('moodle/user:delete', $sitecontext)) {
                     // TODO: this should be under a separate capability
-                    $deletebutton .= " (<a href=\"?acl={$user->id}&amp;accessctrl=$changeaccessto&amp;sesskey={$USER->sesskey}\">"
+                    $deletebutton .= " (<a href=\"?acl={$user->id}&amp;accessctrl=$changeaccessto&amp;sesskey=".sesskey()."\">"
                             . get_string($changeaccessto, 'mnet') . " access</a>)";
                 }
                 // mnet info in edit column
@@ -293,18 +288,17 @@
     $ufiltering->display_active();
 
     if (has_capability('moodle/user:create', $sitecontext)) {
-        print_heading('<a href="'.$securewwwroot.'/user/editadvanced.php?id=-1">'.get_string('addnewuser').'</a>');
+        echo $OUTPUT->heading('<a href="'.$securewwwroot.'/user/editadvanced.php?id=-1">'.get_string('addnewuser').'</a>');
     }
     if (!empty($table)) {
-        print_table($table);
-        print_paging_bar($usercount, $page, $perpage,
-                         "user.php?sort=$sort&amp;dir=$dir&amp;perpage=$perpage&amp;");
+        echo html_writer::table($table);
+        echo $OUTPUT->paging_bar($usercount, $page, $perpage, $baseurl);
         if (has_capability('moodle/user:create', $sitecontext)) {
-            print_heading('<a href="'.$securewwwroot.'/user/editadvanced.php?id=-1">'.get_string('addnewuser').'</a>');
+            echo $OUTPUT->heading('<a href="'.$securewwwroot.'/user/editadvanced.php?id=-1">'.get_string('addnewuser').'</a>');
         }
     }
 
-    admin_externalpage_print_footer();
+    echo $OUTPUT->footer();
+
 
 
-?>
