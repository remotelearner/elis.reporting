diff --git a/lib/form/radio.php b/lib/form/radio.php
index 66384bd..3dc03a4 100644
--- a/lib/form/radio.php
+++ b/lib/form/radio.php
@@ -25,18 +25,7 @@ class MoodleQuickForm_radio extends HTML_QuickForm_radio{
      * @param string $function function name to call to get html
      */
     function setHelpButton($helpbuttonargs, $function='helpbutton'){
-        if (!is_array($helpbuttonargs)){
-            $helpbuttonargs=array($helpbuttonargs);
-        }else{
-            $helpbuttonargs=$helpbuttonargs;
-        }
-        //we do this to to return html instead of printing it
-        //without having to specify it in every call to make a button.
-        if ('helpbutton' == $function){
-            $defaultargs=array('', '', 'moodle', true, false, '', true);
-            $helpbuttonargs=$helpbuttonargs + $defaultargs ;
-        }
-        $this->_helpbutton=call_user_func_array($function, $helpbuttonargs);
+        debugging('component setHelpButton() is not used any more, please use $mform->setHelpButton() instead');
     }
     /**
      * get html for help button
@@ -77,9 +66,23 @@ class MoodleQuickForm_radio extends HTML_QuickForm_radio{
             return 'default';
         }
     }
+    /**
+     * Returns the disabled field. Accessibility: the return "( )" from parent
+     * class is not acceptable for screenreader users, and we DO want a label.
+     * @return string
+     */
+    function getFrozenHtml()
+    {
+        $output = '<input type="radio" disabled="disabled" id="'.$this->getAttribute('id').'" ';
+        if ($this->getChecked()) {
+            $output .= 'checked="checked" />'.$this->_getPersistantData();
+        } else {
+            $output .= '/>';
+        }
+        return $output;
+    }
     function toHtml()
     {
         return '<span>' . parent::toHtml() . '</span>';
     }
 }
-?>
\ No newline at end of file
