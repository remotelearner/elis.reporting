diff --git a/lib/adodb/drivers/adodb-informix72.inc.php b/lib/adodb/drivers/adodb-informix72.inc.php
index 59cf39f..1c9aec6 100644
--- a/lib/adodb/drivers/adodb-informix72.inc.php
+++ b/lib/adodb/drivers/adodb-informix72.inc.php
@@ -1,6 +1,6 @@
 <?php
 /*
-V4.98 13 Feb 2008  (c) 2000-2008 John Lim. All rights reserved.
+V5.11 5 May 2010   (c) 2000-2010 John Lim. All rights reserved.
   Released under both BSD license and Lesser GPL library license.
   Whenever there is any discrepancy between the two licenses,
   the BSD license will take precedence.
@@ -123,10 +123,10 @@ class ADODB_informix72 extends ADOConnection {
 		return true;
 	}
 
-	function RowLock($tables,$where,$flds='1 as ignore')
+	function RowLock($tables,$where,$col='1 as adodbignore')
 	{
 		if ($this->_autocommit) $this->BeginTrans();
-		return $this->GetOne("select $flds from $tables where $where for update");
+		return $this->GetOne("select $col from $tables where $where for update");
 	}
 
 	/*	Returns: the last error message from previous database operation
@@ -147,7 +147,7 @@ class ADODB_informix72 extends ADOConnection {
 	}
 
    
-    function &MetaColumns($table)
+    function MetaColumns($table, $normalize=true)
 	{
 	global $ADODB_FETCH_MODE;
 	
@@ -199,7 +199,7 @@ class ADODB_informix72 extends ADOConnection {
 		return $false;
 	}
 	
-   function &xMetaColumns($table)
+   function xMetaColumns($table)
    {
 		return ADOConnection::MetaColumns($table,false);
    }
@@ -219,7 +219,7 @@ class ADODB_informix72 extends ADOConnection {
 
 		$rs = $this->Execute($sql);
 		if (!$rs || $rs->EOF)  return false;
-		$arr =& $rs->GetArray();
+		$arr = $rs->GetArray();
 		$a = array();
 		foreach($arr as $v) {
 			$coldest=$this->metaColumnNames($v["tabname"]);
@@ -284,7 +284,7 @@ class ADODB_informix72 extends ADOConnection {
 	}
 */
 	// returns query ID if successful, otherwise false
-	function _query($sql,$inputarr)
+	function _query($sql,$inputarr=false)
 	{
 	global $ADODB_COUNTRECS;
 	
@@ -362,14 +362,14 @@ class ADORecordset_informix72 extends ADORecordSet {
 		Get column information in the Recordset object. fetchField() can be used in order to obtain information about
 		fields in a certain query result. If the field offset isn't specified, the next field that wasn't yet retrieved by
 		fetchField() is retrieved.	*/
-	function &FetchField($fieldOffset = -1)
+	function FetchField($fieldOffset = -1)
 	{
 		if (empty($this->_fieldprops)) {
 			$fp = ifx_fieldproperties($this->_queryID);
 			foreach($fp as $k => $v) {
 				$o = new ADOFieldObject;
 				$o->name = $k;
-				$arr = split(';',$v); //"SQLTYPE;length;precision;scale;ISNULLABLE"
+				$arr = explode(';',$v); //"SQLTYPE;length;precision;scale;ISNULLABLE"
 				$o->type = $arr[0];
 				$o->max_length = $arr[1];
 				$this->_fieldprops[] = $o;
