diff --git a/lib/editor/htmlarea/htmlarea.php b/lib/editor/htmlarea/htmlarea.php
index f7942b6..30395a7 100644
--- a/lib/editor/htmlarea/htmlarea.php
+++ b/lib/editor/htmlarea/htmlarea.php
@@ -173,7 +173,14 @@ HTMLArea.Config = function () {
           "insertorderedlist", "insertunorderedlist", "outdent", "indent", "separator",
           "forecolor", "hilitecolor", "separator",
           "inserthorizontalrule", "createanchor", "createlink", "unlink", "nolink", "separator",
-          "insertimage", "inserttable",
+          "insertimage",
+          <?php if(defined('NANOGONG') && NANOGONG) {
+                echo '"insertsound",';
+          }?>
+          "inserttable",
+          <?php if(defined('DRAGMATH') && DRAGMATH ) {
+                echo '"insertdragmath",';
+          }?>
           "insertsmile", "insertchar", "search_replace",
           <?php if (!empty($CFG->aspellpath) && file_exists($CFG->aspellpath) && !empty($CFG->editorspelling)) {
               echo '"separator","spellcheck",';
@@ -263,6 +270,9 @@ HTMLArea.Config = function () {
         unlink: [ "Remove Link", "ed_unlink.gif", false, function(e) {e.execCommand("unlink");} ],
         nolink: [ "No link", "ed_nolink.gif", false, function(e) {e.execCommand("nolink");} ],
         insertimage: [ "Insert/Modify Image", "ed_image.gif", false, function(e) {e.execCommand("insertimage");} ],
+        <?php if(defined('NANOGONG') && NANOGONG) {
+            echo 'insertsound: [ "Insert/Modify Sound", "'.NANOGONG.'/images/ed_sound.gif", false, function(e) {e.execCommand("insertsound");} ],';
+        }?>
         inserttable: [ "Insert Table", "insert_table.gif", false, function(e) {e.execCommand("inserttable");} ],
         htmlmode: [ "Toggle HTML Source", "ed_html.gif", true, function(e) {e.execCommand("htmlmode");} ],
         popupeditor: [ "Enlarge Editor", "fullscreen_maximize.gif", true, function(e) {e.execCommand("popupeditor");} ],
@@ -277,6 +287,9 @@ HTMLArea.Config = function () {
             echo 'spellcheck: ["Spell-check", "spell-check.gif", false, spellClickHandler ],'."\n";
         }?>
         insertsmile: ["Insert Smiley", "em.icon.smile.gif", false, function(e) {e.execCommand("insertsmile");} ],
+        <?php if(defined('DRAGMATH') && DRAGMATH) {
+            echo 'insertdragmath: ["Insert DragMath", "'.DRAGMATH.'/images/em.icon.dragmath.gif", false, function(e) {e.execCommand("insertdragmath");} ],';
+        }?>
         insertchar: [ "Insert Char", "icon_ins_char.gif", false, function(e) {e.execCommand("insertchar");} ],
         search_replace: [ "Search and replace", "ed_replace.gif", false, function(e) {e.execCommand("searchandreplace");} ]
     };
@@ -745,6 +758,9 @@ HTMLArea.prototype.generate = function () {
         html = html.replace(/<nolink>/gi, '<span class="nolink">').
                     replace(/<\/nolink>/gi, '</span>');
         html += "</body>\n";
+        <?php if(defined('NANOGONG') && NANOGONG) {
+            echo 'html = editor.translateHTML(html, "textmode");';
+        }?>
         html += "</html>";
     } else {
         html = editor._textArea.value;
@@ -1220,6 +1236,10 @@ HTMLArea.prototype.updateToolbar = function(noStatus) {
                     return false;
                 };
                 var txt = el.tagName.toLowerCase();
+                <?php if(defined('NANOGONG') && NANOGONG) { ?>
+                if (txt == "img" && el.getAttribute("url"))
+                    txt = "nanogong";
+                <?php } ?>
                 a.title = el.style.cssText;
                 if (el.id) {
                     txt += "#" + el.id;
@@ -1631,7 +1651,11 @@ HTMLArea.prototype._insertImage = function(image) {
     var outparam = null;
     if (typeof image == "undefined") {
         image = this.getParentElement();
+        <?php if(defined('NANOGONG') && NANOGONG) { ?>
+        if (image && (!/^img$/i.test(image.tagName) || image.getAttribute("url")))
+        <?php } else { ?>
         if (image && !/^img$/i.test(image.tagName))
+        <?php } ?>
             image = null;
     }
     if (image) outparam = {
@@ -1706,6 +1730,53 @@ HTMLArea.prototype._insertImage = function(image) {
     }, outparam);
 };
 
+<?php if(defined('NANOGONG') && NANOGONG) { ?>
+
+// Added for NanoGong HTML editor and filter
+// Called when the user clicks on "InsertSound" button.  If a sound is already
+// there, it will just modify it's properties.
+HTMLArea.prototype._insertSound = function(sound) {
+
+    // Make sure that editor has focus
+    this.focusEditor();
+    var editor = this;  // for nested functions
+    var outparam = null;
+    if (typeof sound == "undefined") {
+        sound = this.getParentElement();
+        if (sound && !/^img/i.test(sound.tagName) && !sound.getAttribute("url"))
+            sound = null;
+    }
+    if (sound) outparam = {
+        f_caption   : sound.getAttribute("caption"),
+        f_sndurl    : sound.getAttribute("url")
+    };
+    this._popupDialog("<?php echo NANOGONG; ?>/popups/insert_sound.php?id=<?php echo $id; ?>", function(param) {
+        if (!param) {   // user must have pressed Cancel
+            return false;
+        }
+        var snd = sound;
+        if (!snd) {
+            var sel = editor._getSelection();
+            var range = editor._createRange(sel);
+            var snd = editor._doc.createElement("img");
+            snd.setAttribute("src", editor.imgURL("images/<?php echo NANOGONG; ?>/images/ed_sound.gif"));
+            snd.setAttribute("alt", "Sound object: " + param.f_caption);
+            snd.setAttribute("caption", param.f_caption);
+            snd.setAttribute("url", param.f_sndurl);
+            if (HTMLArea.is_ie) {
+                range.pasteHTML(snd.outerHTML);
+            } else {
+                editor.insertNodeAtSelection(snd);
+            }
+        } else {
+            snd.setAttribute("caption", param.f_caption);
+            snd.setAttribute("url", param.f_sndurl);
+        }
+    }, outparam);
+};
+
+<?php } ?>
+
 // Called when the user clicks the Insert Table button
 HTMLArea.prototype._insertTable = function() {
     var sel = this._getSelection();
@@ -1783,6 +1854,30 @@ HTMLArea.prototype._insertSmile = function() {
     }, null);
 };
 
+<?php if(defined('DRAGMATH') && DRAGMATH) { ?>
+
+/// Moodle hack - insertdragmath
+HTMLArea.prototype._insertDragMath = function() {
+    // Make sure that editor has focus
+    this.focusEditor();
+    var sel = this._getSelection();
+    var range = this._createRange(sel);
+    var editor = this;  // for nested functions
+    this._popupDialog("<?php echo DRAGMATH; ?>/popups/dlg_ins_dragmath.php?id=<?php echo $id; ?>", function(imgString) {
+       if(!imgString) {
+            return false;
+        }
+        if (HTMLArea.is_ie) {
+            range.pasteHTML(imgString);
+        } else {
+            editor.insertHTML(imgString);
+        }
+        return true;
+    }, null);
+};
+
+<?php } ?>
+
 HTMLArea.prototype._insertChar = function() {
     var sel = this._getSelection();
     var range = this._createRange(sel);
@@ -2091,8 +2186,14 @@ HTMLArea.prototype.execCommand = function(cmdID, UI, param) {
             this._doc.execCommand(cmdID, UI, param);
         break;
         case "inserttable": this._insertTable(); break;
+        <?php if(defined('NANOGONG') && NANOGONG) {
+            echo 'case "insertsound": this._insertSound(); break;';
+        }?>
         case "insertimage": this._insertImage(); break;
         case "insertsmile": this._insertSmile(); break;
+        <?php if(defined('DRAGMATH') && DRAGMATH) {
+            echo 'case "insertdragmath": this._insertDragMath(); break;';
+        }?>
         case "insertchar": this._insertChar(); break;
         case "searchandreplace": this._searchReplace(); break;
         case "about"    : this._popupDialog("about.html", null, this); break;
@@ -2270,6 +2371,9 @@ HTMLArea.prototype._editorEvent = function(ev) {
                 case 'd': cmd = "unlink"; break;
                 case 'n': cmd = "nolink"; break;
                 case 'i': cmd = 'insertimage'; break;
+                <?php if(defined('NANOGONG') && NANOGONG) {
+                    echo "case 'g': cmd = 'insertsound'; break;";
+                }?>
                 case 't': cmd = 'inserttable'; break;
                 case 's': cmd = 'insertsmile'; break;
                 case 'c': cmd = 'insertchar'; break;
@@ -2307,17 +2411,95 @@ HTMLArea.prototype._editorEvent = function(ev) {
     }, 50);
 };
 
+<?php if(defined('NANOGONG') && NANOGONG) { ?>
+// Added for NanoGong HTML editor and filter
+// translate the html for special tags
+HTMLArea.prototype.translateHTML = function(html, mode) {
+    switch (mode) {
+    case "wysiwyg" :
+        var thtml = "";
+        var re = /\<img .*?\>/gi;
+        var result, tag;
+        var lastIndex = 0;
+        while ((result = re.exec(html)) != null) {
+            thtml += html.substring(lastIndex, result.index);
+            lastIndex = re.lastIndex;
+            tag = "" + result;
+            if (!/url=\"(.*?)\"/i.test(tag)) {
+                thtml += tag;
+                continue;
+            }
+            url = RegExp.$1;
+            if (/caption=\"(.*?)\"/i.test(tag))
+                caption = RegExp.$1;
+            else
+                caption = "";
+
+            if (caption == null || caption == "")
+                thtml += "<nanogong url=\"" + url + "\" />";
+            else
+                thtml += "<nanogong caption=\"" + caption + "\" url=\"" + url + "\" />";
+        }
+        thtml += html.substring(lastIndex, html.length);
+        return thtml;
+    case "textmode" :
+        var snd = this._doc.createElement("img");
+        snd.setAttribute("src", this.imgURL("images/<?echo NANOGONG ?>/images/ed_sound.gif"));
+        var container = this._doc.createElement("div");
+        container.appendChild(snd);
+
+        var thtml = "";
+        var re = /\<nanogong .*?\>/gi;
+        var result, tag;
+        var lastIndex = 0;
+        while ((result = re.exec(html)) != null) {
+            thtml += html.substring(lastIndex, result.index);
+            lastIndex = re.lastIndex;
+            tag = "" + result;
+            if (!/url=\"(.*?)\"/i.test(tag)) continue;
+            url = RegExp.$1;
+            if (/caption=\"(.*?)\"/i.test(tag))
+                caption = RegExp.$1;
+            else
+                caption = "";
+
+            if (caption == null || caption == "") {
+                snd.setAttribute("alt", "Sound object");
+                snd.setAttribute("caption", "");
+            }
+            else {
+                snd.setAttribute("alt", "Sound object: " + caption);
+                snd.setAttribute("caption", caption);
+            }
+            snd.setAttribute("url", url);
+            thtml += container.innerHTML;
+        }
+        thtml += html.substring(lastIndex, html.length);
+        return thtml;
+    }
+}
+<?php } ?>
 
 // retrieve the HTML
 HTMLArea.prototype.getHTML = function() {
     switch (this._editMode) {
         case "wysiwyg"  :
+        <?php if(defined('NANOGONG') && NANOGONG) { ?>
+        if (!this.config.fullPage) {
+            return this.translateHTML(HTMLArea.getHTML(this._doc.body, false, this), "wysiwyg");
+        } else {
+            return this.translateHTML(this.doctype + "\n" + HTMLArea.getHTML(this._doc.documentElement, true, this), "wysiwyg");
+        }
+        case "textmode" :
+        return this.translateHTML(this._textArea.value, "textmode");
+        <?php } else { ?>
         if (!this.config.fullPage) {
             return HTMLArea.getHTML(this._doc.body, false, this);
         } else
             return this.doctype + "\n" + HTMLArea.getHTML(this._doc.documentElement, true, this);
         case "textmode" : return this._textArea.value;
         default     : alert("Mode <" + mode + "> not defined!");
+	<?php } ?>
     }
     return false;
 };
@@ -2555,7 +2737,11 @@ HTMLArea.isStandardTag = function (el) {
     return HTMLArea.RE_msietag.test(el.tagName);
 };
 HTMLArea.isSingleTag = function (el) {
+    <?php if(defined('NANOGONG') && NANOGONG) { ?>
+    var re = /^(br|hr|img|nanogong|input|link|meta|param|embed|area)$/i;
+    <?php } else { ?>
     var re = /^(br|hr|img|input|link|meta|param|embed|area)$/i;
+    <?php } ?>
     return re.test(el.tagName.toLowerCase());
 };
 // Retrieves the HTML code from the given node.  This is a replacement for
@@ -2783,7 +2969,11 @@ HTMLArea.indent = function(s, sindentChar) {
     /*0*/  new RegExp().compile(/<\/?(div|p|h[1-6]|table|tr|td|th|ul|ol|li|blockquote|object|br|hr|img|embed|param|pre|script|html|head|body|meta|link|title|area)[^>]*>/g),
     /*1*/  new RegExp().compile(/<\/(div|p|h[1-6]|table|tr|td|th|ul|ol|li|blockquote|object|html|head|body|script)( [^>]*)?>/g),//blocklevel closing tag
     /*2*/  new RegExp().compile(/<(div|p|h[1-6]|table|tr|td|th|ul|ol|li|blockquote|object|html|head|body|script)( [^>]*)?>/g),//blocklevel opening tag
+    <?php if(defined('NANOGONG') && NANOGONG) { ?>
+    /*3*/  new RegExp().compile(/<(br|hr|img|nanogong|embed|param|pre|meta|link|title|area)[^>]*>/g),//singlet tag
+    <?php } else { ?>
     /*3*/  new RegExp().compile(/<(br|hr|img|embed|param|pre|meta|link|title|area)[^>]*>/g),//singlet tag
+    <?php } ?>
     /*4*/  new RegExp().compile(/(^|<\/(pre|script)>)(\s|[^\s])*?(<(pre|script)[^>]*>|$)/g),//find content NOT inside pre and script tags
     /*5*/  new RegExp().compile(/(<pre[^>]*>)(\s|[^\s])*?(<\/pre>)/g),//find content inside pre tags
     /*6*/  new RegExp().compile(/(^|<!--(\s|\S)*?-->)((\s|\S)*?)(?=<!--(\s|\S)*?-->|$)/g),//find content NOT inside comments
