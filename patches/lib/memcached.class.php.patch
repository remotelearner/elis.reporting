diff --git a/lib/memcached.class.php b/lib/memcached.class.php
index d58ce0c..35ac0f4 100644
--- a/lib/memcached.class.php
+++ b/lib/memcached.class.php
@@ -1,21 +1,48 @@
 <?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
 /**
- ** This class abstracts PHP's PECL memcached
- ** API to provide
- ** 
- ** - get()
- ** - set()
- ** - delete()
- ** - getforfill()
- ** - releaseforfill()
- **
- ** Author: Martin Langhoff <martin@catalyst.net.nz>
- **
- ** Note: do NOT store booleans here. With memcached, a false value 
- ** is indistinguisable from a "not found in cache" response. 
- **/
+ * @package    core
+ * @subpackage lib
+ * @copyright  Martin Langhoff <martin@catalyst.net.nz>
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
+defined('MOODLE_INTERNAL') || die();
 
+/**
+ * This class abstracts PHP's PECL memcached
+ * API to provide
+ *
+ * - get()
+ * - set()
+ * - delete()
+ * - getforfill()
+ * - releaseforfill()
+ *
+ * Author: Martin Langhoff <martin@catalyst.net.nz>
+ *
+ * Note: do NOT store booleans here. With memcached, a false value
+ * is indistinguisable from a "not found in cache" response.
+ *
+ * @package   moodlecore
+ * @copyright Martin Langhoff <martin@catalyst.net.nz>
+ * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ **/
 class memcached {
 
     function memcached() {
@@ -27,7 +54,7 @@ class memcached {
         }
         $this->_cache = new Memcache;
 
-        $hosts = split(',', $CFG->memcachedhosts);
+        $hosts = explode(',', $CFG->memcachedhosts);
         if (count($hosts) === 1 && !empty($CFG->memcachedpconn)) {
             // the faster pconnect is only available
             // for single-server setups
@@ -131,5 +158,3 @@ class memcached {
         return $this->_cache->delete($this->prefix . $key . '_forfill');
     }
 }
-
-?>
\ No newline at end of file
