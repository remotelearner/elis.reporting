diff --git a/lib/recaptchalib.php b/lib/recaptchalib.php
index 26c0583..82fb9ba 100644
--- a/lib/recaptchalib.php
+++ b/lib/recaptchalib.php
@@ -1,12 +1,13 @@
 <?php
-/*
+
+/**
  * This is a PHP library that handles calling reCAPTCHA.
  *    - Documentation and latest version
  *          {@link http://code.google.com/apis/recaptcha/docs/php.html}
  *    - Get a reCAPTCHA API Key
  *          {@link https://www.google.com/recaptcha/admin/create}
  *    - Discussion group
- *          http://groups.google.com/group/recaptcha
+ *          {@link http://groups.google.com/group/recaptcha}
  *
  * Copyright (c) 2007 reCAPTCHA -- {@link http://www.google.com/recaptcha}
  * AUTHORS:
@@ -50,7 +51,7 @@ define("RECAPTCHA_VERIFY_SERVER", "www.google.com");
 function _recaptcha_qsencode ($data) {
         $req = "";
         foreach ( $data as $key => $value )
-                $req .= $key . '=' . urlencode( stripslashes($value) ) . '&';
+                $req .= $key . '=' . urlencode( $value ) . '&';
 
         // Cut the last '&'
         $req=substr($req,0,strlen($req)-1);
@@ -61,6 +62,8 @@ function _recaptcha_qsencode ($data) {
 
 /**
  * Submits an HTTP POST to a reCAPTCHA server
+ *
+ * @global object
  * @param string $host
  * @param string $path
  * @param array $data
@@ -99,6 +102,8 @@ function _recaptcha_http_post($host, $path, $data, $port = 80, $https=false) {
  * Gets the challenge HTML (javascript and non-javascript version).
  * This is called from the browser, and the resulting reCAPTCHA HTML widget
  * is embedded within the HTML form it was called from.
+ *
+ * @global object
  * @param string $pubkey A public key for reCAPTCHA
  * @param string $error The error given by reCAPTCHA (optional, default is null)
  * @param boolean $use_ssl Should the request be made over ssl? (optional, default is false)
@@ -106,7 +111,7 @@ function _recaptcha_http_post($host, $path, $data, $port = 80, $https=false) {
  * @return string - The HTML to be embedded in the user's form.
  */
 function recaptcha_get_html ($pubkey, $error = null, $use_ssl = false) {
-    global $CFG;
+    global $CFG, $PAGE;
 
     $recaptchatype = optional_param('recaptcha', 'image', PARAM_TEXT);
 
@@ -138,8 +143,8 @@ function recaptcha_get_html ($pubkey, $error = null, $use_ssl = false) {
     $strgetanaudiocaptcha = get_string('getanaudiocaptcha', 'auth');
     $strgetanimagecaptcha = get_string('getanimagecaptcha', 'auth');
     
-    $return = '<script type="text/javascript" src="'. $server . '/challenge?k=' . $pubkey . $errorpart . '"></script> 
-	<noscript>
+    $return = html_writer::script('', $server . '/challenge?k=' . $pubkey . $errorpart);
+    $return .= '<noscript>
         <div id="recaptcha_widget_noscript">
         <div id="recaptcha_image_noscript"><img src="' . $image_url . '" alt="reCAPTCHA"/></div>';
     
@@ -206,8 +211,6 @@ function recaptcha_check_answer ($privkey, $remoteip, $challenge, $response, $ht
 		die ("For security reasons, you must pass the remote ip to reCAPTCHA");
 	}
 
-	
-	
         //discard spam submissions
         if ($challenge == null || strlen($challenge) == 0 || $response == null || strlen($response) == 0) {
                 $recaptcha_response = new ReCaptchaResponse();
@@ -320,6 +323,3 @@ function recaptcha_mailhide_html($pubkey, $privkey, $email) {
 		"' onclick=\"window.open('" . htmlentities ($url) . "', '', 'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=500,height=300'); return false;\" title=\"Reveal this e-mail address\">...</a>@" . htmlentities ($emailparts [1]);
 
 }
-
-
-?>
