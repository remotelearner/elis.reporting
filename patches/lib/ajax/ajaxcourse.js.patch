diff --git a/lib/ajax/ajaxcourse.js b/lib/ajax/ajaxcourse.js
index 03daa20..3d6e208 100644
--- a/lib/ajax/ajaxcourse.js
+++ b/lib/ajax/ajaxcourse.js
@@ -1,7 +1,5 @@
 /**
  * Contains Main class and supporting functions for ajax course layout
- *
- * $Id$
  */
 
 
@@ -31,7 +29,7 @@ onload_class.prototype.add = function(script) {
         YAHOO.log("onloadobj.add - adding "+script, "junk");
     }
     this.scripts[this.scripts.length] = script;
-}
+};
 
 
 onload_class.prototype.load = function() {
@@ -42,7 +40,7 @@ onload_class.prototype.load = function() {
     for (i=0; i<scriptcount; i++) {
         eval(this.scripts[i]);
     }
-}
+};
 
 
 var onloadobj = new onload_class();
@@ -61,13 +59,14 @@ function main_class() {
     this.adminBlock = null;
     this.tempBlock = null;
     this.icons = [];
-    this.marker = null;
     this.courseformat = null;
+    this.marker = null;
     this.numsections = null;
+    this.lastsection = null; // real last section num including unavailable
 
     //things to process onload
     onloadobj.add('main.process_document();');
-    onloadobj.add("document.getElementById('content').style.display='block';");
+    onloadobj.add("if (document.getElementById('content')) document.getElementById('content').style.display='block';");
 
     //connection queue allows xhttp requests to be sent in order
     this.connectQueue = [];
@@ -106,7 +105,7 @@ main_class.prototype.process_blocks = function() {
             this.blocks[i].toggle_hide(null, null, true);
         }
     }     
-}
+};
 
 
 main_class.prototype.process_document = function() {
@@ -118,12 +117,13 @@ main_class.prototype.process_document = function() {
     this.rightcolumn = new column_class('right-column', "blocks", null, 'r');
 
     //process sections    
-    var maxct = this.portal.numsections;      
+    //var ct = 0;
+    //while (document.getElementById('section-'+ct) != null) {
     this.courseformat = this.portal.courseformat;
-    
-    for (var ct=0; ct <= maxct; ct++) {
-        if(document.getElementById('section-'+ct) != null) {  
-            this.sections[ct] = new section_class('section-'+ct, "sections", null, ct!=0?true:false);
+    for(var ct=0; ct <= this.portal.lastsection; ct++){
+        if (document.getElementById('section-'+ct) != null) {
+            var dragable = ((ct > 0) && (ct <= this.portal.numsections));
+            this.sections[ct] = new section_class('section-'+ct, "sections", null, dragable);
             this.sections[ct].addToGroup('resources');
             if (ct > 0) {
                 var sectiontitle = YAHOO.util.Selector.query('#section-'+ct+' h3.weekdates')[0];
@@ -131,7 +131,10 @@ main_class.prototype.process_document = function() {
                     this.sectiondates[ct] = sectiontitle.innerHTML;
                 }
             }
+        } else {
+            this.sections[ct] = null;
         }     
+        //ct++;
     }
     if (this.debug) {
         YAHOO.log("Processed "+ct+" sections");
@@ -139,14 +142,12 @@ main_class.prototype.process_document = function() {
 
     this.adminBlock = YAHOO.util.Dom.getElementsByClassName('block_adminblock')[0];
     this.tempBlock = YAHOO.util.Dom.getElementsByClassName('tempblockhandler')[0];
-    
-    YAHOO.log("admin - "+this.adminBlock.className);
-}
+};
 
 
 main_class.prototype.mk_safe_for_transport = function(input) {
     return input.replace(/&/i, '_.amp._');
-} 
+};
 
 
 //return block by id
@@ -157,7 +158,7 @@ main_class.prototype.get_block_index = function(el) {
             return i;
         }
     }
-}
+};
 
 
 main_class.prototype.get_section_index = function(el) {
@@ -167,18 +168,19 @@ main_class.prototype.get_section_index = function(el) {
             return i;
         }
     }
-}
+    return -1;
+};
 
 main_class.prototype.mk_button = function(tag, imgSrc, text, attributes, imgAttributes) {
     //Create button and return object.
     //Set the text: the container TITLE or image ALT attributes can be overridden, eg.
-    //  main.mk_button('a', '/i/move_2d.gif', strmove, [['title', strmoveshort]]);
+    //  main.mk_button('a', main.portal.icons['move_2d'], strmove, [['title', strmoveshort]]);
     var container = document.createElement(tag);
     container.style.cursor = 'pointer';
     container.setAttribute('title', text);
     var image = document.createElement('img');
 
-    image.setAttribute('src', main.portal.strings['pixpath']+imgSrc);
+    image.setAttribute('src', imgSrc);
     image.setAttribute('alt', text);
     //image.setAttribute('title', '');
     container.appendChild(image);
@@ -199,7 +201,7 @@ main_class.prototype.mk_button = function(tag, imgSrc, text, attributes, imgAttr
     }
     image.setAttribute('hspace', '3');
     return container;
-}
+};
 
 
 main_class.prototype.connect = function(method, urlStub, callback, body) {
@@ -221,7 +223,7 @@ main_class.prototype.connect = function(method, urlStub, callback, body) {
         }
     }
     return YAHOO.util.Connect.asyncRequest(method, this.portal.strings['wwwroot']+"/course/rest.php?courseId="+main.portal.id+"&sesskey="+this.portal.strings['sesskey']+"&"+urlStub, callback, body);
-}
+};
 
 
 main_class.prototype.connectQueue_add = function(method, urlStub, callback, body) {
@@ -234,7 +236,7 @@ main_class.prototype.connectQueue_add = function(method, urlStub, callback, body
     if (main.connectQueueConnection == null || !YAHOO.util.Connect.isCallInProgress(main.connectQueueConnection)) {
         main.connectQueue_fireNext();
     }
-}
+};
 
 
 main_class.prototype.connectQueue_fireNext = function() {
@@ -246,13 +248,13 @@ main_class.prototype.connectQueue_fireNext = function() {
     success: function(){
              main.connectQueue_fireNext();
         }
-    }
+    };
     main.connectQueueConnection = main.connect(main.connectQueue[head]['method'],
             main.connectQueue[head]['urlStub'],
             callback,
             main.connectQueue[head]['body']);
     main.connectQueueHead++;
-}
+};
 
 
 main_class.prototype.update_marker = function(newMarker) {
@@ -263,14 +265,21 @@ main_class.prototype.update_marker = function(newMarker) {
     this.marker.toggle_highlight();
 
     this.connect('post', 'class=course&field=marker', null, 'value='+this.marker.sectionId);
-}
+};
 
 
 main_class.prototype.getString = function(identifier, variable) {
     if (this.portal.strings[identifier]) {
         return this.portal.strings[identifier].replace(/_var_/, variable);
     }
-}
+};
+
+main_class.prototype.hasString = function(identifier) {
+    if (this.portal.strings[identifier]) {
+        return true;
+    }
+    return false;
+};
 
 main_class.prototype.is_ie = function() {
     var agent = navigator.userAgent.toLowerCase();
@@ -278,7 +287,7 @@ main_class.prototype.is_ie = function() {
         return true;
     }
     return false;
-}
+};
 
 
 var main = new main_class();
@@ -299,5 +308,8 @@ function php_portal_class() {
     //strings    
     this.strings = [];
 
+    //icons
+    this.icons = [];
+
     YAHOO.log("Instantiated php_portal_class", "info");
 }
