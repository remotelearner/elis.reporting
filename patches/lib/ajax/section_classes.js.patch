diff --git a/lib/ajax/section_classes.js b/lib/ajax/section_classes.js
old mode 100755
new mode 100644
index 55abf7f..0daf295
--- a/lib/ajax/section_classes.js
+++ b/lib/ajax/section_classes.js
@@ -11,8 +11,6 @@
  *
  *   Dropping an activity or resource on another activity or resource will
  *   always move the former just above the latter.
- *
- * $Id$
  */
 
 
@@ -54,7 +52,7 @@ section_class.prototype.init_section = function(id, group, config, isDraggable)
     this.numberDisplay = null; // Used to display the section number on the top left
                                 // of the section. Not used in all course formats.
     this.summary = null;
-    this.content_td = null;
+    this.content_div = null;
     this.hidden = false;
     this.highlighted = false;
     this.showOnly = false;
@@ -75,10 +73,15 @@ section_class.prototype.init_section = function(id, group, config, isDraggable)
     if (YAHOO.util.Dom.hasClass(this.getEl(),'hidden')) {
         this.toggle_hide(null,null,true);
     }
-}
+};
 
 
 section_class.prototype.init_buttons = function() {
+    if (this.sectionId > main.portal.numsections) {
+        // no need to do anything in orphaned sections
+        return;
+    }
+
     var commandContainer = YAHOO.util.Dom.getElementsByClassName('right',null,this.getEl())[0];
 
     //clear all but show only button
@@ -89,23 +92,23 @@ section_class.prototype.init_buttons = function() {
     }
 
     if (main.getString('courseformat', this.sectionId) != "weeks" && this.sectionId > 0) {
-        var highlightbutton = main.mk_button('div', '/i/marker.gif', main.getString('marker', this.sectionId));
+        var highlightbutton = main.mk_button('div', main.portal.icons['marker'], main.getString('marker', this.sectionId));
         YAHOO.util.Event.addListener(highlightbutton, 'click', this.mk_marker, this, true);
         commandContainer.appendChild(highlightbutton);
         this.highlightButton = highlightbutton;
     }
-
-    if (this.sectionId > 0 ) {
-        var viewbutton = main.mk_button('div', '/i/hide.gif', main.getString('hidesection', this.sectionId), [['title', main.portal.strings['hide'] ]]);
+    if (this.sectionId > 0) {
+        var viewbutton = main.mk_button('div', main.portal.icons['hide'], main.getString('hidesection', this.sectionId),
+                [['title', main.portal.strings['hide'] ]]);
     YAHOO.util.Event.addListener(viewbutton, 'click', this.toggle_hide, this,true);
     commandContainer.appendChild(viewbutton);
     this.viewButton = viewbutton;
-}
+    }
+};
 
-}
 
 section_class.prototype.add_handle = function() {
-    var handleRef = main.mk_button('a', '/i/move_2d.gif', main.getString('movesection', this.sectionId),
+    var handleRef = main.mk_button('a', main.portal.icons['move_2d'], main.getString('movesection', this.sectionId),
             [['title', main.portal.strings['move'] ], ['style','cursor:move']]);
 
     YAHOO.util.Dom.generateId(handleRef, 'sectionHandle');
@@ -114,11 +117,11 @@ section_class.prototype.add_handle = function() {
 
     this.getEl().childNodes[0].appendChild(handleRef);
     this.setHandleElId(this.handle.id);
-}
+};
 
 
 section_class.prototype.process_section = function() {
-    this.content_td = this.getEl().childNodes[1];
+    this.content_div = YAHOO.util.Dom.getElementsByClassName('content',null,this.getEl())[0];
 
     if (YAHOO.util.Dom.hasClass(this.getEl(),'current')) {
         this.highlighted = true;
@@ -140,17 +143,16 @@ section_class.prototype.process_section = function() {
     }
 
     // Find/edit resources
-    this.resources_ul = this.content_td.getElementsByTagName('ul')[0];
+    this.resources_ul = this.content_div.getElementsByTagName('ul')[0];
     var i=0;
     while (this.resources_ul && this.resources_ul.className != 'section img-text') {
-        this.resources_ul = this.content_td.getElementsByTagName('ul')[i];
         i++;
+        this.resources_ul = this.content_div.getElementsByTagName('ul')[i]; i++;
     }
-
     if (!this.resources_ul) {
         this.resources_ul = document.createElement('ul');
         this.resources_ul.className='section';
-        this.content_td.insertBefore(this.resources_ul, this.content_td.lastChild);
+        this.content_div.insertBefore(this.resources_ul, this.content_div.lastChild);
     }
     var resource_count = this.resources_ul.getElementsByTagName('li').length;
 
@@ -158,11 +160,16 @@ section_class.prototype.process_section = function() {
         var resource = this.resources_ul.getElementsByTagName('li')[i];
         this.resources[this.resources.length] = new resource_class(resource.id, 'resources', null, this);
     }
-    var summarysection = YAHOO.util.Dom.getElementsByClassName('summary', null, this.getEl())[0].firstChild;
-    if (summarysection != null) {
-        this.summary = summarysection.data || '';
+
+    var sum = YAHOO.util.Dom.getElementsByClassName('summary', null, this.getEl());
+    if (sum[0]) {
+        this.summary = sum[0].firstChild.data || '';
+    } else {
+        // orphaned activities
+        this.summary = null;
     }
-}
+};
+
 
 section_class.prototype.startDrag = function(x, y) {
     //operates in point mode
@@ -179,7 +186,7 @@ section_class.prototype.startDrag = function(x, y) {
     if (this.debug) {
         YAHOO.log(this.id + " startDrag, "+targets.length + " targets");
     }
-}
+};
 
 
 section_class.prototype.onDragDrop = function(e, id) {
@@ -194,7 +201,7 @@ section_class.prototype.onDragDrop = function(e, id) {
 
     //add back to resources group
     this.addToGroup('resources');
-}
+};
 
 
 section_class.prototype.endDrag = function() {
@@ -202,11 +209,11 @@ section_class.prototype.endDrag = function() {
 
     //add back to resources group
     this.addToGroup('resources');
-}
+};
 
 
 section_class.prototype.move_to_section = function(target) {
-    var tempTd = document.createElement('td');
+    var tempDiv = document.createElement('div');
     var tempStore = null;
     var sectionCount = main.sections.length;
     var found = null;
@@ -215,6 +222,14 @@ section_class.prototype.move_to_section = function(target) {
     var oIndex = main.get_section_index(this);
     var tIndex = main.get_section_index(target);
 
+    if (oIndex == -1) {
+        // source must exist
+        return;
+    }
+    if (tIndex == -1) {
+        // target must exist
+        return;
+    }
     if (this.debug) {
         YAHOO.log("original is at: "+oIndex+" target is at:"+tIndex+" of "+(sectionCount-1));
     }
@@ -261,14 +276,23 @@ section_class.prototype.move_to_section = function(target) {
             main.sections[i].swap_dates(main.sections[eval(loopmodifier)]);
         }
     }
-}
+};
 
 
 section_class.prototype.swap_with_section = function(sectionIn) {
     var tmpStore = null;
 
-    thisIndex = main.get_section_index(this);
-    targetIndex = main.get_section_index(sectionIn);
+    var thisIndex = main.get_section_index(this);
+    var targetIndex = main.get_section_index(sectionIn);
+    if (thisIndex == -1) {
+        // source must exist
+        return;
+    }
+    if (targetIndex == -1) {
+        // target must exist
+        return;
+    }
+
     main.sections[targetIndex] = this;
     main.sections[thisIndex] = sectionIn;
 
@@ -292,15 +316,20 @@ section_class.prototype.swap_with_section = function(sectionIn) {
     } else {
         YAHOO.log("Swapping sections: form not present in one or both sections", "warn");
     }
-}
+};
 
 
 section_class.prototype.toggle_hide = function(e,target,superficial) {
+    if (this.sectionId > main.portal.numsections) {
+        // no need to do anything in orphaned sections
+        return;
+    }
+
     var strhide = main.portal.strings['hide'];
     var strshow = main.portal.strings['show'];
     if (this.hidden) {
         YAHOO.util.Dom.removeClass(this.getEl(), 'hidden');
-        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/show.gif/i, 'hide.gif');
+        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/show/i, 'hide');
         this.viewButton.childNodes[0].alt = this.viewButton.childNodes[0].alt.replace(strshow, strhide);
         this.viewButton.childNodes[0].title = this.viewButton.childNodes[0].title.replace(strshow, strhide); //IE hack.
         this.viewButton.title = this.viewButton.title.replace(strshow, strhide);
@@ -316,7 +345,7 @@ section_class.prototype.toggle_hide = function(e,target,superficial) {
 
     } else {
         YAHOO.util.Dom.addClass(this.getEl(), 'hidden');
-        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/hide.gif/i, 'show.gif');
+        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/hide/i, 'show');
         this.viewButton.childNodes[0].alt = this.viewButton.childNodes[0].alt.replace(strhide, strshow);
         this.viewButton.childNodes[0].title = this.viewButton.childNodes[0].title.replace(strhide, strshow); //IE hack.
         this.viewButton.title = this.viewButton.title.replace(strhide, strshow);
@@ -330,7 +359,7 @@ section_class.prototype.toggle_hide = function(e,target,superficial) {
             }
         }
     }
-}
+};
 
 
 section_class.prototype.toggle_highlight = function() {
@@ -341,7 +370,7 @@ section_class.prototype.toggle_highlight = function() {
         YAHOO.util.Dom.addClass(this.getEl(), 'current');
         this.highlighted = true;
     }
-}
+};
 
 
 section_class.prototype.mk_marker = function() {
@@ -354,7 +383,7 @@ section_class.prototype.mk_marker = function() {
         main.connect('POST', 'class=course&field=marker', null, 'value=0');
         this.toggle_highlight();
     }
-}
+};
 
 
 section_class.prototype.changeId = function(newId) {
@@ -366,7 +395,7 @@ section_class.prototype.changeId = function(newId) {
     if (main.marker == this) {
         main.update_marker(this);
     }
-}
+};
 
 
 section_class.prototype.get_resource_index = function(el) {
@@ -377,7 +406,7 @@ section_class.prototype.get_resource_index = function(el) {
     }
     YAHOO.log("Could not find resource to remove "+el.getEl().id, "error");
     return -1;
-}
+};
 
 
 section_class.prototype.remove_resource = function(el) {
@@ -422,7 +451,7 @@ section_class.prototype.remove_resource = function(el) {
 
     this.write_sequence_list();
     return true;
-}
+};
 
 
 section_class.prototype.insert_resource = function(el, targetel) {
@@ -484,7 +513,7 @@ section_class.prototype.insert_resource = function(el, targetel) {
         //this.resources_ul.appendChild(document.createTextNode(' '));
     }
     el.parentObj = this;
-}
+};
 
 
 section_class.prototype.write_sequence_list = function(toReturn) {
@@ -499,7 +528,7 @@ section_class.prototype.write_sequence_list = function(toReturn) {
     if (toReturn) {
         return listOutput;
     }
-}
+};
 
 
 
@@ -537,20 +566,15 @@ resource_class.prototype.init_resource = function(id, group, config, parentObj)
 
     this.hidden = false;
     if (YAHOO.util.Dom.hasClass(this.getEl().getElementsByTagName('a')[0], 'dimmed') ||
-        YAHOO.util.Dom.hasClass(this.getEl().getElementsByTagName('span')[0], 'dimmed_text')) {
+        YAHOO.util.Dom.hasClass(this.getEl().getElementsByTagName('div')[1], 'dimmed_text')) {
         this.hidden = true;
     }
     this.hiddenStored = null;
 
     this.groupmode = null;  // Can be null (i.e. does not apply), 0, 1 or 2.
 
-    // Check for label first
-    firstspan = this.getEl().getElementsByTagName('span')[0];
-    if (firstspan.className == 'label' || firstspan.className == 'dimmed_text') {
-        this.linkContainer = firstspan;
-    } else {
         this.linkContainer = this.getEl().getElementsByTagName('a')[0];
-    }
+    this.divContainer = this.getEl().getElementsByTagName('div')[0];
 
     this.commandContainer = null;
     this.indentLeftButton = null;
@@ -565,7 +589,7 @@ resource_class.prototype.init_resource = function(id, group, config, parentObj)
     if (this.debug) {
         YAHOO.log("init_resource "+id+" parent = "+parentObj.getEl().id);
     }
-}
+};
 
 
 /**
@@ -607,6 +631,8 @@ resource_class.prototype.init_buttons = function() {
     var moveLeft = false;
     var moveRight = false;
     var updateButton = null;
+    var duplicateButton = null;
+    var assignButton = null;
 
     // for RTL support
     var isrtl = (document.getElementsByTagName("html")[0].dir=="rtl");
@@ -618,6 +644,10 @@ resource_class.prototype.init_buttons = function() {
             moveRight = true;
         } else if (buttons[x].className == 'editing_update') {
             updateButton = buttons[x].cloneNode(true);
+        } else if (buttons[x].className == 'editing_duplicate') {
+            duplicateButton = buttons[x].cloneNode(true);
+        } else if (buttons[x].className == 'editing_assign') {
+            assignButton = buttons[x].cloneNode(true);
         } else if (buttons[x].className == 'editing_groupsnone') {
             this.groupmode = this.NOGROUPS;
         } else if (buttons[x].className == 'editing_groupsseparate') {
@@ -636,9 +666,8 @@ resource_class.prototype.init_buttons = function() {
     commandContainer.innerHTML = '';
 
     // Add move-handle for drag and drop.
-    var handleRef = main.mk_button('a', '/i/move_2d.gif', main.portal.strings['move'],
-            [['style', 'cursor:move']],
-            [['height', '11'], ['width', '11'], ['style', 'margin-right:3px; border:0;']]);
+    var handleRef = main.mk_button('a', main.portal.icons['move_2d'], main.portal.strings['move'],
+            [['style', 'cursor:move']], [['class', 'iconsmall']]);
 
     YAHOO.util.Dom.generateId(handleRef, 'sectionHandle');
     this.handle = handleRef;
@@ -647,16 +676,16 @@ resource_class.prototype.init_buttons = function() {
 
     // Add indentation buttons if needed (move left, move right).
     if (moveLeft) {
-        var button = main.mk_button('a', (isrtl?'/t/right.gif':'/t/left.gif'), main.portal.strings['moveleft'],
-                [['class', 'editing_moveleft']]);
+        var button = main.mk_button('a', main.portal.icons['backwards'], main.portal.strings['moveleft'],
+                [['class', 'editing_moveleft']], [['class', 'iconsmall']]);
         YAHOO.util.Event.addListener(button, 'click', this.indent_left, this, true);
         commandContainer.appendChild(button);
         this.indentLeftButton = button;
     }
 
     if (moveRight) {
-        var button = main.mk_button('a', (isrtl?'/t/left.gif':'/t/right.gif'), main.portal.strings['moveright'],
-                [['class', 'editing_moveright']]);
+        var button = main.mk_button('a', main.portal.icons['forwards'], main.portal.strings['moveright'],
+                [['class', 'editing_moveright']], [['class', 'iconsmall']]);
         YAHOO.util.Event.addListener(button, 'click', this.indent_right, this, true);
         commandContainer.appendChild(button);
         this.indentRightButton = button;
@@ -665,16 +694,20 @@ resource_class.prototype.init_buttons = function() {
     // Add edit button back in.
     commandContainer.appendChild(updateButton);
 
+    if (duplicateButton) {
+        commandContainer.appendChild(duplicateButton);
+    }
+
     // Add the delete button.
-    var button = main.mk_button('a', '/t/delete.gif', main.portal.strings['delete']);
+    var button = main.mk_button('a', main.portal.icons['delete'], main.portal.strings['delete'], null, [['class', 'iconsmall']]);
     YAHOO.util.Event.addListener(button, 'click', this.delete_button, this, true);
     commandContainer.appendChild(button);
 
     // Add the hide or show button.
     if (this.hidden) {
-        var button = main.mk_button('a', '/t/show.gif', main.portal.strings['show']);
+        var button = main.mk_button('a', main.portal.icons['show'], main.portal.strings['show'], null, [['class', 'iconsmall']]);
     } else {
-        var button = main.mk_button('a', '/t/hide.gif', main.portal.strings['hide']);
+        var button = main.mk_button('a', main.portal.icons['hide'], main.portal.strings['hide'], null, [['class', 'iconsmall']]);
     }
     YAHOO.util.Event.addListener(button, 'click', this.toggle_hide, this, true);
     commandContainer.appendChild(button);
@@ -683,83 +716,86 @@ resource_class.prototype.init_buttons = function() {
     // Add the groupmode button if needed.
     if (this.groupmode != null) {
         if (this.groupmode == this.NOGROUPS) {
-            var button = main.mk_button('a', '/t/groupn.gif', strgroupsnone);
+            var button = main.mk_button('a', main.portal.icons['groupn'], strgroupsnone, null, [['class', 'iconsmall']]);
         } else if (this.groupmode == this.SEPARATEGROUPS) {
-            var button = main.mk_button('a', '/t/groups.gif', strgroupsseparate);
+            var button = main.mk_button('a', main.portal.icons['groups'], strgroupsseparate, null, [['class', 'iconsmall']]);
         } else {
-            var button = main.mk_button('a', '/t/groupv.gif', strgroupsvisible);
+            var button = main.mk_button('a', main.portal.icons['groupv'], strgroupsvisible, null, [['class', 'iconsmall']]);
         }
         YAHOO.util.Event.addListener(button, 'click', this.toggle_groupmode, this, true);
         commandContainer.appendChild(button);
         this.groupButton = button;
     }
-}
+
+    // Add the assign roles button back in
+    if (assignButton != null) {
+        commandContainer.appendChild(assignButton);
+    }
+};
 
 
 resource_class.prototype.indent_left = function() {
 
-    var spacer = YAHOO.util.Dom.getElementsByClassName('spacer',
-            'img', this.getEl())[0];
-    if (!spacer) {
+    var indentdiv = YAHOO.util.Dom.getElementsByClassName('mod-indent', 'div', this.getEl())[0];
+    if (!indentdiv) {
         if (this.debug) {
-            YAHOO.log('Could not indent left: spacer image does not exist', 'error');
+            YAHOO.log('Could not indent left: intending div does not exist', 'error');
         }
         return false;
     }
-    if (spacer.width > 20) {
-        spacer.width -= 20;
+    var oldindent = indentdiv.className.match(/mod-indent-(\d{1,})/);
+    if (oldindent && oldindent[1] > 0) {
+        oldindent = oldindent[1];
     } else {
-        // Remove the spacer.
-        resource = this.getEl();
-        resource.removeChild(spacer);
+        return false;
+    }
+    var newindent = parseFloat(oldindent) - 1;
+    YAHOO.util.Dom.replaceClass(indentdiv, 'mod-indent-'+oldindent, 'mod-indent-'+newindent);
+    main.connect('POST', 'class=resource&field=indentleft', null, 'id='+this.id);
 
+    if (newindent == 0) {
         // Remove the indent left button as well.
         var commandContainer = YAHOO.util.Dom.getElementsByClassName('commands',
                 'span', this.getEl())[0];
-
         commandContainer.removeChild(this.indentLeftButton);
         this.indentLeftButton = null;
     }
-    main.connect('POST', 'class=resource&field=indentleft', null, 'id='+this.id);
+
     return true;
-}
+};
 
 
 resource_class.prototype.indent_right = function() {
 
-    // for RTL support
-    var isrtl = (document.getElementsByTagName("html")[0].dir=="rtl");
-
-    var spacer = YAHOO.util.Dom.getElementsByClassName('spacer',
-            'img', this.getEl())[0];
-    if (!spacer) {
-        var spacer = document.createElement('img');
-
-        spacer.setAttribute('src', main.portal.strings['pixpath']+'/spacer.gif');
-        spacer.className = 'spacer';
-        spacer.setAttribute('alt', '');
-        spacer.setAttribute('width', '20');
-        spacer.setAttribute('height', '12');
-
-        var resource = this.getEl();
-        resource.insertBefore(spacer, resource.childNodes[0]);
+    var indentdiv = YAHOO.util.Dom.getElementsByClassName('mod-indent', 'div', this.getEl())[0];
+    if (!indentdiv) {
+        if (this.debug) {
+            YAHOO.log('Could not indent left: intending div does not exist', 'error');
+        }
+        return false;
+    }
+    var oldindent = indentdiv.className.match(/mod-indent-(\d{1,})/);
+    if (oldindent && oldindent[1] >= 0) {
+        oldindent = oldindent[1];
+        var newindent = parseFloat(oldindent) + 1;
+        YAHOO.util.Dom.replaceClass(indentdiv, 'mod-indent-'+oldindent, 'mod-indent-'+newindent);
     } else {
-        spacer.width += 20;
+        YAHOO.util.Dom.addClass(indentdiv, 'mod-indent-1');
     }
-    // Add a indent left button if none is present.
-    var commandContainer = YAHOO.util.Dom.getElementsByClassName('commands',
-            'span', this.getEl())[0];
+    main.connect('POST', 'class=resource&field=indentright', null, 'id='+this.id);
 
     if (!this.indentLeftButton) {
-        var button = main.mk_button('a', (isrtl?'/t/right.gif':'/t/left.gif'), main.portal.strings['moveleft'],
-                [['class', 'editing_moveleft']]);
+        // Add a indent left button if none is present.
+        var commandContainer = YAHOO.util.Dom.getElementsByClassName('commands', 'span', this.getEl())[0];
+        var button = main.mk_button('a', main.portal.icons['backwards'], main.portal.strings['moveleft'],
+                [['class', 'editing_moveleft']], [['class', 'iconsmall']]);
         YAHOO.util.Event.addListener(button, 'click', this.indent_left, this, true);
         commandContainer.insertBefore(button, this.indentRightButton);
         this.indentLeftButton = button;
     }
-    main.connect('POST', 'class=resource&field=indentright', null, 'id='+this.id);
+
     return true;
-}
+};
 
 
 resource_class.prototype.toggle_hide = function(target, e, superficial, force) {
@@ -773,12 +809,8 @@ resource_class.prototype.toggle_hide = function(target, e, superficial, force) {
     }
     if (this.hidden) {
         YAHOO.util.Dom.removeClass(this.linkContainer, 'dimmed');
-
-        if (YAHOO.util.Dom.hasClass(this.linkContainer, 'dimmed_text')) {
-            YAHOO.util.Dom.removeClass(this.linkContainer, 'dimmed_text');
-            YAHOO.util.Dom.addClass(this.linkContainer, 'label');
-        }
-        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/show.gif/i, 'hide.gif');
+        YAHOO.util.Dom.removeClass(this.divContainer, 'dimmed_text');
+        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/show/i, 'hide');
         this.viewButton.childNodes[0].alt = this.viewButton.childNodes[0].alt.replace(strshow, strhide);
         this.viewButton.title = this.viewButton.title.replace(strshow, strhide);
         this.hidden = false;
@@ -788,12 +820,8 @@ resource_class.prototype.toggle_hide = function(target, e, superficial, force) {
         }
     } else {
         YAHOO.util.Dom.addClass(this.linkContainer, 'dimmed');
-
-        if (YAHOO.util.Dom.hasClass(this.linkContainer, 'label')) {
-            YAHOO.util.Dom.addClass(this.linkContainer, 'dimmed_text');
-            YAHOO.util.Dom.removeClass(this.linkContainer, 'label');
-        }
-        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/hide.gif/i, 'show.gif');
+        YAHOO.util.Dom.addClass(this.divContainer, 'dimmed_text');
+        this.viewButton.childNodes[0].src = this.viewButton.childNodes[0].src.replace(/hide/i, 'show');
         this.viewButton.childNodes[0].alt = this.viewButton.childNodes[0].alt.replace(strhide, strshow);
         this.viewButton.title = this.viewButton.title.replace(strhide, strshow);
         this.hidden = true;
@@ -802,10 +830,10 @@ resource_class.prototype.toggle_hide = function(target, e, superficial, force) {
             main.connect('POST', 'class=resource&field=visible', null, 'value=0&id='+this.id);
         }
     }
-}
+};
 
 
-resource_class.prototype.groupImages = ['/t/groupn.gif', '/t/groups.gif', '/t/groupv.gif'];
+resource_class.prototype.groupImages = ['groupn', 'groups', 'groupv'];
 
 
 resource_class.prototype.toggle_groupmode = function() {
@@ -831,28 +859,70 @@ resource_class.prototype.toggle_groupmode = function() {
     this.groupButton.getElementsByTagName('img')[0].alt = newtitle;
     this.groupButton.title = newtitle;
 
-    this.groupButton.getElementsByTagName('img')[0].src = main.portal.strings['pixpath']+this.groupImages[this.groupmode];
+    this.groupButton.getElementsByTagName('img')[0].src = main.portal.icons[this.groupImages[this.groupmode]];
     main.connect('POST', 'class=resource&field=groupmode', null, 'value='+this.groupmode+'&id='+this.id);
-}
+};
 
 
 resource_class.prototype.delete_button = function() {
     if (this.debug) {
     YAHOO.log("Deleting "+this.getEl().id+" from parent "+this.parentObj.getEl().id);
     }
-    if (!confirm(main.getString('deletecheck', main.getString(this.is)+" "+this.id))) {
+
+    // default fallback to something like 'Resource 42'
+    var modtype = main.getString(this.is);
+    var modname = this.id;
+
+    // try to get less cryptic instance name from DOM
+    if (YAHOO.util.Dom.hasClass(this.getEl(), 'activity')) {
+        if (YAHOO.util.Dom.hasClass(this.getEl(), 'label')) {
+            // mod_label instance
+            modtype = main.getString('modtype_label');
+            modname = '';
+        } else {
+            // other mod instance, get the type first
+            matches = new RegExp(/modtype_(\w+)/).exec(this.getEl().className);
+            if (matches[1] && main.hasString('modtype_' + matches[1])) {
+                modtype = main.getString('modtype_' + matches[1]);
+            }
+            // look for span.instancename content to get the module instance name from it
+            instancename = YAHOO.util.Selector.query('.instancename', this.getEl(), true);
+            if (instancename) {
+                // remove the span.accesshide
+                accesshides = YAHOO.util.Selector.query('.accesshide', instancename);
+                for (x in accesshides) {
+                    instancename.removeChild(accesshides[x]);
+                }
+                // strip HTML tags
+                instancenametext = instancename.innerHTML.replace(/<[^>]+>/g, '');
+                // and if anything survived, consider it the instance name
+                if (instancenametext) {
+                    modname = instancenametext;
+                }
+                // put span.accesshides back
+                for (x in accesshides) {
+                    instancename.appendChild(accesshides[x]);
+                }
+            }
+        }
+    }
+
+    if (modname) {
+        modname = "'" + modname + "'";
+    }
+    if (!confirm(main.getString('deletecheck', modtype + ' ' + modname))) {
         return false;
     }
     this.parentObj.remove_resource(this);
     main.connect('POST', 'class=resource&action=DELETE&id='+this.id);
-}
+};
 
 
 resource_class.prototype.update_index = function(index) {
     if (this.debug) {
         YAHOO.log("Updating Index for resource "+this.getEl().id+" to "+index);
     }
-}
+};
 
 
 resource_class.prototype.startDrag = function(x, y) {
@@ -865,7 +935,7 @@ resource_class.prototype.startDrag = function(x, y) {
     if (this.debug) {
         YAHOO.log(this.id + " startDrag "+targets.length + " targets");
     }
-}
+};
 
 
 resource_class.prototype.clear_move_markers = function(target) {
@@ -879,7 +949,7 @@ resource_class.prototype.clear_move_markers = function(target) {
             YAHOO.util.Dom.setStyle(resources[i].getEl().id, 'border', 'none');
         }
     }
-}
+};
 
 
 resource_class.prototype.onDragOver = function(e, ids) {
@@ -898,7 +968,7 @@ resource_class.prototype.onDragOver = function(e, ids) {
                 'border-bottom', '1px solid #BBB');
         }
     }
-}
+};
 
 
 resource_class.prototype.onDragOut = function(e, ids) {
@@ -906,7 +976,7 @@ resource_class.prototype.onDragOut = function(e, ids) {
     if (target) {
         this.clear_move_markers(target);
     }
-}
+};
 
 
 resource_class.prototype.onDragDrop = function(e, ids) {
@@ -929,12 +999,12 @@ resource_class.prototype.onDragDrop = function(e, ids) {
     }
     this.clear_move_markers(target);
     return;
-}
+};
 
 
 resource_class.prototype.endDrag = function() {
     // Eliminates default action
-}
+};
 
 section_class.prototype.swap_dates = function(el){
     var i=1;
@@ -944,5 +1014,5 @@ section_class.prototype.swap_dates = function(el){
         divs[div].innerHTML = main.sectiondates[i];
         i++;
     }
-}
+};
 
