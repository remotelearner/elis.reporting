diff --git a/lib/simpletestlib/frames.php b/lib/simpletestlib/frames.php
index ce669ea..091750c 100644
--- a/lib/simpletestlib/frames.php
+++ b/lib/simpletestlib/frames.php
@@ -1,19 +1,19 @@
 <?php
-    /**
+/**
      *	Base include file for SimpleTest
      *	@package	SimpleTest
      *	@subpackage	WebTester
      *	@version	$Id$
      */
 
-    /**#@+
+/**#@+
      *	include other SimpleTest class files
      */
-    require_once(dirname(__FILE__) . '/page.php');
-    require_once(dirname(__FILE__) . '/user_agent.php');
-    /**#@-*/
+require_once(dirname(__FILE__) . '/page.php');
+require_once(dirname(__FILE__) . '/user_agent.php');
+/**#@-*/
 
-    /**
+/**
      *    A composite page. Wraps a frameset page and
      *    adds subframes. The original page will be
      *    mostly ignored. Implements the SimplePage
@@ -21,7 +21,7 @@
 	 *    @package SimpleTest
 	 *    @subpackage WebTester
      */
-    class SimpleFrameset {
+class SimpleFrameset {
         var $_frameset;
         var $_frames;
         var $_focus;
@@ -267,6 +267,31 @@
         }
 
         /**
+     *    Page base URL.
+     *    @return SimpleUrl        Current url.
+     *    @access public
+     */
+    function getBaseUrl() {
+        if (is_integer($this->_focus)) {
+            $url = $this->_frames[$this->_focus]->getBaseUrl();
+        } else {
+            $url = $this->_frameset->getBaseUrl();
+        }
+        return $url;
+    }
+
+    /**
+     *    Expands expandomatic URLs into fully qualified
+     *    URLs for the frameset page.
+     *    @param SimpleUrl $url        Relative URL.
+     *    @return SimpleUrl            Absolute URL.
+     *    @access public
+     */
+    function expandUrl($url) {
+        return $this->_frameset->expandUrl($url);
+    }
+
+    /**
          *    Original request data.
          *    @return mixed              Sent content.
          *    @access public
@@ -363,33 +388,16 @@
 
         /**
          *    Accessor for a list of all fixed links.
-         *    @return array   List of urls with scheme of
-         *                    http or https and hostname.
-         *    @access public
-         */
-        function getAbsoluteUrls() {
-            if (is_integer($this->_focus)) {
-                return $this->_frames[$this->_focus]->getAbsoluteUrls();
-            }
-            $urls = array();
-            foreach ($this->_frames as $frame) {
-                $urls = array_merge($urls, $frame->getAbsoluteUrls());
-            }
-            return array_values(array_unique($urls));
-        }
-
-        /**
-         *    Accessor for a list of all relative links.
-         *    @return array      List of urls without hostname.
+     *    @return array   List of urls as strings.
          *    @access public
          */
-        function getRelativeUrls() {
+    function getUrls() {
             if (is_integer($this->_focus)) {
-                return $this->_frames[$this->_focus]->getRelativeUrls();
+            return $this->_frames[$this->_focus]->getUrls();
             }
             $urls = array();
             foreach ($this->_frames as $frame) {
-                $urls = array_merge($urls, $frame->getRelativeUrls());
+            $urls = array_merge($urls, $frame->getUrls());
             }
             return array_values(array_unique($urls));
         }
@@ -584,5 +592,5 @@
             }
             return null;
         }
-    }
+}
 ?>
\ No newline at end of file
