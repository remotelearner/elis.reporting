diff --git a/notes/lib.php b/notes/lib.php
index 41bcc54..0744211 100644
--- a/notes/lib.php
+++ b/notes/lib.php
@@ -1,4 +1,4 @@
-<?php // $Id$
+<?php
 
 /**
  * Library of functions and constants for notes
@@ -32,26 +32,34 @@ define('NOTES_SHOW_FOOT', 0x04);
  * @return array of note objects
  */
 function note_list($courseid=0, $userid=0, $state = '', $author = 0, $order='lastmodified DESC', $limitfrom=0, $limitnum=0) {
+    global $DB;
+
     // setup filters
     $selects = array();
-    if($courseid) {
-        $selects[] = 'courseid=' . $courseid;
+    $params = array();
+    if ($courseid) {
+        $selects[] = 'courseid=?';
+        $params[]  = $courseid;
     }
-    if($userid) {
-        $selects[] = 'userid=' . $userid;
+    if ($userid) {
+        $selects[] = 'userid=?';
+        $params[]  = $userid;
     }
-    if($author) {
-        $selects[] = 'usermodified=' . $author;
+    if ($author) {
+        $selects[] = 'usermodified=?';
+        $params[]  = $author;
     }
-    if($state) {
-        $selects[] = "publishstate='$state'";
+    if ($state) {
+        $selects[] = 'publishstate=?';
+        $params[]  = $state;
     }
-    $selects[] = "module='notes'";
+    $selects[] = "module=?";
+    $params[]  = 'notes';
+
     $select = implode(' AND ', $selects);
     $fields = 'id,courseid,userid,content,format,created,lastmodified,usermodified,publishstate';
     // retrieve data
-    $rs =& get_recordset_select('post', $select, $order, $fields, $limitfrom, $limitnum);
-    return recordset_to_array($rs);
+    return $DB->get_records_select('post', $select, $params, $order, $fields, $limitfrom, $limitnum);
 }
 
 /**
@@ -61,8 +69,10 @@ function note_list($courseid=0, $userid=0, $state = '', $author = 0, $order='las
  * @return note object
  */
 function note_load($note_id) {
+    global $DB;
+
     $fields = 'id,courseid,userid,content,format,created,lastmodified,usermodified,publishstate';
-    return get_record_select('post', "id=$note_id AND module='notes'", $fields);
+    return $DB->get_record('post', array('id'=>$note_id, 'module'=>'notes'), $fields);
 }
 
 /**
@@ -73,7 +83,7 @@ function note_load($note_id) {
  * @return boolean true if the object was saved; false otherwise
  */
 function note_save(&$note) {
-    global $USER;
+    global $USER, $DB;
 
     // setup & clean fields
     $note->module       = 'notes';
@@ -89,18 +99,14 @@ function note_save(&$note) {
     if (empty($note->id)) {
         // insert new note
         $note->created = $note->lastmodified;
-        if ($id = insert_record('post', $note)) {
-            $note = addslashes_recursive(get_record('post', 'id', $id));
-            $result = true;
-        } else {
-            $result = false;
-        }
+        $id = $DB->insert_record('post', $note);
+        $note = $DB->get_record('post', array('id'=>$id));
     } else {
         // update old note
-        $result = update_record('post', $note);
+        $DB->update_record('post', $note);
     }
     unset($note->module);
-    return $result;
+    return true;
 }
 
 /**
@@ -110,7 +116,9 @@ function note_save(&$note) {
  * @return boolean true if the object was deleted; false otherwise
  */
 function note_delete($noteid) {
-    return delete_records_select('post', "id=$noteid AND module='notes'");
+    global $DB;
+
+    return $DB->delete_records('post', array('id'=>$noteid, 'module'=>'notes'));
 }
 
 /**
@@ -152,20 +160,20 @@ function note_get_state_names() {
  * @param int   $detail OR-ed NOTES_SHOW_xyz flags that specify which note parts to print
  */
 function note_print($note, $detail = NOTES_SHOW_FULL) {
-    global $CFG, $USER;
+    global $CFG, $USER, $DB, $OUTPUT;
 
-    if (!$user = get_record('user','id',$note->userid)) {
+    if (!$user = $DB->get_record('user', array('id'=>$note->userid))) {
         debugging("User $note->userid not found");
         return;
     }
-    if (!$author = get_record('user','id',$note->usermodified)) {
+    if (!$author = $DB->get_record('user', array('id'=>$note->usermodified))) {
         debugging("User $note->usermodified not found");
         return;
     }
     $context = get_context_instance(CONTEXT_COURSE, $note->courseid);
     $systemcontext = get_context_instance(CONTEXT_SYSTEM);
 
-    $authoring = new object();
+    $authoring = new stdClass();
     $authoring->name = '<a href="'.$CFG->wwwroot.'/user/view.php?id='.$author->id.'&amp;course='.$note->courseid.'">'.fullname($author).'</a>';
     $authoring->date = userdate($note->lastmodified);
 
@@ -177,7 +185,7 @@ function note_print($note, $detail = NOTES_SHOW_FULL) {
     if ($detail & NOTES_SHOW_HEAD) {
         echo '<div class="header">';
         echo '<div class="user">';
-        print_user_picture($user, $note->courseid, $user->picture);
+        echo $OUTPUT->user_picture($user, array('courseid'=>$note->courseid));
         echo fullname($user) . '</div>';
         echo '<div class="info">' .
             get_string('bynameondate', 'notes', $authoring) .
@@ -188,7 +196,7 @@ function note_print($note, $detail = NOTES_SHOW_FULL) {
     // print note content
     if ($detail & NOTES_SHOW_BODY) {
         echo '<div class="content">';
-        echo format_text($note->content, $note->format);
+        echo format_text($note->content, $note->format, array('overflowdiv'=>true));
         echo '</div>';
     }
 
@@ -265,6 +273,17 @@ function note_print_notes($header, $addcourseid = 0, $viewnotes = true, $coursei
  * @return bool success
  */
 function note_delete_all($courseid) {
-    return delete_records('post', 'module', 'notes', 'courseid', $courseid);
+    global $DB;
+
+    return $DB->delete_records('post', array('module'=>'notes', 'courseid'=>$courseid));
+}
+
+/**
+ * Return a list of page types
+ * @param string $pagetype current page type
+ * @param stdClass $parentcontext Block's parent context
+ * @param stdClass $currentcontext Current context of block
+ */
+function note_page_type_list($pagetype, $parentcontext, $currentcontext) {
+    return array('notes-*'=>get_string('page-notes-x', 'notes'));
 }
-?>
