diff --git a/question/import.php b/question/import.php
index 060f91f..0001e1a 100644
--- a/question/import.php
+++ b/question/import.php
@@ -1,35 +1,53 @@
-<?php // $Id$
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
 /**
- * Import quiz questions into the given category
+ * Defines the import questions form.
  *
- * @author Martin Dougiamas, Howard Miller, and many others.
- *         {@link http://moodle.org}
- * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
- * @package questionbank
- * @subpackage importexport
+ * @package    moodlecore
+ * @subpackage questionbank
+ * @copyright  1999 onwards Martin Dougiamas  {@link http://moodle.com}
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  */
 
-    require_once("../config.php");
-    require_once("editlib.php");
-    require_once($CFG->libdir . '/uploadlib.php');
-    require_once($CFG->libdir . '/questionlib.php');
-    require_once("import_form.php");
 
-    list($thispageurl, $contexts, $cmid, $cm, $module, $pagevars) = question_edit_setup('import', false, false);
+require_once(dirname(__FILE__) . '/../config.php');
+require_once($CFG->dirroot . '/question/editlib.php');
+require_once($CFG->dirroot . '/question/import_form.php');
+require_once($CFG->dirroot . '/question/format.php');
 
-   // get display strings
-    $txt = new stdClass();
-    $txt->importquestions = get_string("importquestions", "quiz");
+list($thispageurl, $contexts, $cmid, $cm, $module, $pagevars) =
+        question_edit_setup('import', '/question/import.php', false, false);
 
-    list($catid, $catcontext) = explode(',', $pagevars['cat']);
-    if (!$category = get_record("question_categories", "id", $catid)) {
-        print_error('nocategory','quiz');
-    }
+// get display strings
+$txt = new stdClass();
+$txt->importerror = get_string('importerror', 'question');
+$txt->importquestions = get_string('importquestions', 'question');
 
-    //this page can be called without courseid or cmid in which case
-    //we get the context from the category object.
-    if ($contexts === null) { // need to get the course from the chosen category
-        $contexts = new question_edit_contexts(get_context_instance_by_id($category->contextid));
+list($catid, $catcontext) = explode(',', $pagevars['cat']);
+if (!$category = $DB->get_record("question_categories", array('id' => $catid))) {
+    print_error('nocategory', 'question');
+}
+
+$categorycontext = get_context_instance_by_id($category->contextid);
+$category->context = $categorycontext;
+//this page can be called without courseid or cmid in which case
+//we get the context from the category object.
+if ($contexts === null) { // need to get the course from the chosen category
+    $contexts = new question_edit_contexts($categorycontext);
         $thiscontext = $contexts->lowest();
         if ($thiscontext->contextlevel == CONTEXT_COURSE){
             require_login($thiscontext->instanceid, false);
@@ -38,89 +56,47 @@
             require_login($cm->course, false, $cm);
         }
         $contexts->require_one_edit_tab_cap($edittab);
-    }
+}
 
-    // ensure the files area exists for this course
-    make_upload_directory("$COURSE->id");
+$PAGE->set_url($thispageurl);
 
-    $import_form = new question_import_form($thispageurl, array('contexts'=>$contexts->having_one_edit_tab_cap('import'),
+$import_form = new question_import_form($thispageurl, array('contexts'=>$contexts->having_one_edit_tab_cap('import'),
                                                         'defaultcategory'=>$pagevars['cat']));
 
-    if ($import_form->is_cancelled()){
+if ($import_form->is_cancelled()){
         redirect($thispageurl);
-    }
-    //==========
-    // PAGE HEADER
-    //==========
-
-    if ($cm!==null) {
-        $strupdatemodule = has_capability('moodle/course:manageactivities', get_context_instance(CONTEXT_COURSE, $COURSE->id))
-            ? update_module_button($cm->id, $COURSE->id, get_string('modulename', $cm->modname))
-            : "";
-        $navlinks = array();
-        $navlinks[] = array('name' => get_string('modulenameplural', $cm->modname), 'link' => "$CFG->wwwroot/mod/{$cm->modname}/index.php?id=$COURSE->id", 'type' => 'activity');
-        $navlinks[] = array('name' => format_string($module->name), 'link' => "$CFG->wwwroot/mod/{$cm->modname}/view.php?id={$cm->id}", 'type' => 'title');
-        $navlinks[] = array('name' => $txt->importquestions, 'link' => '', 'type' => 'title');
-        $navigation = build_navigation($navlinks);
-        print_header_simple($txt->importquestions, '', $navigation, "", "", true, $strupdatemodule);
-
-        $currenttab = 'edit';
-        $mode = 'import';
-        ${$cm->modname} = $module;
-        include($CFG->dirroot."/mod/$cm->modname/tabs.php");
-    } else {
-        // Print basic page layout.
-        $navlinks = array();
-        $navlinks[] = array('name' => $txt->importquestions, 'link' => '', 'type' => 'title');
-        $navigation = build_navigation($navlinks);
-
-        print_header_simple($txt->importquestions, '', $navigation);
-        // print tabs
-        $currenttab = 'import';
-        include('tabs.php');
-    }
-
+}
+//==========
+// PAGE HEADER
+//==========
+$PAGE->set_title($txt->importquestions);
+$PAGE->set_heading($COURSE->fullname);
+echo $OUTPUT->header();
 
-    // file upload form sumitted
-    if ($form = $import_form->get_data()) {
+// file upload form sumitted
+if ($form = $import_form->get_data()) {
 
         // file checks out ok
         $fileisgood = false;
 
         // work out if this is an uploaded file
         // or one from the filesarea.
-        if (!empty($form->choosefile)) {
-            $importfile = "{$CFG->dataroot}/{$COURSE->id}/{$form->choosefile}";
-            $realfilename = $form->choosefile;
-            if (file_exists($importfile)) {
-                $fileisgood = true;
-            } else {
-                print_error('uploadproblem', 'moodle', $form->choosefile);
-            }
-        } else {
-            // must be upload file
-            $realfilename = $import_form->get_importfile_realname();
-
-            // move the file into the dataroot
-            $importfile = $CFG->dataroot . '/temp/' . $realfilename;
-            if (move_uploaded_file($import_form->get_importfile_name(), $importfile)) {
-                $fileisgood = true;
-            } else {
-                print_error('uploadproblem', 'moodle');
-            }
-        }
+    $realfilename = $import_form->get_new_filename('newfile');
 
-        // process if we are happy file is ok
-        if ($fileisgood) {
+    $importfile = "{$CFG->dataroot}/temp/questionimport/{$realfilename}";
+    make_upload_directory('temp/questionimport');
+    if (!$result = $import_form->save_file('newfile', $importfile, true)) {
+        throw new moodle_exception('uploadproblem');
+    }
 
-            if (! is_readable("format/$form->format/format.php")) {
-                print_error('formatnotfound','quiz', $form->format);
+    $formatfile = 'format/' . $form->format . '/format.php';
+    if (!is_readable($formatfile)) {
+        throw new moodle_exception('formatnotfound', 'question', '', $form->format);
             }
 
-            require_once("format.php");  // Parent class
-            require_once("format/$form->format/format.php");
+    require_once($formatfile);
 
-            $classname = "qformat_$form->format";
+    $classname = 'qformat_' . $form->format;
             $qformat = new $classname();
 
             // load data into class
@@ -135,31 +111,29 @@
             $qformat->setStoponerror($form->stoponerror);
 
             // Do anything before that we need to
-            if (! $qformat->importpreprocess()) {
-                print_error('importerror', 'quiz', $thispageurl->out());
+    if (!$qformat->importpreprocess()) {
+        print_error('cannotimport', '', $thispageurl->out());
             }
 
             // Process the uploaded file
-            if (! $qformat->importprocess()) {
-                print_error('importerror', 'quiz', $thispageurl->out());
+    if (!$qformat->importprocess($category)) {
+        print_error('cannotimport', '', $thispageurl->out());
             }
 
             // In case anything needs to be done after
-            if (! $qformat->importpostprocess()) {
-                print_error('importerror', 'quiz', $thispageurl->out());
+    if (!$qformat->importpostprocess()) {
+        print_error('cannotimport', '', $thispageurl->out());
             }
 
-            echo "<hr />";
-            print_continue("edit.php?".($thispageurl->get_query_string(array('category'=>"{$qformat->category->id},{$qformat->category->contextid}"))));
-            print_footer($COURSE);
+    $params = $thispageurl->params() + array(
+        'category' => $qformat->category->id . ',' . $qformat->category->contextid);
+    echo $OUTPUT->continue_button(new moodle_url('edit.php', $params));
+    echo $OUTPUT->footer();
             exit;
-        }
-    }
-
-    print_heading_with_help($txt->importquestions, "import", "quiz");
+}
 
-    /// Print upload form
-    $import_form->display();
-    print_footer($COURSE);
+echo $OUTPUT->heading_with_help($txt->importquestions, 'importquestions', 'question');
 
-?>
+/// Print upload form
+$import_form->display();
+echo $OUTPUT->footer();
