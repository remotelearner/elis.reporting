diff --git a/question/type/essay/edit_essay_form.php b/question/type/essay/edit_essay_form.php
index 9efd100..2ac0b70 100644
--- a/question/type/essay/edit_essay_form.php
+++ b/question/type/essay/edit_essay_form.php
@@ -1,48 +1,88 @@
-<?php  // $Id$
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
 /**
  * Defines the editing form for the essay question type.
  *
- * @copyright &copy; 2007 Jamie Pratt
- * @author Jamie Pratt me@jamiep.org
- * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
- * @package questionbank
- * @subpackage questiontypes
+ * @package    qtype
+ * @subpackage essay
+ * @copyright  2007 Jamie Pratt me@jamiep.org
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  */
 
+
+defined('MOODLE_INTERNAL') || die();
+
+
 /**
- * essay editing form definition.
- */
-class question_edit_essay_form extends question_edit_form {
-    /**
-     * Add question-type specific form fields.
+ * Essay question type editing form.
      *
-     * @param MoodleQuickForm $mform the form being built.
+ * @copyright  2007 Jamie Pratt me@jamiep.org
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
      */
-    function definition_inner(&$mform) {
-        $mform->addElement('htmleditor', 'feedback', get_string("feedback", "quiz"),
-                                array('course' => $this->coursefilesid));
-        $mform->setType('feedback', PARAM_RAW);
-
-        $mform->addElement('hidden', 'fraction', 0);
-        $mform->setType('fraction', PARAM_RAW);
-
-        //don't need this default element.
-        $mform->removeElement('penalty');
-        $mform->addElement('hidden', 'penalty', 0);
-        $mform->setType('penalty', PARAM_RAW);
+class qtype_essay_edit_form extends question_edit_form {
+
+    protected function definition_inner($mform) {
+        $qtype = question_bank::get_qtype('essay');
+
+        $mform->addElement('select', 'responseformat',
+                get_string('responseformat', 'qtype_essay'), $qtype->response_formats());
+        $mform->setDefault('responseformat', 'editor');
+
+        $mform->addElement('select', 'responsefieldlines',
+                get_string('responsefieldlines', 'qtype_essay'), $qtype->response_sizes());
+        $mform->setDefault('responsefieldlines', 15);
+
+        $mform->addElement('select', 'attachments',
+                get_string('allowattachments', 'qtype_essay'), $qtype->attachment_options());
+        $mform->setDefault('attachments', 0);
+
+        $mform->addElement('editor', 'graderinfo', get_string('graderinfo', 'qtype_essay'),
+                array('rows' => 10), $this->editoroptions);
     }
 
-    function set_data($question) {
-        if (!empty($question->options) && !empty($question->options->answers)) {      	
-            $answer = reset($question->options->answers);
-            $question->feedback = $answer->feedback;
+    protected function data_preprocessing($question) {
+        $question = parent::data_preprocessing($question);
+
+        if (empty($question->options)) {
+            return $question;
         }
-        $question->penalty = 0;
-        parent::set_data($question);
+
+        $question->responseformat = $question->options->responseformat;
+        $question->responsefieldlines = $question->options->responsefieldlines;
+        $question->attachments = $question->options->attachments;
+
+        $draftid = file_get_submitted_draft_itemid('graderinfo');
+        $question->graderinfo = array();
+        $question->graderinfo['text'] = file_prepare_draft_area(
+            $draftid,           // draftid
+            $this->context->id, // context
+            'qtype_essay',      // component
+            'graderinfo',       // filarea
+            !empty($question->id) ? (int) $question->id : null, // itemid
+            $this->fileoptions, // options
+            $question->options->graderinfo // text
+        );
+        $question->graderinfo['format'] = $question->options->graderinfoformat;
+        $question->graderinfo['itemid'] = $draftid;
+
+        return $question;
     }
 
-    function qtype() {
+    public function qtype() {
         return 'essay';
     }
 }
-?>
