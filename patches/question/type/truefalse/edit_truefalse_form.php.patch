diff --git a/question/type/truefalse/edit_truefalse_form.php b/question/type/truefalse/edit_truefalse_form.php
index 4ee306d..936035c 100644
--- a/question/type/truefalse/edit_truefalse_form.php
+++ b/question/type/truefalse/edit_truefalse_form.php
@@ -1,53 +1,119 @@
-<?php  // $Id$
-require_once($CFG->dirroot.'/question/type/edit_question_form.php');
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
 /**
- * Defines the editing form for the thruefalse question type.
+ * Defines the editing form for the true-false question type.
  *
- * @copyright &copy; 2006 The Open University
- * @author T.J.Hunt@open.ac.uk
- * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
- * @package questionbank
- * @subpackage questiontypes
- *//** */
+ * @package    qtype
+ * @subpackage truefalse
+ * @copyright  2007 Jamie Pratt
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+
+defined('MOODLE_INTERNAL') || die();
+
+
+require_once($CFG->dirroot.'/question/type/edit_question_form.php');
+
 
 /**
- * truefalse editing form definition.
+ * True-false question editing form definition.
+ *
+ * @copyright  2007 Jamie Pratt
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  */
-class question_edit_truefalse_form extends question_edit_form {
+class qtype_truefalse_edit_form extends question_edit_form {
     /**
      * Add question-type specific form fields.
      *
      * @param object $mform the form being built.
      */
-    function definition_inner(&$mform) {
-        $mform->addElement('select', 'correctanswer', get_string('correctanswer', 'qtype_truefalse'),
-                array(0 => get_string('false', 'qtype_truefalse'), 1 => get_string('true', 'qtype_truefalse')));
+    protected function definition_inner($mform) {
+        $mform->addElement('select', 'correctanswer',
+                get_string('correctanswer', 'qtype_truefalse'), array(
+                0 => get_string('false', 'qtype_truefalse'),
+                1 => get_string('true', 'qtype_truefalse')));
 
-        $mform->addElement('htmleditor', 'feedbacktrue', get_string('feedbacktrue', 'qtype_truefalse'),
-                                array('course' => $this->coursefilesid));;
+        $mform->addElement('editor', 'feedbacktrue',
+                get_string('feedbacktrue', 'qtype_truefalse'), null, $this->editoroptions);
         $mform->setType('feedbacktrue', PARAM_RAW);
 
-        $mform->addElement('htmleditor', 'feedbackfalse', get_string('feedbackfalse', 'qtype_truefalse'),
-                                array('course' => $this->coursefilesid));
+        $mform->addElement('editor', 'feedbackfalse',
+                get_string('feedbackfalse', 'qtype_truefalse'), null, $this->editoroptions);
         $mform->setType('feedbackfalse', PARAM_RAW);
 
-        // Fix penalty factor at 1.
-        $mform->setDefault('penalty', 1);
-        $mform->freeze('penalty');
+        $mform->addElement('header', 'multitriesheader',
+                get_string('settingsformultipletries', 'question'));
+
+        $mform->addElement('hidden', 'penalty', 1);
+
+        $mform->addElement('static', 'penaltymessage',
+                get_string('penaltyforeachincorrecttry', 'question'), 1);
+        $mform->addHelpButton('penaltymessage', 'penaltyforeachincorrecttry', 'question');
     }
 
-    function set_data($question) {
+    public function data_preprocessing($question) {
+        $question = parent::data_preprocessing($question);
+
         if (!empty($question->options->trueanswer)) {
             $trueanswer = $question->options->answers[$question->options->trueanswer];
             $question->correctanswer = ($trueanswer->fraction != 0);
-            $question->feedbacktrue = $trueanswer->feedback;
-            $question->feedbackfalse = $question->options->answers[$question->options->falseanswer]->feedback;
+
+            $draftid = file_get_submitted_draft_itemid('trueanswer');
+            $answerid = $question->options->trueanswer;
+
+            $question->feedbacktrue = array();
+            $question->feedbacktrue['format'] = $trueanswer->feedbackformat;
+            $question->feedbacktrue['text'] = file_prepare_draft_area(
+                $draftid,             // draftid
+                $this->context->id,   // context
+                'question',           // component
+                'answerfeedback',     // filarea
+                !empty($answerid) ? (int) $answerid : null, // itemid
+                $this->fileoptions,   // options
+                $trueanswer->feedback // text
+            );
+            $question->feedbacktrue['itemid'] = $draftid;
         }
-        parent::set_data($question);
+
+        if (!empty($question->options->falseanswer)) {
+            $falseanswer = $question->options->answers[$question->options->falseanswer];
+
+            $draftid = file_get_submitted_draft_itemid('falseanswer');
+            $answerid = $question->options->falseanswer;
+
+            $question->feedbackfalse = array();
+            $question->feedbackfalse['format'] = $falseanswer->feedbackformat;
+            $question->feedbackfalse['text'] = file_prepare_draft_area(
+                $draftid,              // draftid
+                $this->context->id,    // context
+                'question',            // component
+                'answerfeedback',      // filarea
+                !empty($answerid) ? (int) $answerid : null, // itemid
+                $this->fileoptions,    // options
+                $falseanswer->feedback // text
+            );
+            $question->feedbackfalse['itemid'] = $draftid;
+        }
+
+        return $question;
     }
 
-    function qtype() {
+    public function qtype() {
         return 'truefalse';
     }
 }
-?>
\ No newline at end of file
