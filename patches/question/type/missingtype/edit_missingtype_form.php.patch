diff --git a/question/type/missingtype/edit_missingtype_form.php b/question/type/missingtype/edit_missingtype_form.php
index 7e1583f..128f3ab 100644
--- a/question/type/missingtype/edit_missingtype_form.php
+++ b/question/type/missingtype/edit_missingtype_form.php
@@ -1,88 +1,77 @@
-<?php  // $Id$
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
 /**
- * Defines the editing form for the missingtype question type.
+ * Defines the editing form for the 'missingtype' question type.
  *
- * @copyright &copy; 2007 Jamie Pratt
- * @author Jamie Pratt me@jamiep.org
- * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
- * @package questionbank
- * @subpackage questiontypes
+ * @package    qtype
+ * @subpackage missingtype
+ * @copyright  2007 Jamie Pratt
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  */
 
+
+defined('MOODLE_INTERNAL') || die();
+
+
 /**
- * missingtype editing form definition.
+ * This question renderer class is used when the actual question type of this
+ * question cannot be found.
+ *
+ * @copyright  2007 Jamie Pratt
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
  */
-class question_edit_missingtype_form extends question_edit_form {
+class qtype_missingtype_edit_form extends question_edit_form {
+    public function __construct($submiturl, $question, $category, $contexts, $formeditable = true) {
+        parent::__construct($submiturl, $question, $category, $contexts, false);
+    }
+
     /**
      * Add question-type specific form fields.
      *
      * @param object $mform the form being built.
      */
-    function definition_inner(&$mform) {
-        $creategrades = get_grade_options();
-        $this->add_per_answer_fields($mform, get_string('choiceno', 'qtype_multichoice', '{no}'),
-                $creategrades->gradeoptionsfull);
+    protected function definition_inner($mform) {
+        $this->add_per_answer_fields($mform, get_string('answerno', 'qtype_missingtype', '{no}'),
+                question_bank::fraction_options_full());
     }
 
-    function set_data($question) {
-        if (isset($question->options)){
+    public function set_data($question) {
+        if (isset($question->options) && is_array($question->options->answers)) {
             $answers = $question->options->answers;
             $default_values = array();
-            if (is_array($answers) && count($answers)) {
                 $key = 0;
-                foreach ($answers as $answer){
+            foreach ($answers as $answer) {
                     $default_values['answer['.$key.']'] = $answer->answer;
                     $default_values['fraction['.$key.']'] = $answer->fraction;
                     $default_values['feedback['.$key.']'] = $answer->feedback;
                     $key++;
                 }
-            }
             $question = (object)((array)$question + $default_values);
         }
         parent::set_data($question);
     }
 
-    function qtype() {
+    public function qtype() {
         return 'missingtype';
     }
 
-    function validation($data, $files) {
+    public function validation($data, $files) {
         $errors = parent::validation($data, $files);
-        $answers = $data['answer'];
-        $answercount = 0;
-
-        $totalfraction = 0;
-        $maxfraction = -1;
-
-        foreach ($answers as $key => $answer){
-            //check no of choices
-            $trimmedanswer = trim($answer);
-            if (!empty($trimmedanswer)){
-                $answercount++;
-            }
-            //check grades
-            if ($answer != '') {
-                if ($data['fraction'][$key] > 0) {
-                    $totalfraction += $data['fraction'][$key];
-                }
-                if ($data['fraction'][$key] > $maxfraction) {
-                    $maxfraction = $data['fraction'][$key];
-                }
-            }
-        }
-
-        if ($answercount==0){
-            $errors['answer[0]'] = get_string('notenoughanswers', 'qtype_multichoice', 1);
-        }
-
-
-        $totalfraction = round($totalfraction, 2);
-        if ($totalfraction != 1) {
-            $totalfraction = $totalfraction * 100;
-            $errors['fraction[0]'] = get_string('errfractionsaddwrong', 'qtype_multichoice', $totalfraction);
-        }
-
+        $errors['name'] = get_string('cannotchangeamissingqtype', 'qtype_missingtype');
         return $errors;
     }
 }
-?>
