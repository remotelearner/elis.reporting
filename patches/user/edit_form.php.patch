diff --git a/user/edit_form.php b/user/edit_form.php
index ae4e6c5..d227848 100644
--- a/user/edit_form.php
+++ b/user/edit_form.php
@@ -1,4 +1,8 @@
-<?php //$Id$
+<?php
+
+if (!defined('MOODLE_INTERNAL')) {
+    die('Direct access to this script is forbidden.');    ///  It must be included from a Moodle page
+}
 
 require_once($CFG->dirroot.'/lib/formslib.php');
 
@@ -9,7 +13,11 @@ class user_edit_form extends moodleform {
         global $CFG, $COURSE;
 
         $mform =& $this->_form;
-        $this->set_upload_manager(new upload_manager('imagefile', false, false, null, false, 0, true, true, false));
+        if (is_array($this->_customdata) && array_key_exists('editoroptions', $this->_customdata)) {
+            $editoroptions = $this->_customdata['editoroptions'];
+        } else {
+            $editoroptions = null;
+        }
         //Accessibility: "Required" is bad legend text.
         $strgeneral  = get_string('general');
         $strrequired = get_string('required');
@@ -24,7 +32,7 @@ class user_edit_form extends moodleform {
         $mform->addElement('header', 'moodle', $strgeneral);
 
         /// shared fields
-        useredit_shared_definition($mform);
+        useredit_shared_definition($mform, $editoroptions);
 
         /// extra settigs
         if (!empty($CFG->gdversion) and !empty($CFG->disableuserimages)) {
@@ -40,7 +48,7 @@ class user_edit_form extends moodleform {
     }
 
     function definition_after_data() {
-        global $CFG;
+        global $CFG, $DB, $OUTPUT;
 
         $mform =& $this->_form;
         $userid = $mform->getElementValue('id');
@@ -48,32 +56,26 @@ class user_edit_form extends moodleform {
         // if language does not exist, use site default lang
         if ($langsel = $mform->getElementValue('lang')) {
             $lang = reset($langsel);
-            // missing _utf8 in language, add it before further processing. MDL-11829 MDL-16845
-            if (strpos($lang, '_utf8') === false) {
-                $lang = $lang . '_utf8';
-                $lang_el =& $mform->getElement('lang');
-                $lang_el->setValue($lang);
-            }
             // check lang exists
-            if (!file_exists($CFG->dataroot.'/lang/'.$lang) and
-              !file_exists($CFG->dirroot .'/lang/'.$lang)) {
+            if (!get_string_manager()->translation_exists($lang, false)) {
                 $lang_el =& $mform->getElement('lang');
                 $lang_el->setValue($CFG->lang);
             }
         }
 
 
-        if ($user = get_record('user', 'id', $userid)) {
+        if ($user = $DB->get_record('user', array('id'=>$userid))) {
+
             // remove description
-            if (empty($user->description) && !empty($CFG->profilesforenrolledusersonly) && !record_exists('role_assignments', 'userid', $userid)) {
-                $mform->removeElement('description');
+            if (empty($user->description) && !empty($CFG->profilesforenrolledusersonly) && !$DB->record_exists('role_assignments', array('userid'=>$userid))) {
+                $mform->removeElement('description_editor');
             }
 
             // print picture
             if (!empty($CFG->gdversion)) {
                 $image_el =& $mform->getElement('currentpicture');
                 if ($user and $user->picture) {
-                    $image_el->setValue(print_user_picture($user, SITEID, $user->picture, 64,true,false,'',true));
+                    $image_el->setValue($OUTPUT->user_picture($user, array('courseid'=>SITEID, 'size'=>64)));
                 } else {
                     $image_el->setValue(get_string('none'));
                 }
@@ -107,28 +109,28 @@ class user_edit_form extends moodleform {
     }
 
     function validation($usernew, $files) {
-        global $CFG;
+        global $CFG, $DB;
 
         $errors = parent::validation($usernew, $files);
 
         $usernew = (object)$usernew;
-        $user    = get_record('user', 'id', $usernew->id);
+        $user    = $DB->get_record('user', array('id'=>$usernew->id));
 
         // validate email
         if (!isset($usernew->email)) {
             // mail not confirmed yet
-        } else if (!validate_email(stripslashes($usernew->email))) {
+        } else if (!validate_email($usernew->email)) {
             $errors['email'] = get_string('invalidemail');
-        } else if ((stripslashes($usernew->email) !== $user->email) and record_exists('user', 'email', $usernew->email, 'mnethostid', $CFG->mnet_localhost_id)) {
+        } else if (($usernew->email !== $user->email) and $DB->record_exists('user', array('email'=>$usernew->email, 'mnethostid'=>$CFG->mnet_localhost_id))) {
             $errors['email'] = get_string('emailexists');
         }
 
-        if (isset($usernew->email) and stripslashes($usernew->email) === $user->email and over_bounce_threshold($user)) {
+        if (isset($usernew->email) and $usernew->email === $user->email and over_bounce_threshold($user)) {
             $errors['email'] = get_string('toomanybounces');
         }
 
         if (isset($usernew->email) and !empty($CFG->verifychangedemail) and !isset($errors['email']) and !has_capability('moodle/user:update', get_context_instance(CONTEXT_SYSTEM))) {
-            $errorstr = email_is_not_allowed(stripslashes($usernew->email));
+            $errorstr = email_is_not_allowed($usernew->email);
             if ($errorstr !== false) {
                 $errors['email'] = $errorstr;
             }
@@ -139,10 +141,6 @@ class user_edit_form extends moodleform {
 
         return $errors;
     }
-
-    function get_um() {
-        return $this->_upload_manager;
-    }
 }
 
-?>
+
