diff --git a/user/edit.php b/user/edit.php
index 6da79f6..6fa1608 100644
--- a/user/edit.php
+++ b/user/edit.php
@@ -1,72 +1,117 @@
-<?php // $Id$
-
-    require_once('../config.php');
-    require_once($CFG->libdir.'/gdlib.php');
-    require_once($CFG->dirroot.'/user/edit_form.php');
-    require_once($CFG->dirroot.'/user/editlib.php');
-    require_once($CFG->dirroot.'/user/profile/lib.php');
-
-    httpsrequired();
-
-    $userid = optional_param('id', $USER->id, PARAM_INT);    // user id
-    $course = optional_param('course', SITEID, PARAM_INT);   // course id (defaults to Site)
-    $cancelemailchange = optional_param('cancelemailchange', false, PARAM_INT);   // course id (defaults to Site)
-
-    if (!$course = get_record('course', 'id', $course)) {
-        error('Course ID was incorrect');
-    }
-
-    if ($course->id != SITEID) {
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Allows you to edit a users profile
+ *
+ * @copyright 1999 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package user
+ */
+
+require_once('../config.php');
+require_once($CFG->libdir.'/gdlib.php');
+require_once($CFG->dirroot.'/user/edit_form.php');
+require_once($CFG->dirroot.'/user/editlib.php');
+require_once($CFG->dirroot.'/user/profile/lib.php');
+
+//HTTPS is required in this page when $CFG->loginhttps enabled
+$PAGE->https_required();
+
+$userid = optional_param('id', $USER->id, PARAM_INT);    // user id
+$course = optional_param('course', SITEID, PARAM_INT);   // course id (defaults to Site)
+$cancelemailchange = optional_param('cancelemailchange', 0, PARAM_INT);   // course id (defaults to Site)
+
+$PAGE->set_url('/user/edit.php', array('course'=>$course, 'id'=>$userid));
+
+if (!$course = $DB->get_record('course', array('id'=>$course))) {
+    print_error('invalidcourseid');
+}
+
+if ($course->id != SITEID) {
         require_login($course);
-    } else if (!isloggedin()) {
+} else if (!isloggedin()) {
         if (empty($SESSION->wantsurl)) {
             $SESSION->wantsurl = $CFG->httpswwwroot.'/user/edit.php';
         }
-        redirect($CFG->httpswwwroot.'/login/index.php');
-    }
-
-    // Guest can not edit
-    if (isguestuser()) {
+    redirect(get_login_url());
+} else {
+    $PAGE->set_context(get_system_context());
+    $PAGE->set_pagelayout('standard');
+}
+
+// Guest can not edit
+if (isguestuser()) {
         print_error('guestnoeditprofile');
-    }
+}
 
-    // The user profile we are editing
-    if (!$user = get_record('user', 'id', $userid)) {
-        error('User ID was incorrect');
-    }
+// The user profile we are editing
+if (!$user = $DB->get_record('user', array('id'=>$userid))) {
+    print_error('invaliduserid');
+}
 
-    // Guest can not be edited
-    if (isguestuser($user)) {
+// Guest can not be edited
+if (isguestuser($user)) {
         print_error('guestnoeditprofile');
-    }
+}
 
-    // User interests separated by commas
-    if (!empty($CFG->usetags)) {
+// User interests separated by commas
+if (!empty($CFG->usetags)) {
         require_once($CFG->dirroot.'/tag/lib.php');
-        $user->interests = tag_get_tags_csv('user', $user->id, TAG_RETURN_TEXT);
+    $user->interests = tag_get_tags_array('user', $user->id);
+}
+
+// remote users cannot be edited
+if (is_mnet_remote_user($user)) {
+    if (user_not_fully_set_up($user)) {
+        $hostwwwroot = $DB->get_field('mnet_host', 'wwwroot', array('id'=>$user->mnethostid));
+        print_error('usernotfullysetup', 'mnet', '', $hostwwwroot);
     }
-
-    // remote users cannot be edited
-    if (is_mnet_remote_user($user)) {
         redirect($CFG->wwwroot . "/user/view.php?course={$course->id}");
-    }
+}
+
+// load the appropriate auth plugin
+$userauth = get_auth_plugin($user->auth);
+
+if (!$userauth->can_edit_profile()) {
+    print_error('noprofileedit', 'auth');
+}
 
-    if ($course->id == SITEID) {
+if ($editurl = $userauth->edit_profile_url()) {
+    // this internal script not used
+    redirect($editurl);
+}
+
+if ($course->id == SITEID) {
         $coursecontext = get_context_instance(CONTEXT_SYSTEM);   // SYSTEM context
-    } else {
+} else {
         $coursecontext = get_context_instance(CONTEXT_COURSE, $course->id);   // Course context
-    }
-    $systemcontext   = get_context_instance(CONTEXT_SYSTEM);
-    $personalcontext = get_context_instance(CONTEXT_USER, $user->id);
+}
+$systemcontext   = get_context_instance(CONTEXT_SYSTEM);
+$personalcontext = get_context_instance(CONTEXT_USER, $user->id);
 
-    // check access control
-    if ($user->id == $USER->id) {
+// check access control
+if ($user->id == $USER->id) {
         //editing own profile - require_login() MUST NOT be used here, it would result in infinite loop!
         if (!has_capability('moodle/user:editownprofile', $systemcontext)) {
-            error('Can not edit own profile, sorry.');
+        print_error('cannotedityourprofile');
         }
 
-    } else {
+} else {
         // teachers, parents, etc.
         require_capability('moodle/user:editprofile', $personalcontext);
         // no editing of guest user account
@@ -74,41 +119,50 @@
             print_error('guestnoeditprofileother');
         }
         // no editing of primary admin!
-        if (is_primary_admin($user->id)) {
-            print_error('adminprimarynoedit');
-        }
+    if (is_siteadmin($user) and !is_siteadmin($USER)) {  // Only admins may edit other admins
+        print_error('useradmineditadmin');
     }
+}
 
-    if ($user->deleted) {
-        print_header();
-        print_heading(get_string('userdeleted'));
-        print_footer($course);
+if ($user->deleted) {
+    echo $OUTPUT->header();
+    echo $OUTPUT->heading(get_string('userdeleted'));
+    echo $OUTPUT->footer();
         die;
-    }
+}
 
-    // Process email change cancellation
-    if ($cancelemailchange) {
+// Process email change cancellation
+if ($cancelemailchange) {
         cancel_email_update($user->id);
-    }
+}
+
+//load user preferences
+useredit_load_preferences($user);
 
-    //load user preferences
-    useredit_load_preferences($user);
+//Load custom profile fields data
+profile_load_data($user);
 
-    //Load custom profile fields data
-    profile_load_data($user);
 
+// Prepare the editor and create form
+$editoroptions = array(
+    'maxfiles'   => EDITOR_UNLIMITED_FILES,
+    'maxbytes'   => $CFG->maxbytes,
+    'trusttext'  => false,
+    'forcehttps' => false,
+    'context'    => $personalcontext
+);
 
-    //create form
-    $userform = new user_edit_form();
-    if (empty($user->country)) {
+$user = file_prepare_standard_editor($user, 'description', $editoroptions, $personalcontext, 'user', 'profile', 0);
+$userform = new user_edit_form(null, array('editoroptions'=>$editoroptions));
+if (empty($user->country)) {
         // MDL-16308 - we must unset the value here so $CFG->country can be used as default one
         unset($user->country);
-    }
-    $userform->set_data($user);
+}
+$userform->set_data($user);
 
-    $email_changed = false;
+$email_changed = false;
 
-    if ($usernew = $userform->get_data()) {
+if ($usernew = $userform->get_data()) {
 
         add_to_log($course->id, 'user', 'update', "view.php?id=$user->id&course=$course->id", '');
 
@@ -116,17 +170,15 @@
 
         if ($CFG->emailchangeconfirmation) {
             // Handle change of email carefully for non-trusted users
-            if (isset($usernew->email) and $user->email != stripslashes($usernew->email) && !has_capability('moodle/user:update', $systemcontext)) {
+        if (isset($usernew->email) and $user->email != $usernew->email && !has_capability('moodle/user:update', $systemcontext)) {
                 $a = new stdClass();
-                $a->newemail = s(stripslashes($usernew->email));
-                $usernew->preference_newemail = $usernew->email;
+            $a->newemail = $usernew->preference_newemail = $usernew->email;
                 $usernew->preference_newemailkey = random_string(20);
                 $usernew->preference_newemailattemptsleft = 3;
-                $a->oldemail = s($user->email);
-                $usernew->email = addslashes($user->email);
+            $a->oldemail = $usernew->email = $user->email;
 
-                $email_changed_html = print_box(get_string('auth_changingemailaddress', 'auth', $a), 'generalbox', 'notice', true);
-                $email_changed_html .= print_continue("$CFG->wwwroot/user/view.php?id=$user->id&amp;course=$course->id", true);
+            $email_changed_html = $OUTPUT->box(get_string('auth_changingemailaddress', 'auth', $a), 'generalbox', 'notice');
+            $email_changed_html .= $OUTPUT->continue_button("$CFG->wwwroot/user/view.php?id=$user->id&amp;course=$course->id");
                 $email_changed = true;
             }
         }
@@ -135,16 +187,18 @@
 
         $usernew->timemodified = time();
 
-        if (!update_record('user', $usernew)) {
-            error('Error updating user record');
+    // description editor element may not exist!
+    if (isset($usernew->description_editor)) {
+        $usernew = file_postupdate_standard_editor($usernew, 'description', $editoroptions, $personalcontext, 'user', 'profile', 0);
         }
 
+    $DB->update_record('user', $usernew);
+
         // pass a true $userold here
-        if (! $authplugin->user_update($user, stripslashes_recursive($usernew))) {
+    if (! $authplugin->user_update($user, $usernew)) {
             // auth update failed, rollback for moodle
-            update_record('user', addslashes_object($user));
-            error('Failed to update user data on external auth: '.$user->auth.
-                    '. See the server logs for more details.');
+        $DB->update_record('user', $user);
+        print_error('cannotupdateprofile');
         }
 
         //update preferences
@@ -173,23 +227,23 @@
         if ($email_changed && $CFG->emailchangeconfirmation) {
             $temp_user = fullclone($user);
             $temp_user->email = $usernew->preference_newemail;
-            $temp_user->emailstop = NULL;
 
             $a = new stdClass();
             $a->url = $CFG->wwwroot . '/user/emailupdate.php?key=' . $usernew->preference_newemailkey . '&id=' . $user->id;
-            $a->site = $SITE->fullname;
+        $a->site = format_string($SITE->fullname, true, array('context' => get_context_instance(CONTEXT_COURSE, SITEID)));
             $a->fullname = fullname($user, true);
 
-            $emailupdatemessage = get_string('auth_emailupdatemessage', 'auth', $a);
-            $emailupdatetitle = get_string('auth_emailupdatetitle', 'auth', $a);
+        $emailupdatemessage = get_string('emailupdatemessage', 'auth', $a);
+        $emailupdatetitle = get_string('emailupdatetitle', 'auth', $a);
 
+        //email confirmation directly rather than using messaging so they will definitely get an email
             if (!$mail_results = email_to_user($temp_user, get_admin(), $emailupdatetitle, $emailupdatemessage)) {
                 die("could not send email!");
             }
         }
 
         // reload from db
-        $usernew = get_record('user', 'id', $user->id);
+    $usernew = $DB->get_record('user', array('id'=>$user->id));
         events_trigger('user_updated', $usernew);
 
         if ($USER->id == $user->id) {
@@ -197,43 +251,41 @@
             foreach ((array)$usernew as $variable => $value) {
                 $USER->$variable = $value;
             }
+        // preload custom fields
+        profile_load_custom_fields($USER);
+    }
+
+    if (is_siteadmin() and empty($SITE->shortname)) {
+        // fresh cli install - we need to finish site settings
+        redirect(new moodle_url('/admin/index.php'));
         }
 
         if (!$email_changed || !$CFG->emailchangeconfirmation) {
             redirect("$CFG->wwwroot/user/view.php?id=$user->id&course=$course->id");
         }
-    }
+}
+
+// make sure we really are on the https page when https login required
+$PAGE->verify_https_required();
 
 
 /// Display page header
-    $streditmyprofile = get_string('editmyprofile');
-    $strparticipants  = get_string('participants');
-    $userfullname     = fullname($user, true);
-
-    $navlinks = array();
-    if (has_capability('moodle/course:viewparticipants', $coursecontext) || has_capability('moodle/site:viewparticipants', $systemcontext)) {
-        $navlinks[] = array('name' => $strparticipants, 'link' => "index.php?id=$course->id", 'type' => 'misc');
-    }
-    $navlinks[] = array('name' => $userfullname,
-                        'link' => "view.php?id=$user->id&amp;course=$course->id",
-                        'type' => 'misc');
-    $navlinks[] = array('name' => $streditmyprofile, 'link' => null, 'type' => 'misc');
-    $navigation = build_navigation($navlinks);
-    print_header("$course->shortname: $streditmyprofile", $course->fullname, $navigation, "");
-
-    /// Print tabs at the top
-    $showroles = 1;
-    $currenttab = 'editprofile';
-    require('tabs.php');
-
-    if ($email_changed) {
+$streditmyprofile = get_string('editmyprofile');
+$strparticipants  = get_string('participants');
+$userfullname     = fullname($user, true);
+
+$PAGE->set_title("$course->shortname: $streditmyprofile");
+$PAGE->set_heading($course->fullname);
+
+echo $OUTPUT->header();
+
+if ($email_changed) {
         echo $email_changed_html;
-    } else {
-    /// Finally display THE form
+} else {
+/// Finally display THE form
         $userform->display();
-    }
+}
 
 /// and proper footer
-    print_footer($course);
+echo $OUTPUT->footer();
 
-?>
