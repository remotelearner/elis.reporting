diff --git a/user/view.php b/user/view.php
index 2d2e9de..ce82f8e 100644
--- a/user/view.php
+++ b/user/view.php
@@ -1,550 +1,349 @@
-<?PHP // $Id$
-
-//  Display profile for a particular user
-
-    require_once("../config.php");
-    require_once($CFG->dirroot.'/user/profile/lib.php');
-    require_once($CFG->dirroot.'/tag/lib.php');
-
-    $id      = optional_param('id',     0,      PARAM_INT);   // user id
-    $course  = optional_param('course', SITEID, PARAM_INT);   // course id (defaults to Site)
-    $enable  = optional_param('enable', '');                  // enable email
-    $disable = optional_param('disable', '');                 // disable email
-
-    if (empty($id)) {         // See your own profile by default
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Display profile for a particular user
+ *
+ * @copyright 1999 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package user
+ */
+
+require_once("../config.php");
+require_once($CFG->dirroot.'/user/profile/lib.php');
+require_once($CFG->dirroot.'/tag/lib.php');
+require_once($CFG->libdir . '/filelib.php');
+
+$id        = optional_param('id', 0, PARAM_INT);   // user id
+$courseid  = optional_param('course', SITEID, PARAM_INT);   // course id (defaults to Site)
+
+if (empty($id)) {            // See your own profile by default
         require_login();
         $id = $USER->id;
-    }
+}
 
-    if (! $user = get_record("user", "id", $id) ) {
-        error("No such user in this course");
-    }
+if ($courseid == SITEID) {   // Since Moodle 2.0 all site-level profiles are shown by profile.php
+    redirect($CFG->wwwroot.'/user/profile.php?id='.$id);  // Immediate redirect
+}
 
-    if (! $course = get_record("course", "id", $course) ) {
-        error("No such course id");
-    }
+$PAGE->set_url('/user/view.php', array('id'=>$id,'course'=>$courseid));
 
-/// Make sure the current user is allowed to see this user
+$user = $DB->get_record('user', array('id'=>$id), '*', MUST_EXIST);
+$course = $DB->get_record('course', array('id'=>$courseid), '*', MUST_EXIST);
+$currentuser = ($user->id == $USER->id);
 
-    if (empty($USER->id)) {
-       $currentuser = false;
-    } else {
-       $currentuser = ($user->id == $USER->id);
-    }
+$systemcontext = get_context_instance(CONTEXT_SYSTEM);
+$coursecontext = get_context_instance(CONTEXT_COURSE, $course->id);
+$usercontext   = get_context_instance(CONTEXT_USER, $user->id, MUST_EXIST);
 
-    if ($course->id == SITEID) {
-        $coursecontext = get_context_instance(CONTEXT_SYSTEM);   // SYSTEM context
-    } else {
-        $coursecontext = get_context_instance(CONTEXT_COURSE, $course->id);   // Course context
-    }
-    $usercontext   = get_context_instance(CONTEXT_USER, $user->id);       // User context
-    $systemcontext = get_context_instance(CONTEXT_SYSTEM);   // SYSTEM context
+// Require login first
+if (isguestuser($user)) {
+    // can not view profile of guest - thre is nothing to see there
+    print_error('invaliduserid');
+}
 
-    if (!empty($CFG->forcelogin) || $course->id != SITEID) {
-        // do not force parents to enrol
-        if (!get_record('role_assignments', 'userid', $USER->id, 'contextid', $usercontext->id)) {
-            require_login($course->id);
-        }
-    }
+if (!empty($CFG->forceloginforprofiles)) {
+    require_login(); // we can not log in to course due to the parent hack bellow
+}
 
-    if (!empty($CFG->forceloginforprofiles)) {
-        require_login();
-        if (isguest()) {
-        	$loginurl ="$CFG->wwwroot/login/index.php";
-            if (!empty($CFG->loginhttps)) {
-	            $loginurl = str_replace("http://", "https://", $loginurl);
-	        }
-            redirect($loginurl);
-        }
-    }
+$PAGE->set_context($coursecontext);
+$PAGE->set_course($course);
+$PAGE->set_pagetype('course-view-' . $course->format);  // To get the blocks exactly like the course
+$PAGE->add_body_class('path-user');                     // So we can style it independently
+$PAGE->set_other_editing_capability('moodle/course:manageactivities');
 
-    $strpersonalprofile = get_string('personalprofile');
-    $strparticipants = get_string("participants");
-    $struser = get_string("user");
+$isparent = false;
 
-    $fullname = fullname($user, has_capability('moodle/site:viewfullnames', $coursecontext));
+if (!$currentuser
+  and $DB->record_exists('role_assignments', array('userid'=>$USER->id, 'contextid'=>$usercontext->id))
+  and has_capability('moodle/user:viewdetails', $usercontext)) {
+    // TODO: very ugly hack - do not force "parents" to enrol into course their child is enrolled in,
+    //       this way they may access the profile where they get overview of grades and child activity in course,
+    //       please note this is just a guess!
+    require_login();
+    $isparent = true;
+    $PAGE->navigation->set_userid_for_parent_checks($id);
+} else {
+    // normal course
+    require_login($course);
+    // what to do with users temporary accessing this course? should they see the details?
+}
 
-    $navlinks = array();
-    if (has_capability('moodle/course:viewparticipants', $coursecontext) || has_capability('moodle/site:viewparticipants', $systemcontext)) {
-        $navlinks[] = array('name' => $strparticipants, 'link' => "index.php?id=$course->id", 'type' => 'misc');
-    }
+$strpersonalprofile = get_string('personalprofile');
+$strparticipants = get_string("participants");
+$struser = get_string("user");
 
-/// If the user being shown is not ourselves, then make sure we are allowed to see them!
+$fullname = fullname($user, has_capability('moodle/site:viewfullnames', $coursecontext));
 
-    if (!$currentuser) {
-        if ($course->id == SITEID) {  // Reduce possibility of "browsing" userbase at site level
-            if ($CFG->forceloginforprofiles and !isteacherinanycourse()
-                    and !isteacherinanycourse($user->id)
-                    and !has_capability('moodle/user:viewdetails', $usercontext)) {  // Teachers can browse and be browsed at site level. If not forceloginforprofiles, allow access (bug #4366)
+/// Now test the actual capabilities and enrolment in course
+if ($currentuser) {
+    // me
+    if (!is_viewing($coursecontext) && !is_enrolled($coursecontext)) { // Need to have full access to a course to see the rest of own info
+        echo $OUTPUT->header();
+        echo $OUTPUT->heading(get_string('notenrolled', '', $fullname));
+        if (!empty($_SERVER['HTTP_REFERER'])) {
+            echo $OUTPUT->continue_button($_SERVER['HTTP_REFERER']);
+        }
+        echo $OUTPUT->footer();
+        die;
+    }
 
-                $navlinks[] = array('name' => $struser, 'link' => null, 'type' => 'misc');
-                $navigation = build_navigation($navlinks);
+} else {
+    // somebody else
+    $PAGE->set_title("$strpersonalprofile: ");
+    $PAGE->set_heading("$strpersonalprofile: ");
 
-                print_header("$strpersonalprofile: ", "$strpersonalprofile: ", $navigation, "", "", true, "&nbsp;", navmenu($course));
-                print_heading(get_string('usernotavailable', 'error'));
-                print_footer($course);
-                exit;
-            }
-        } else {   // Normal course
-            // check capabilities
-            if (!has_capability('moodle/user:viewdetails', $coursecontext) && 
-                !has_capability('moodle/user:viewdetails', $usercontext)) {
+    // check course level capabilities
+    if (!has_capability('moodle/user:viewdetails', $coursecontext) && // normal enrolled user or mnager
+        !has_capability('moodle/user:viewdetails', $usercontext)) {   // usually parent
                 print_error('cannotviewprofile');
             }
 
-            if (!has_capability('moodle/course:view', $coursecontext, $user->id, false)) {
+    if (!is_enrolled($coursecontext, $user->id)) {
+        // TODO: the only potential problem is that managers and inspectors might post in forum, but the link
+        //       to profile would not work - maybe a new capability - moodle/user:freely_acessile_profile_for_anybody
+        //       or test for course:inspect capability
                 if (has_capability('moodle/role:assign', $coursecontext)) {
-                    $navlinks[] = array('name' => $fullname, 'link' => null, 'type' => 'misc');
-                    $navigation = build_navigation($navlinks);
-                    print_header("$strpersonalprofile: ", "$strpersonalprofile: ", $navigation, "", "", true, "&nbsp;", navmenu($course));
-                    print_heading(get_string('notenrolled', '', $fullname));
+            $PAGE->navbar->add($fullname);
+            echo $OUTPUT->header();
+            echo $OUTPUT->heading(get_string('notenrolled', '', $fullname));
                 } else {
-                    $navlinks[] = array('name' => $struser, 'link' => null, 'type' => 'misc');
-                    $navigation = build_navigation($navlinks);
-                    print_header("$strpersonalprofile: ", "$strpersonalprofile: ", $navigation, "", "", true, "&nbsp;", navmenu($course));
-                    print_heading(get_string('notenrolledprofile'));
+            echo $OUTPUT->header();
+            $PAGE->navbar->add($struser);
+            echo $OUTPUT->heading(get_string('notenrolledprofile'));
                 }
-                print_continue($_SERVER['HTTP_REFERER']);
-                print_footer($course);
-                exit;
+        if (!empty($_SERVER['HTTP_REFERER'])) {
+            echo $OUTPUT->continue_button($_SERVER['HTTP_REFERER']);
             }
+        echo $OUTPUT->footer();
+        exit;
         }
 
-
-        // If groups are in use, make sure we can see that group
-        if (groups_get_course_groupmode($course) == SEPARATEGROUPS and !has_capability('moodle/site:accessallgroups', $coursecontext)) {
-            require_login();
-
-            ///this is changed because of mygroupid
-            $gtrue = (bool)groups_get_all_groups($course->id, $user->id);
-            if (!$gtrue) {
-                $navigation = build_navigation($navlinks);
-                print_header("$strpersonalprofile: ", "$strpersonalprofile: ", $navigation, "", "", true, "&nbsp;", navmenu($course));
-                print_error("groupnotamember", '', "../course/view.php?id=$course->id");
+    // If groups are in use and enforced throughout the course, then make sure we can meet in at least one course level group
+    if (groups_get_course_groupmode($course) == SEPARATEGROUPS and $course->groupmodeforce
+      and !has_capability('moodle/site:accessallgroups', $coursecontext) and !has_capability('moodle/site:accessallgroups', $coursecontext, $user->id)) {
+        if (!isloggedin() or isguestuser()) {
+            // do not use require_login() here because we might have already used require_login($course)
+            redirect(get_login_url());
             }
+        $mygroups = array_keys(groups_get_all_groups($course->id, $USER->id, $course->defaultgroupingid, 'g.id, g.name'));
+        $usergroups = array_keys(groups_get_all_groups($course->id, $user->id, $course->defaultgroupingid, 'g.id, g.name'));
+        if (!array_intersect($mygroups, $usergroups)) {
+            print_error("groupnotamember", '', "../course/view.php?id=$course->id");
         }
     }
+}
 
 
 /// We've established they can see the user's name at least, so what about the rest?
 
-    $navlinks[] = array('name' => $fullname, 'link' => null, 'type' => 'misc');
+if (!$currentuser) {
+    $PAGE->navigation->extend_for_user($user);
+    if ($node = $PAGE->settingsnav->get('userviewingsettings'.$user->id)) {
+        $node->forceopen = true;
+    }
+} else if ($node = $PAGE->settingsnav->get('usercurrentsettings', navigation_node::TYPE_CONTAINER)) {
+    $node->forceopen = true;
+}
+if ($node = $PAGE->settingsnav->get('courseadmin')) {
+    $node->forceopen = false;
+}
 
-    $navigation = build_navigation($navlinks);
+$PAGE->set_title("$course->fullname: $strpersonalprofile: $fullname");
+$PAGE->set_heading($course->fullname);
+$PAGE->set_pagelayout('standard');
+echo $OUTPUT->header();
 
-    print_header("$course->fullname: $strpersonalprofile: $fullname", $course->fullname,
-                 $navigation, "", "", true, "&nbsp;", navmenu($course));
+echo '<div class="userprofile">';
 
+echo $OUTPUT->heading(fullname($user).' ('.format_string($course->shortname, true, array('context' => $coursecontext)).')');
 
-    if (($course->id != SITEID) and ! isguest() ) {   // Need to have access to a course to see that info
-        if (!has_capability('moodle/course:view', $coursecontext, $user->id)) {
-            print_heading(get_string('notenrolled', '', $fullname));
-            print_footer($course);
-            die;
-        }
-    }
-
-    if ($user->deleted) {
-        print_heading(get_string('userdeleted'));
+if ($user->deleted) {
+    echo $OUTPUT->heading(get_string('userdeleted'));
         if (!has_capability('moodle/user:update', $coursecontext)) {
-            print_footer($course);
+        echo $OUTPUT->footer();
             die;
         }
-    }
+}
 
 /// OK, security out the way, now we are showing the user
 
-    add_to_log($course->id, "user", "view", "view.php?id=$user->id&course=$course->id", "$user->id");
-
-    if ($course->id != SITEID) {
-        $user->lastaccess = false;
-        if ($lastaccess = get_record('user_lastaccess', 'userid', $user->id, 'courseid', $course->id)) {
-            $user->lastaccess = $lastaccess->timeaccess;
-        }
-    }
-
+add_to_log($course->id, "user", "view", "view.php?id=$user->id&course=$course->id", "$user->id");
 
 /// Get the hidden field list
-    if (has_capability('moodle/user:viewhiddendetails', $coursecontext)) {
+if (has_capability('moodle/user:viewhiddendetails', $coursecontext)) {
         $hiddenfields = array();
-    } else {
+} else {
         $hiddenfields = array_flip(explode(',', $CFG->hiddenuserfields));
-    }
+}
 
-/// Print tabs at top
-/// This same call is made in:
-///     /user/view.php
-///     /user/edit.php
-///     /course/user.php
+if (is_mnet_remote_user($user)) {
+    $sql = "SELECT h.id, h.name, h.wwwroot,
+                   a.name as application, a.display_name
+              FROM {mnet_host} h, {mnet_application} a
+             WHERE h.id = ? AND h.applicationid = a.id";
 
-    $currenttab = 'profile';
-    $showroles = 1;
-    if (!$user->deleted) {
-        include('tabs.php');
-    }
-
-    if (is_mnet_remote_user($user)) {
-        $sql = "
-             SELECT DISTINCT
-                 h.id,
-                 h.name,
-                 h.wwwroot,
-                 a.name as application,
-                 a.display_name
-             FROM
-                 {$CFG->prefix}mnet_host h,
-                 {$CFG->prefix}mnet_application a
-             WHERE
-                 h.id = '{$user->mnethostid}' AND
-                 h.applicationid = a.id
-             ORDER BY
-                 a.display_name,
-                 h.name";
-
-        $remotehost = get_record_sql($sql);
-
-        echo '<p class="errorboxcontent">'.get_string('remoteappuser', $remotehost->application)." <br />\n";
-        if ($USER->id == $user->id) {
-            if ($remotehost->application =='moodle') {
-                echo "Remote {$remotehost->display_name}: <a href=\"{$remotehost->wwwroot}/user/edit.php\">{$remotehost->name}</a> ".get_string('editremoteprofile')." </p>\n";
-            } else {
-                echo "Remote {$remotehost->display_name}: <a href=\"{$remotehost->wwwroot}/\">{$remotehost->name}</a> ".get_string('gotoyourserver')." </p>\n";
-            }
-        } else {
-            echo "Remote {$remotehost->display_name}: <a href=\"{$remotehost->wwwroot}/\">{$remotehost->name}</a></p>\n";
-        }
-    }
+    $remotehost = $DB->get_record_sql($sql, array($user->mnethostid));
+    $a = new stdclass();
+    $a->remotetype = $remotehost->display_name;
+    $a->remotename = $remotehost->name;
+    $a->remoteurl  = $remotehost->wwwroot;
 
-    echo '<table width="80%" class="userinfobox" summary="">';
-    echo '<tr>';
-    echo '<td class="side">';
-    print_user_picture($user, $course->id, $user->picture, true, false, false);
-    echo '</td><td class="content">';
+    echo $OUTPUT->box(get_string('remoteuserinfo', 'mnet', $a), 'remoteuserinfo');
+}
 
-    // Print the description
+echo '<div class="userprofilebox clearfix"><div class="profilepicture">';
+echo $OUTPUT->user_picture($user, array('size'=>100));
+echo '</div>';
 
-    if ($user->description && !isset($hiddenfields['description'])) {
-        $has_courseid = ($course->id != SITEID);
-        if (!$has_courseid && !empty($CFG->profilesforenrolledusersonly) && !record_exists('role_assignments', 'userid', $id)) {
-            echo get_string('profilenotshown', 'moodle').'<hr />';
+// Print the description
+echo '<div class="descriptionbox"><div class="description">';
+if ($user->description && !isset($hiddenfields['description'])) {
+    if (!empty($CFG->profilesforenrolledusersonly) && !$DB->record_exists('role_assignments', array('userid'=>$id))) {
+        echo get_string('profilenotshown', 'moodle');
         } else {
-            echo format_text($user->description, FORMAT_MOODLE)."<hr />";
-        }
-    }
-
-    // Print all the little details in a list
-
-    echo '<table class="list">';
-
-    if (! isset($hiddenfields['country']) && $user->country) {
-        $countries = get_list_of_countries();
-        print_row(get_string('country') . ':', $countries[$user->country]);
+        if ($courseid == SITEID) {
+            $user->description = file_rewrite_pluginfile_urls($user->description, 'pluginfile.php', $usercontext->id, 'user', 'profile', null);
+        } else {
+            // we have to make a little detour thought the course context to verify the access control for course profile
+            $user->description = file_rewrite_pluginfile_urls($user->description, 'pluginfile.php', $coursecontext->id, 'user', 'profile', $user->id);
     }
-
-    if (! isset($hiddenfields['city']) && $user->city) {
-        print_row(get_string('city') . ':', $user->city);
+        $options = array('overflowdiv'=>true);
+        echo format_text($user->description, $user->descriptionformat, $options);
     }
+}
+echo '</div>';
 
-    if (has_capability('moodle/user:viewhiddendetails', $coursecontext)) {
-        if ($user->address) {
-            print_row(get_string("address").":", "$user->address");
-        }
-        if ($user->phone1) {
-            print_row(get_string("phone").":", "$user->phone1");
-        }
-        if ($user->phone2) {
-            print_row(get_string("phone2").":", "$user->phone2");
-        }
-    }
 
-    if ($user->maildisplay == 1 or
-       ($user->maildisplay == 2 and ($course->id != SITEID) and !isguest()) or
-       has_capability('moodle/course:useremail', $coursecontext)) {
+// Print all the little details in a list
 
-        $emailswitch = '';
+echo '<table class="list" summary="">';
 
-        if (has_capability('moodle/course:useremail', $coursecontext) or $currentuser) {   /// Can use the enable/disable email stuff
-            if (!empty($enable) and confirm_sesskey()) {     /// Recieved a parameter to enable the email address
-                set_field('user', 'emailstop', 0, 'id', $user->id);
-                $user->emailstop = 0;
-            }
-            if (!empty($disable) and confirm_sesskey()) {     /// Recieved a parameter to disable the email address
-                set_field('user', 'emailstop', 1, 'id', $user->id);
-                $user->emailstop = 1;
-            }
-        }
+//checks were performed above that ensure that if we've got to here either the user
+//is viewing their own profile ($USER->id == $user->id) or $user is enrolled in the course
+if ($currentuser
+   or $user->maildisplay == 1 //allow everyone to see email address
+   or ($user->maildisplay == 2 && is_enrolled($coursecontext, $USER)) //fellow course members can see email. Already know $user is enrolled
+   or has_capability('moodle/course:useremail', $coursecontext)) {
+    print_row(get_string("email").":", obfuscate_mailto($user->email, ''));
+}
 
-        if (has_capability('moodle/course:useremail', $coursecontext)) {   /// Can use the enable/disable email stuff
-            if ($user->emailstop) {
-                $switchparam = 'enable';
-                $switchtitle = get_string('emaildisable');
-                $switchclick = get_string('emailenableclick');
-                $switchpix   = 'emailno.gif';
+// Show last time this user accessed this course
+if (!isset($hiddenfields['lastaccess'])) {
+    if ($lastaccess = $DB->get_record('user_lastaccess', array('userid'=>$user->id, 'courseid'=>$course->id))) {
+        $datestring = userdate($lastaccess->timeaccess)."&nbsp; (".format_time(time() - $lastaccess->timeaccess).")";
             } else {
-                $switchparam = 'disable';
-                $switchtitle = get_string('emailenable');
-                $switchclick = get_string('emaildisableclick');
-                $switchpix   = 'email.gif';
-            }
-            $emailswitch = "&nbsp;<a title=\"$switchclick\" ".
-                           "href=\"view.php?id=$user->id&amp;course=$course->id&amp;$switchparam=1&amp;sesskey=".sesskey()."\">".
-                           "<img src=\"$CFG->pixpath/t/$switchpix\" alt=\"$switchclick\" /></a>";
-
-        } else if ($currentuser) {         /// Can only re-enable an email this way
-            if ($user->emailstop) {   // Include link that tells how to re-enable their email
-                $switchparam = 'enable';
-                $switchtitle = get_string('emaildisable');
-                $switchclick = get_string('emailenableclick');
-
-                $emailswitch = "&nbsp;(<a title=\"$switchclick\" ".
-                               "href=\"view.php?id=$user->id&amp;course=$course->id&amp;enable=1&amp;sesskey=".sesskey()."\">$switchtitle</a>)";
-            }
+        $datestring = get_string("never");
         }
+    print_row(get_string("lastaccess").":", $datestring);
+}
 
-        print_row(get_string("email").":", obfuscate_mailto($user->email, '', $user->emailstop)."$emailswitch");
-    }
+// Show roles in this course
+if ($rolestring = get_user_roles_in_course($id, $course->id)) {
+    print_row(get_string('roles').':', $rolestring);
+}
 
-    if ($user->url && !isset($hiddenfields['webpage'])) {
-        $url = $user->url;
-        if (strpos($user->url, '://') === false) {
-            $url = 'http://'. $url;
-        }
-        print_row(get_string("webpage") .":", "<a href=\"$url\">$user->url</a>");
+// Show groups this user is in
+if (!isset($hiddenfields['groups'])) {
+    $accessallgroups = has_capability('moodle/site:accessallgroups', $coursecontext);
+    if ($usergroups = groups_get_all_groups($course->id, $user->id)) {
+        $groupstr = '';
+        foreach ($usergroups as $group){
+            if ($course->groupmode == SEPARATEGROUPS and !$accessallgroups and $user->id != $USER->id) {
+                if (!groups_is_member($group->id, $user->id)) {
+                    continue;
     }
-
-    if ($user->icq && !isset($hiddenfields['icqnumber'])) {
-        print_row(get_string('icqnumber').':',"<a href=\"http://web.icq.com/wwp?uin=$user->icq\">$user->icq <img src=\"http://web.icq.com/whitepages/online?icq=$user->icq&amp;img=5\" alt=\"\" /></a>");
     }
 
-    if ($user->skype && !isset($hiddenfields['skypeid'])) {
-        print_row(get_string('skypeid').':','<a href="callto:'.urlencode($user->skype).'">'.s($user->skype).
-            ' <img src="http://mystatus.skype.com/smallicon/'.urlencode($user->skype).'" alt="'.get_string('status').'" '.
-            ' /></a>');
+            if ($course->groupmode != NOGROUPS) {
+                $groupstr .= ' <a href="'.$CFG->wwwroot.'/user/index.php?id='.$course->id.'&amp;group='.$group->id.'">'.format_string($group->name).'</a>,';
+            } else {
+                $groupstr .= ' '.format_string($group->name); // the user/index.php shows groups only when course in group mode
     }
-    if ($user->yahoo && !isset($hiddenfields['yahooid'])) {
-        print_row(get_string('yahooid').':', '<a href="http://edit.yahoo.com/config/send_webmesg?.target='.urlencode($user->yahoo).'&amp;.src=pg">'.s($user->yahoo)." <img src=\"http://opi.yahoo.com/online?u=".urlencode($user->yahoo)."&m=g&t=0\" alt=\"\"></a>");
     }
-    if ($user->aim && !isset($hiddenfields['aimid'])) {
-        print_row(get_string('aimid').':', '<a href="aim:goim?screenname='.s($user->aim).'">'.s($user->aim).'</a>');
+        if ($groupstr !== '') {
+            print_row(get_string("group").":", rtrim($groupstr, ', '));
     }
-    if ($user->msn && !isset($hiddenfields['msnid'])) {
-        print_row(get_string('msnid').':', s($user->msn));
     }
+}
 
-    /// Print the Custom User Fields
-    profile_display_fields($user->id);
-
-
-    if (!isset($hiddenfields['mycourses'])) {
-        if ($mycourses = get_my_courses($user->id, 'visible DESC,sortorder ASC', null, false, 21)) {
-            $shown=0;
+// Show other courses they may be in
+if (!isset($hiddenfields['mycourses'])) {
+    if ($mycourses = enrol_get_users_courses($user->id, true, NULL, 'visible DESC,sortorder ASC')) {
+        $shown = 0;
             $courselisting = '';
             foreach ($mycourses as $mycourse) {
                 if ($mycourse->category) {
+                $ccontext = get_context_instance(CONTEXT_COURSE, $mycourse->id);;
+                $cfullname = format_string($mycourse->fullname, true, array('context' => $ccontext));
                     if ($mycourse->id != $course->id){
                         $class = '';
                         if ($mycourse->visible == 0) {
-                            // get_my_courses will filter courses $USER cannot see
-                            // if we get one with visible 0 it just means it's hidden
-                            // ... but not from $USER
+                        if (!has_capability('moodle/course:viewhiddencourses', $ccontext)) {
+                            continue;
+                        }
                             $class = 'class="dimmed"';
                         }
                         $courselisting .= "<a href=\"{$CFG->wwwroot}/user/view.php?id={$user->id}&amp;course={$mycourse->id}\" $class >"
-                            . format_string($mycourse->fullname) . "</a>, ";
-                    }
-                    else {
-                        $courselisting .= format_string($mycourse->fullname) . ", ";
+                        . $cfullname . "</a>, ";
+                } else {
+                    $courselisting .= $cfullname . ", ";
+                    $PAGE->navbar->add($cfullname);
                     }
                 }
                 $shown++;
-                if($shown==20) {
-                    $courselisting.= "...";
+            if ($shown >= 20) {
+                $courselisting .= "...";
                     break;
                 }
             }
-            print_row(get_string('courses').':', rtrim($courselisting,', '));
-        }
-    }
-    if (!isset($hiddenfields['firstaccess'])) {
-        if ($user->firstaccess) {
-            $datestring = userdate($user->firstaccess)."&nbsp; (".format_time(time() - $user->firstaccess).")";
-        } else {
-            $datestring = get_string("never");
-        }
-        print_row(get_string("firstaccess").":", $datestring);
-    }
-    if (!isset($hiddenfields['lastaccess'])) {
-        if ($user->lastaccess) {
-            $datestring = userdate($user->lastaccess)."&nbsp; (".format_time(time() - $user->lastaccess).")";
-        } else {
-            $datestring = get_string("never");
-        }
-        print_row(get_string("lastaccess").":", $datestring);
-    }
-/// printing roles
-    
-    if ($rolestring = get_user_roles_in_context($id, $coursecontext)) {
-        print_row(get_string('roles').':', format_string($rolestring, false));
-    }
-
-/// Printing groups
-    if (!isset($hiddenfields['groups'])) {
-        $isseparategroups = ($course->groupmode == SEPARATEGROUPS and !has_capability('moodle/site:accessallgroups', $coursecontext));
-        if (!$isseparategroups){
-            if ($usergroups = groups_get_all_groups($course->id, $user->id)){
-                $groupstr = '';
-                foreach ($usergroups as $group){
-                    $groupstr .= ' <a href="'.$CFG->wwwroot.'/user/index.php?id='.$course->id.'&amp;group='.$group->id.'">'.format_string($group->name).'</a>,';
-                }
-                print_row(get_string("group").":", rtrim($groupstr, ', '));
-            }
-        }
-    }
-/// End of printing groups
-
-/// Printing Interests
-	if( !empty($CFG->usetags)) {
-	    if ( $interests = tag_get_tags_csv('user', $user->id) ) { 
-            print_row(get_string('interests') .": ", $interests);
-        }
-    }
-/// End of Printing Interests
-
-    echo "</table>";
-
-    echo "</td></tr></table>";
-
-    $userauth = get_auth_plugin($user->auth);
-
-    $passwordchangeurl = false;
-    if ($currentuser and $userauth->can_change_password() and !isguestuser() and has_capability('moodle/user:changeownpassword', $systemcontext)) {
-        if (!$passwordchangeurl = $userauth->change_password_url()) {
-            if (empty($CFG->loginhttps)) {
-                $passwordchangeurl = "$CFG->wwwroot/login/change_password.php";
-            } else {
-                $passwordchangeurl = str_replace('http:', 'https:', $CFG->wwwroot.'/login/change_password.php');
-            }
-        }
+        print_row(get_string('courseprofiles').':', rtrim($courselisting,', '));
     }
+}
 
-//  Print other functions
-    echo '<div class="buttons">';
-
-    if ($passwordchangeurl) {
-        $params = array('id'=>$course->id);
+echo "</table></div></div>";
 
-        if (!empty($USER->realuser)) {
-            $passwordchangeurl = ''; // do not use actual change password url - might contain sensitive data
-        } else {
-            $parts = explode('?', $passwordchangeurl);
-            $passwordchangeurl = reset($parts);
-            $after = next($parts);
-            preg_match_all('/([^&=]+)=([^&=]+)/', $after, $matches);
-            if (count($matches)) {
-                foreach($matches[0] as $key=>$match) {
-                    $params[$matches[1][$key]] = $matches[2][$key];
-                }
-            }
-        }
-        echo "<form action=\"$passwordchangeurl\" method=\"get\">";
-        echo "<div>";
-        foreach($params as $key=>$value) {
-            echo '<input type="hidden" name="'.$key.'" value="'.s($value).'" />';
-        }
-        if (!empty($USER->realuser)) {
-            // changing of password when "Logged in as" is not allowed
-            echo "<input type=\"submit\" value=\"".get_string("changepassword")."\" disabled=\"disabled\" />";
-        } else {
-            echo "<input type=\"submit\" value=\"".get_string("changepassword")."\" />";
-        }
-        echo "</div>";
-        echo "</form>";
-    }
+// Print messaging link if allowed
+if (isloggedin() && has_capability('moodle/site:sendmessage', $usercontext)
+    && !empty($CFG->messaging) && !isguestuser() && !isguestuser($user) && ($USER->id != $user->id)) {
+    echo '<div class="messagebox">';
+    echo '<a href="'.$CFG->wwwroot.'/message/index.php?id='.$user->id.'">'.get_string('messageselectadd').'</a>';
+    echo '</div>';
+}
 
-    if ($course->id != SITEID && empty($course->metacourse)) {   // Mostly only useful at course level
+if ($currentuser || has_capability('moodle/user:viewdetails', $usercontext) || has_coursecontact_role($id)) {
+    echo '<div class="fullprofilelink">';
+    echo html_writer::link($CFG->wwwroot.'/user/profile.php?id='.$id, get_string('fullprofile'));
+    echo '</div>';
+}
 
-        $canunenrol = false;
+/// TODO Add more useful overview info for teachers here, see below
 
-        if ($user->id == $USER->id) { // Myself
-            $canunenrol = has_capability('moodle/course:view', $coursecontext, NULL) &&              // Course participant
-                          has_capability('moodle/role:unassignself', $coursecontext, NULL, false) && // Can unassign myself
-                          get_user_roles($coursecontext, $user->id, false);                          // Must have role in course
+/// Show links to notes made about this student (must click to display, for privacy)
 
-        } else if (has_capability('moodle/role:assign', $coursecontext, NULL)) { // I can assign roles
-            if ($roles = get_user_roles($coursecontext, $user->id, false)) {
-                $canunenrol = true;
-                foreach($roles as $role) {
-                    if (!user_can_assign($coursecontext, $role->roleid)) {
-                        $canunenrol = false; // I can not unassign all roles in this course :-(
-                        break;
-                    }
-                }
-            }
-        }
+/// Recent comments made in this course
 
-        if ($canunenrol) {
-            echo '<form action="'.$CFG->wwwroot.'/course/unenrol.php" method="get">';
-            echo '<div>';
-            echo '<input type="hidden" name="id" value="'.$course->id.'" />';
-            echo '<input type="hidden" name="user" value="'.$user->id.'" />';
-            echo '<input type="submit" value="'.s(get_string('unenrolme', '', $course->shortname)).'" />';
-            echo '</div>';
-            echo '</form>';
-        }
-    }
+/// Recent blogs associated with this course and items in it
 
-    if (!$user->deleted and $USER->id != $user->id  && empty($USER->realuser) && has_capability('moodle/user:loginas', $coursecontext) &&
-                                 ! has_capability('moodle/site:doanything', $coursecontext, $user->id, false)) {
-        echo '<form action="'.$CFG->wwwroot.'/course/loginas.php" method="get">';
-        echo '<div>';
-        echo '<input type="hidden" name="id" value="'.$course->id.'" />';
-        echo '<input type="hidden" name="user" value="'.$user->id.'" />';
-        echo '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
-        echo '<input type="submit" value="'.get_string('loginas').'" />';
-        echo '</div>';
-        echo '</form>';
-    }
 
-    if (!$user->deleted and !empty($CFG->messaging) and !isguest() and has_capability('moodle/site:sendmessage', get_context_instance(CONTEXT_SYSTEM))) {
-        if (!empty($USER->id) and ($USER->id == $user->id)) {
-            if ($countmessages = count_records('message', 'useridto', $user->id)) {
-                $messagebuttonname = get_string("messages", "message")."($countmessages)";
-            } else {
-                $messagebuttonname = get_string("messages", "message");
-            }
-            echo "<form onclick=\"this.target='message'\" action=\"../message/index.php\" method=\"get\">";
-            echo "<div>";
-            echo "<input type=\"submit\" value=\"$messagebuttonname\" onclick=\"return openpopup('/message/index.php', 'message', 'menubar=0,location=0,scrollbars,status,resizable,width=400,height=500', 0);\" />";
-            echo "</div>";
-            echo "</form>";
-        } else {
-            echo "<form onclick=\"this.target='message$user->id'\" action=\"../message/discussion.php\" method=\"get\">";
-            echo "<div>";
-            echo "<input type=\"hidden\" name=\"id\" value=\"$user->id\" />";
-            echo "<input type=\"submit\" value=\"".get_string("sendmessage", "message")."\" onclick=\"return openpopup('/message/discussion.php?id=$user->id', 'message_$user->id', 'menubar=0,location=0,scrollbars,status,resizable,width=400,height=500', 0);\" />";
-            echo "</div>";
-            echo "</form>";
-        }
-    }
-    // Authorize.net: User Payments
-    if ($course->enrol == 'authorize' || (empty($course->enrol) && $CFG->enrol == 'authorize')) {
-        echo "<form action=\"../enrol/authorize/index.php\" method=\"get\">";
-        echo "<div>";
-        echo "<input type=\"hidden\" name=\"course\" value=\"$course->id\" />";
-        echo "<input type=\"hidden\" name=\"user\" value=\"$user->id\" />";
-        echo "<input type=\"submit\" value=\"".get_string('payments')."\" />";
-        echo "</div>";
-        echo "</form>";
-    }
-    echo "</div>\n";
 
-    if ($CFG->debugdisplay && debugging('', DEBUG_DEVELOPER) && $USER->id == $user->id) {  // Show user object
-        echo '<hr />';
-        print_heading('DEBUG MODE:  User session variables');
-        print_object($USER);
-    }
+echo '</div>';  // userprofile class
 
-    print_footer($course);
+echo $OUTPUT->footer();
 
 /// Functions ///////
 
@@ -552,4 +351,4 @@ function print_row($left, $right) {
     echo "\n<tr><td class=\"label c0\">$left</td><td class=\"info c1\">$right</td></tr>\n";
 }
 
-?>
+
