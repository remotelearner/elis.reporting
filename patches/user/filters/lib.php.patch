diff --git a/user/filters/lib.php b/user/filters/lib.php
index c778ebf..91bc113 100644
--- a/user/filters/lib.php
+++ b/user/filters/lib.php
@@ -1,4 +1,4 @@
-<?php //$Id$
+<?php
 
 require_once($CFG->dirroot.'/user/filters/text.php');
 require_once($CFG->dirroot.'/user/filters/date.php');
@@ -8,8 +8,9 @@ require_once($CFG->dirroot.'/user/filters/courserole.php');
 require_once($CFG->dirroot.'/user/filters/globalrole.php');
 require_once($CFG->dirroot.'/user/filters/profilefield.php');
 require_once($CFG->dirroot.'/user/filters/yesno.php');
+require_once($CFG->dirroot.'/user/filters/cohort.php');
 require_once($CFG->dirroot.'/user/filters/user_filter_forms.php');
-
+require_once($CFG->dirroot.'/user/filters/checkbox.php');
 
 /**
  * User filtering wrapper class.
@@ -34,8 +35,9 @@ class user_filtering {
 
         if (empty($fieldnames)) {
             $fieldnames = array('realname'=>0, 'lastname'=>1, 'firstname'=>1, 'email'=>1, 'city'=>1, 'country'=>1,
-                                'confirmed'=>1, 'profile'=>1, 'courserole'=>1, 'systemrole'=>1,
-                                'firstaccess'=>1, 'lastaccess'=>1, 'lastlogin'=>1, 'timemodified'=>1, 'username'=>1, 'auth'=>1, 'mnethostid'=>1);
+                                'confirmed'=>1, 'profile'=>1, 'courserole'=>1, 'systemrole'=>1, 'cohort'=>1,
+                                'firstaccess'=>1, 'lastaccess'=>1, 'neveraccessed'=>1, 'timemodified'=>1,
+                                'nevermodified'=>1, 'username'=>1, 'auth'=>1, 'mnethostid'=>1);
         }
 
         $this->_fields  = array();
@@ -48,7 +50,7 @@ class user_filtering {
 
         // fist the new filter form
         $this->_addform = new user_add_filter_form($baseurl, array('fields'=>$this->_fields, 'extraparams'=>$extraparams));
-        if ($adddata = $this->_addform->get_data(false)) {
+        if ($adddata = $this->_addform->get_data()) {
             foreach($this->_fields as $fname=>$field) {
                 $data = $field->check_data($adddata);
                 if ($data === false) {
@@ -66,7 +68,7 @@ class user_filtering {
 
         // now the active filters
         $this->_activeform = new user_active_filter_form($baseurl, array('fields'=>$this->_fields, 'extraparams'=>$extraparams));
-        if ($adddata = $this->_activeform->get_data(false)) {
+        if ($adddata = $this->_activeform->get_data()) {
             if (!empty($adddata->removeall)) {
                 $SESSION->user_filtering = array();
 
@@ -97,35 +99,37 @@ class user_filtering {
      * @return object filter
      */
     function get_field($fieldname, $advanced) {
-        global $USER, $CFG, $SITE;
+        global $USER, $CFG, $DB, $SITE;
 
         switch ($fieldname) {
             case 'username':    return new user_filter_text('username', get_string('username'), $advanced, 'username');
-            case 'realname':    return new user_filter_text('realname', get_string('fullname'), $advanced, sql_fullname());
+            case 'realname':    return new user_filter_text('realname', get_string('fullnameuser'), $advanced, $DB->sql_fullname());
             case 'lastname':    return new user_filter_text('lastname', get_string('lastname'), $advanced, 'lastname');
             case 'firstname':    return new user_filter_text('firstname', get_string('firstname'), $advanced, 'firstname');
             case 'email':       return new user_filter_text('email', get_string('email'), $advanced, 'email');
             case 'city':        return new user_filter_text('city', get_string('city'), $advanced, 'city');
-            case 'country':     return new user_filter_select('country', get_string('country'), $advanced, 'country', get_list_of_countries(), $USER->country);
+            case 'country':     return new user_filter_select('country', get_string('country'), $advanced, 'country', get_string_manager()->get_list_of_countries(), $USER->country);
             case 'confirmed':   return new user_filter_yesno('confirmed', get_string('confirmed', 'admin'), $advanced, 'confirmed');
             case 'profile':     return new user_filter_profilefield('profile', get_string('profile'), $advanced);
             case 'courserole':  return new user_filter_courserole('courserole', get_string('courserole', 'filters'), $advanced);
             case 'systemrole':  return new user_filter_globalrole('systemrole', get_string('globalrole', 'role'), $advanced);
             case 'firstaccess': return new user_filter_date('firstaccess', get_string('firstaccess', 'filters'), $advanced, 'firstaccess');
             case 'lastaccess':  return new user_filter_date('lastaccess', get_string('lastaccess'), $advanced, 'lastaccess');
-            case 'lastlogin':   return new user_filter_date('lastlogin', get_string('lastlogin'), $advanced, 'lastlogin');
+            case 'neveraccessed': return new user_filter_checkbox('neveraccessed', get_string('neveraccessed', 'filters'), $advanced, 'firstaccess', array('lastaccess_sck', 'lastaccess_eck', 'firstaccess_eck', 'firstaccess_sck'));
             case 'timemodified': return new user_filter_date('timemodified', get_string('lastmodified'), $advanced, 'timemodified');
+            case 'nevermodified': return new user_filter_checkbox('nevermodified', get_string('nevermodified', 'filters'), $advanced, array('timemodified', 'timecreated'), array('timemodified_sck', 'timemodified_eck'));
+            case 'cohort':      return new user_filter_cohort($advanced);
             case 'auth':
-                $plugins = get_list_of_plugins('auth');
+                $plugins = get_plugin_list('auth');
                 $choices = array();
-                foreach ($plugins as $auth) {
-                    $choices[$auth] = auth_get_plugin_title ($auth);
+                foreach ($plugins as $auth => $unused) {
+                    $choices[$auth] = get_string('pluginname', "auth_{$auth}");
                 }
                 return new user_filter_simpleselect('auth', get_string('authentication'), $advanced, 'auth', $choices);
 
             case 'mnethostid':
                 // include all hosts even those deleted or otherwise problematic
-                if (!$hosts = get_records('mnet_host', '', '', 'id', 'id, wwwroot, name')) {
+                if (!$hosts = $DB->get_records('mnet_host', null, 'id', 'id, wwwroot, name')) {
                     $hosts = array();
                 }
                 $choices = array();
@@ -139,7 +143,7 @@ class user_filtering {
                         $choices[$host->id] = $host->name.' ('.$host->wwwroot.')';
                     }
                 }
-                if ($usedhosts = get_fieldset_sql("SELECT DISTINCT mnethostid FROM {$CFG->prefix}user WHERE deleted=0")) {
+                if ($usedhosts = $DB->get_fieldset_sql("SELECT DISTINCT mnethostid FROM {user} WHERE deleted=0")) {
                     foreach ($usedhosts as $hostid) {
                         if (empty($hosts[$hostid])) {
                             $choices[$hostid] = 'id: '.$hostid.' ('.get_string('error').')';
@@ -149,7 +153,7 @@ class user_filtering {
                 if (count($choices) < 2) {
                     return null; // filter not needed
                 }
-                return new user_filter_simpleselect('mnethostid', 'mnethostid', $advanced, 'mnethostid', $choices);
+                return new user_filter_simpleselect('mnethostid', get_string('mnetidprovider', 'mnet'), $advanced, 'mnethostid', $choices);
 
             default:            return null;
         }
@@ -158,15 +162,17 @@ class user_filtering {
     /**
      * Returns sql where statement based on active user filters
      * @param string $extra sql
-     * @return string
+     * @param array named params (recommended prefix ex)
+     * @return array sql string and $params
      */
-    function get_sql_filter($extra='') {
+    function get_sql_filter($extra='', array $params=null) {
         global $SESSION;
 
         $sqls = array();
         if ($extra != '') {
             $sqls[] = $extra;
         }
+        $params = (array)$params;
 
         if (!empty($SESSION->user_filtering)) {
             foreach ($SESSION->user_filtering as $fname=>$datas) {
@@ -175,15 +181,18 @@ class user_filtering {
                 }
                 $field = $this->_fields[$fname];
                 foreach($datas as $i=>$data) {
-                    $sqls[] = $field->get_sql_filter($data);
+                    list($s, $p) = $field->get_sql_filter($data);
+                    $sqls[] = $s;
+                    $params = $params + $p;
                 }
             }
         }
 
         if (empty($sqls)) {
-            return '';
+            return array('', array());
         } else {
-            return implode(' AND ', $sqls);
+            $sqls = implode(' AND ', $sqls);
+            return array($sqls, $params);
         }
     }
 
@@ -240,7 +249,7 @@ class user_filter_type {
      * @return string the filtering condition or null if the filter is disabled
      */
     function get_sql_filter($data) {
-        error('Abstract method get_sql_filter() called - must be implemented');
+        print_error('mustbeoveride', 'debug', '', 'get_sql_filter');
     }
 
     /**
@@ -249,7 +258,7 @@ class user_filter_type {
      * @return mixed array filter data or false when filter not set
      */
     function check_data($formdata) {
-        error('Abstract method check_data() called - must be implemented');
+        print_error('mustbeoveride', 'debug', '', 'check_data');
     }
 
     /**
@@ -257,7 +266,7 @@ class user_filter_type {
      * @param object $mform a MoodleForm object to setup
      */
     function setupForm(&$mform) {
-        error('Abstract method setupForm() called - must be implemented');
+        print_error('mustbeoveride', 'debug', '', 'setupForm');
     }
 
     /**
@@ -266,6 +275,6 @@ class user_filter_type {
      * @return string active filter label
      */
     function get_label($data) {
-        error('Abstract method get_label() called - must be implemented');
+        print_error('mustbeoveride', 'debug', '', 'get_label');
     }
 }
