diff --git a/user/addnote.php b/user/addnote.php
index 79dcb2b..b6a0e10 100644
--- a/user/addnote.php
+++ b/user/addnote.php
@@ -1,4 +1,28 @@
-<?php  // $Id$
+<?php
+
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * This file allows you to add a note for a user
+ *
+ * @copyright 1999 Martin Dougiamas  http://dougiamas.com
+ * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ * @package user
+ */
+
 require_once("../config.php");
 require_once($CFG->dirroot .'/notes/lib.php');
 
@@ -6,8 +30,11 @@ $id    = required_param('id', PARAM_INT);              // course id
 $users = optional_param('userid', array(), PARAM_INT); // array of user id
 $contents = optional_param('contents', array(), PARAM_RAW); // array of user notes
 $states = optional_param('states', array(), PARAM_ALPHA); // array of notes states
-if (! $course = get_record('course', 'id', $id)) {
-    error("Course ID is incorrect");
+
+$PAGE->set_url('/user/addnote.php', array('id'=>$id));
+
+if (! $course = $DB->get_record('course', array('id'=>$id))) {
+    print_error('invalidcourseid');
 }
 
 $context = get_context_instance(CONTEXT_COURSE, $id);
@@ -22,14 +49,14 @@ if (empty($CFG->enablenotes)) {
 
 if (!empty($users) && confirm_sesskey()) {
     if (count($users) != count($contents) || count($users) != count($states)) {
-        error('Parameters malformation', $CFG->wwwroot.'/user/index.php?id='.$id);
+        print_error('invalidformdata', '', $CFG->wwwroot.'/user/index.php?id='.$id);
     }
 
-    $note = new object();
+    $note = new stdClass();
     $note->courseid = $id;
     $note->format = FORMAT_PLAIN;
     foreach ($users as $k => $v) {
-        if(!$user = get_record('user', 'id', $v) || empty($contents[$k])) {
+        if (!$user = $DB->get_record('user', array('id'=>$v)) || empty($contents[$k])) {
             continue;
         }
         $note->id = 0;
@@ -47,23 +74,24 @@ if (!empty($users) && confirm_sesskey()) {
 
 $straddnote = get_string('addnewnote', 'notes');
 
-$navlinks = array();
-$navlinks[] = array('name' => $straddnote, 'link' => null, 'type' => 'misc');
-$navigation = build_navigation($navlinks);
+$PAGE->navbar->add($straddnote);
+$PAGE->set_title("$course->shortname: ".get_string('extendenrol'));
+$PAGE->set_heading($course->fullname);
 
-print_header("$course->shortname: ".get_string('extendenrol'), $course->fullname, $navigation, "", "", true, "&nbsp;", navmenu($course));
+echo $OUTPUT->header();
 
 // this will contain all available the based On select options, but we'll disable some on them on a per user basis
 
-print_heading($straddnote);
+echo $OUTPUT->heading($straddnote);
 echo '<form method="post" action="addnote.php">';
 echo '<fieldset class="invisiblefieldset">';
 echo '<input type="hidden" name="id" value="'.$course->id.'" />';
-echo '<input type="hidden" name="sesskey" value="'.$USER->sesskey.'" />';
+echo '<input type="hidden" name="sesskey" value="'.sesskey().'" />';
 echo '</fieldset>';
-$table->head  = array (get_string('fullname'),
-    get_string('content', 'notes') . helpbutton('writing', get_string('helpwriting'), 'moodle', true, false, '', true),
-    get_string('publishstate', 'notes') . helpbutton('status', get_string('publishstate', 'notes'), 'notes', true, false, '', true),
+$table = new html_table();
+$table->head  = array (get_string('fullnameuser'),
+    get_string('content', 'notes'),
+    get_string('publishstate', 'notes') . $OUTPUT->help_icon('publishstate', 'notes'),
     );
 $table->align = array ('left', 'center', 'center');
 $state_names = note_get_state_names();
@@ -78,17 +106,17 @@ if (empty($users)) {
 }
 
 foreach ($users as $k => $v) {
-    if(!$user = get_record('user', 'id', $v)) {
+    if(!$user = $DB->get_record('user', array('id'=>$v))) {
         continue;
     }
-    $checkbox = choose_from_menu($state_names, 'states[' . $k . ']', empty($states[$k]) ? NOTES_STATE_PUBLIC : $states[$k], '', '', '0', true);
+    $checkbox = html_writer::select($state_names, 'states[' . $k . ']', empty($states[$k]) ? NOTES_STATE_PUBLIC : $states[$k], false);
     $table->data[] = array(
         '<input type="hidden" name="userid['.$k.']" value="'.$v.'" />'. fullname($user, true),
         '<textarea name="contents['. $k . ']" rows="2" cols="40">' . strip_tags(@$contents[$k]) . '</textarea>',
         $checkbox
     );
 }
-print_table($table);
+echo html_writer::table($table);
 echo '<div style="width:100%;text-align:center;"><input type="submit" value="' . get_string('savechanges'). '" /></div></form>';
-print_footer($course);
-?>
+echo $OUTPUT->footer();
+
