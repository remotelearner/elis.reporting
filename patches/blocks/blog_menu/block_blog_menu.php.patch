diff --git a/blocks/blog_menu/block_blog_menu.php b/blocks/blog_menu/block_blog_menu.php
old mode 100755
new mode 100644
index 04aed2e..9b237ec
--- a/blocks/blog_menu/block_blog_menu.php
+++ b/blocks/blog_menu/block_blog_menu.php
@@ -1,124 +1,115 @@
-<?php //$Id$
-
-require_once($CFG->dirroot .'/blog/lib.php');
-
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Blog Menu Block page.
+ *
+ * @package    block
+ * @subpackage blog_menu
+ * @copyright  2009 Nicolas Connault
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+defined('MOODLE_INTERNAL') || die();
+
+/**
+ * The blog menu block class
+ */
 class block_blog_menu extends block_base {
 
     function init() {
-        $this->title = get_string('blockmenutitle', 'blog');
-        $this->content_type = BLOCK_TYPE_TEXT;
-        $this->version = 2007101509;
+        $this->title = get_string('pluginname', 'block_blog_menu');
     }
 
-    function get_content() {
-        global $CFG, $USER, $COURSE;
-
-        if (empty($CFG->bloglevel)) {
-            $this->content->text = '';
-            return $this->content;
+    function instance_allow_multiple() {
+        return true;
         }
 
-        // don't display menu block if block is set at site level, and user is not logged in
-        if ($CFG->bloglevel < BLOG_GLOBAL_LEVEL && !(isloggedin() && !isguest())) {
-            $this->content->text = '';
-            return $this->content;
+    function has_config() {
+        return false;
         }
 
-        if (!isset($userBlog)) {
-            $userBlog ->userid = 0;
+    function applicable_formats() {
+        return array('all' => true, 'my' => false, 'tag' => false);
         }
 
-        if (!empty($USER->id)) {
-            $userBlog->userid = $USER->id;
-        }   //what is $userBlog anyway
-        if($this->content !== NULL) {
-            return $this->content;
+    function instance_allow_config() {
+        return true;
         }
 
-        $output = '';
+    function get_content() {
+        global $CFG;
 
-        $this->content = new stdClass;
-        $this->content->footer = '';
-        if (empty($this->instance) /*|| empty($CFG->blog_version)*/) {
-            // Either we're being asked for content without
-            // an associated instance of the Blog module has never been installed.
-            $this->content->text = $output;
+        // detect if blog enabled
+        if ($this->content !== NULL) {
             return $this->content;
         }
 
-        //if ( blog_isLoggedIn() && !isguest() ) {
-            $courseviewlink = '';
-            $addentrylink = '';
-            $coursearg = '';
-
-            $sitecontext = get_context_instance(CONTEXT_SYSTEM);
-
-            if ($COURSE->id != SITEID) {
-
-                $incoursecontext = true;
-                $curcontext = get_context_instance(CONTEXT_COURSE, $COURSE->id);
-            } else {
-                $incoursecontext = false;
-                $curcontext = $sitecontext;
+        if (empty($CFG->bloglevel)) {
+            $this->content = new stdClass();
+            $this->content->text = '';
+            if ($this->page->user_is_editing()) {
+                $this->content->text = get_string('blogdisable', 'blog');
             }
+            return $this->content;
 
-            $canviewblogs = has_capability('moodle/blog:view', $curcontext);
-
-            /// Accessibility: markup as a list.
+        } else if ($CFG->bloglevel < BLOG_GLOBAL_LEVEL and (!isloggedin() or isguestuser())) {
+            $this->content = new stdClass();
+            $this->content->text = '';
+            return $this->content;
+        }
 
-            if ( (isloggedin() && !isguest()) && $incoursecontext
-                    && $CFG->bloglevel >= BLOG_COURSE_LEVEL && $canviewblogs) {
+        // require necessary libs and get content
+        require_once($CFG->dirroot .'/blog/lib.php');
 
-                $coursearg = '&amp;courseid='.$COURSE->id;
-                // a course is specified
+        // Prep the content
+        $this->content = new stdClass();
 
-                $courseviewlink = '<li><a href="'. $CFG->wwwroot .'/blog/index.php?filtertype=course&amp;filterselect='. $COURSE->id .'">';
-                $courseviewlink .= get_string('viewcourseentries', 'blog') ."</a></li>\n";
+        $options = blog_get_all_options($this->page);
+        if (count($options) == 0) {
+            $this->content->text = '';
+            return $this->content;
             }
 
-            $blogmodon = false;
-
-            if ( (isloggedin() && !isguest())
-                        && (!$blogmodon || ($blogmodon && $coursearg != ''))
-                        && $CFG->bloglevel >= BLOG_USER_LEVEL ) {
-
-                // show Add entry link
-                if (has_capability('moodle/blog:create', $sitecontext)) {
-                    $addentrylink = '<li><a href="'. $CFG->wwwroot. '/blog/edit.php?action=add'
-                                   .$coursearg.'">'.get_string('addnewentry', 'blog') ."</a></li>\n";
+        // Iterate the option types
+        $menulist = array();
+        foreach ($options as $types) {
+            foreach ($types as $link) {
+                $menulist[] = html_writer::link($link['link'], $link['string']);
                 }
-                // show View my entries link
-                $addentrylink .= '<li><a href="'. $CFG->wwwroot .'/blog/index.php?userid='.
-                                 $userBlog->userid.'">'.get_string('viewmyentries', 'blog').
-                                 "</a></li>\n";
-
-                // show link to manage blog prefs
-                $addentrylink .= '<li><a href="'. $CFG->wwwroot. '/blog/preferences.php?userid='.
-                                 $userBlog->userid . $coursearg .'">'.
-                                 get_string('blogpreferences', 'blog')."</a></li>\n";
-
-                $output = $addentrylink;
-                $output .= $courseviewlink;
+            $menulist[] = '<hr />';
             }
-
-            // show View site entries link
-            if ($CFG->bloglevel >= BLOG_SITE_LEVEL && $canviewblogs) {
-                $output .= '<li><a href="'. $CFG->wwwroot .'/blog/index.php?filtertype=site&amp;">';
-                $output .= get_string('viewsiteentries', 'blog')."</a></li>\n";
+        // Remove the last element (will be an HR)
+        array_pop($menulist);
+        // Display the content as a list
+        $this->content->text = html_writer::alist($menulist, array('class'=>'list'));
+
+        // Prepare the footer for this block
+        if (has_capability('moodle/blog:search', get_context_instance(CONTEXT_SYSTEM))) {
+            // Full-text search field
+            $form  = html_writer::tag('label', get_string('search', 'admin'), array('for'=>'blogsearchquery', 'class'=>'accesshide'));
+            $form .= html_writer::empty_tag('input', array('id'=>'blogsearchquery', 'type'=>'text', 'name'=>'search'));
+            $form .= html_writer::empty_tag('input', array('type'=>'submit', 'value'=>get_string('search')));
+            $this->content->footer = html_writer::tag('form', html_writer::tag('div', $form), array('class'=>'blogsearchform', 'method'=>'get', 'action'=>new moodle_url('/blog/index.php')));
+        } else {
+            // No footer to display
+            $this->content->footer = '';
             }
 
-            // took out tag management interface/link, should use tag/manage.php
-
-            // show Help with blogging link
-            //$output .= '<li><a href="'. $CFG->wwwroot .'/help.php?module=blog&amp;file=user.html">';
-            //$output .= get_string('helpblogging', 'blog') ."</a></li>\n";
-        //} else {
-        //    $output = ''; //guest users and users who are not logged in do not get menus
-        //}
-
-        $this->content->text = '<ul class="list">'. $output ."</ul>\n";
+        // Return the content object
         return $this->content;
     }
 }
-
-?>
