diff --git a/blocks/blog_tags/block_blog_tags.php b/blocks/blog_tags/block_blog_tags.php
index bbc04f5..c3fa8d8 100644
--- a/blocks/blog_tags/block_blog_tags.php
+++ b/blocks/blog_tags/block_blog_tags.php
@@ -1,15 +1,37 @@
-<?PHP //$Id$
-
-define('BLOGDEFAULTTIMEWITHIN', 90);
-define('BLOGDEFAULTNUMBEROFTAGS', 20);
-define('BLOGDEFAULTSORT', 'name');
-
-require_once($CFG->dirroot .'/blog/lib.php');
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Blog tags block.
+ *
+ * @package    block
+ * @subpackage blog_tags
+ * @copyright  2006 Shane Elliott
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+defined('MOODLE_INTERNAL') || die();
+
+define('BLOCK_BLOG_TAGS_DEFAULTTIMEWITHIN', 90);
+define('BLOCK_BLOG_TAGS_DEFAULTNUMBEROFTAGS', 20);
+define('BLOCK_BLOG_TAGS_DEFAULTSORT', 'name');
 
 class block_blog_tags extends block_base {
     function init() {
-        $this->version = 2007101509;
-        $this->title = get_string('blocktagstitle', 'blog');
+        $this->title = get_string('pluginname', 'block_blog_tags');
     }
 
     function instance_allow_multiple() {
@@ -32,63 +54,88 @@ class block_blog_tags extends block_base {
 
         // load userdefined title and make sure it's never empty
         if (empty($this->config->title)) {
-            $this->title = get_string('blocktagstitle','blog');
+            $this->title = get_string('pluginname', 'block_blog_tags');
         } else {
             $this->title = $this->config->title;
         }
     }
 
     function get_content() {
+        global $CFG, $SITE, $USER, $DB, $OUTPUT;
 
-        global $CFG, $SITE, $COURSE, $USER;
+        if ($this->content !== NULL) {
+            return $this->content;
+        }
 
-        if (empty($CFG->usetags) || empty($CFG->bloglevel)) {
+        // make sure blog and tags are actually enabled
+        if (empty($CFG->bloglevel)) {
+            $this->content = new stdClass();
             $this->content->text = '';
+            if ($this->page->user_is_editing()) {
+                $this->content->text = get_string('blogdisable', 'blog');
+            }
             return $this->content;
+
+        } else if (empty($CFG->usetags)) {
+            $this->content = new stdClass();
+            $this->content->text = '';
+            if ($this->page->user_is_editing()) {
+                $this->content->text = get_string('tagsaredisabled', 'tag');
         }
+            return $this->content;
+
+        } else if ($CFG->bloglevel < BLOG_GLOBAL_LEVEL and (!isloggedin() or isguestuser())) {
+            $this->content = new stdClass();
+            $this->content->text = '';
+            return $this->content;
+        }
+
+        // require the libs and do the work
+        require_once($CFG->dirroot .'/blog/lib.php');
 
         if (empty($this->config->timewithin)) {
-            $this->config->timewithin = BLOGDEFAULTTIMEWITHIN;
+            $this->config->timewithin = BLOCK_BLOG_TAGS_DEFAULTTIMEWITHIN;
         }
         if (empty($this->config->numberoftags)) {
-            $this->config->numberoftags = BLOGDEFAULTNUMBEROFTAGS;
+            $this->config->numberoftags = BLOCK_BLOG_TAGS_DEFAULTNUMBEROFTAGS;
         }
         if (empty($this->config->sort)) {
-            $this->config->sort = BLOGDEFAULTSORT;
-        }
-
-        if ($this->content !== NULL) {
-            return $this->content;
-        }
-
-        if (empty($this->instance)) {
-            $this->content = '';
-            return $this->content;
+            $this->config->sort = BLOCK_BLOG_TAGS_DEFAULTSORT;
         }
 
-        $this->content = new stdClass;
+        $this->content = new stdClass();
         $this->content->text = '';
         $this->content->footer = '';
 
         /// Get a list of tags
-
         $timewithin = time() - $this->config->timewithin * 24 * 60 * 60; /// convert to seconds
 
-        $sql  = 'SELECT t.id, t.tagtype, t.rawname, t.name, COUNT(DISTINCT ti.id) AS ct ';
-        $sql .= "FROM {$CFG->prefix}tag t, {$CFG->prefix}tag_instance ti, {$CFG->prefix}post p ";
-        $sql .= 'WHERE t.id = ti.tagid ';
-        $sql .= 'AND p.id = ti.itemid ';
-        $sql .= 'AND ti.itemtype = \'post\' ';
+        $context = $this->page->context;
 
         // admins should be able to read all tags      
+        $type = '';
         if (!has_capability('moodle/user:readuserblogs', get_context_instance(CONTEXT_SYSTEM))) {
-            $sql .= 'AND (p.publishstate = \'site\' or p.publishstate=\'public\') ';
+            $type = " AND (p.publishstate = 'site' or p.publishstate='public')";
+        }
+
+        $sql  = "SELECT t.id, t.tagtype, t.rawname, t.name, COUNT(DISTINCT ti.id) AS ct
+                   FROM {tag} t, {tag_instance} ti, {post} p, {blog_association} ba
+                  WHERE t.id = ti.tagid AND p.id = ti.itemid
+                        $type
+                        AND ti.itemtype = 'post'
+                        AND ti.timemodified > $timewithin";
+
+        if ($context->contextlevel == CONTEXT_MODULE) {
+            $sql .= " AND ba.contextid = $context->id AND p.id = ba.blogid ";
+        } else if ($context->contextlevel == CONTEXT_COURSE) {
+            $sql .= " AND ba.contextid = $context->id AND p.id = ba.blogid ";
         }
-        $sql .= "AND ti.timemodified > {$timewithin} ";
-        $sql .= 'GROUP BY t.id, t.tagtype, t.name, t.rawname ';
-        $sql .= 'ORDER BY ct DESC, t.name ASC';
 
-        if ($tags = get_records_sql($sql, 0, $this->config->numberoftags)) {
+        $sql .= "
+               GROUP BY t.id, t.tagtype, t.name, t.rawname
+               ORDER BY ct DESC, t.name ASC";
+
+        if ($tags = $DB->get_records_sql($sql, null, 0, $this->config->numberoftags)) {
 
         /// There are 2 things to do:
         /// 1. tags with the same count should have the same size class
@@ -121,89 +168,41 @@ class block_blog_tags extends block_base {
 
         /// Now we sort the tag display order
             $CFG->tagsort = $this->config->sort;
-            usort($etags, "blog_tags_sort");
+            usort($etags, "block_blog_tags_sort");
 
         /// Finally we create the output
         /// Accessibility: markup as a list.
             $this->content->text .= "\n<ul class='inline-list'>\n";
             foreach ($etags as $tag) {
+                $blogurl = new moodle_url('/blog/index.php');
+
                 switch ($CFG->bloglevel) {
                     case BLOG_USER_LEVEL:
-                        $filtertype = 'user';
-                        $filterselect = $USER->id;
-                    break;
-
-                    case BLOG_GROUP_LEVEL:
-                        $filtertype = 'group';
-                        $filterselect = groups_get_course_group($COURSE);
-                    break;
-
-                    case BLOG_COURSE_LEVEL:
-                        $filtertype = 'course';
-                        if (isset($COURSE->id)) {
-                            $filterselect = $COURSE->id;
-                        } else {
-                            $filterselect = $this->instance->pageid;
-                        }
+                        $blogurl->param('userid', $USER->id);
                     break;
 
                     default:
-                        if (isset($COURSE->id) && $COURSE->id != SITEID) {
-                            $filtertype = 'course';
-                            $filterselect = $COURSE->id;
-                        } else {
-                            $filtertype = 'site';
-                            $filterselect = SITEID;
+                        if ($context->contextlevel == CONTEXT_MODULE) {
+                            $blogurl->param('modid', $context->instanceid);
+                        } else if ($context->contextlevel == CONTEXT_COURSE) {
+                            $blogurl->param('courseid', $context->instanceid);
                         }
+
                     break;
                 }
 
-                $link = $CFG->wwwroot.'/blog/index.php?filtertype='.$filtertype.'&amp;filterselect='.$filterselect.'&amp;tagid='.$tag->id;
-                $this->content->text .= '<li><a href="'.$link.'" '.
-                                        'class="'.$tag->class.'" '.
-                                        'title="'.get_string('numberofentries','blog',$tag->ct).'">'.
-                                        tag_display_name($tag) .'</a></li> ';
+                $blogurl->param('tagid', $tag->id);
+                $link = html_writer::link($blogurl, tag_display_name($tag), array('class'=>$tag->class, 'title'=>get_string('numberofentries','blog',$tag->ct)));
+                $this->content->text .= '<li>' . $link . '</li> ';
             }
             $this->content->text .= "\n</ul>\n";
 
         }
         return $this->content;
     }
-
-    function instance_config_print() {
-        global $CFG;
-
-    /// set up the numberoftags select field
-        $numberoftags = array();
-        for($i=1;$i<=50;$i++) $numberoftags[$i] = $i;
-
-    //// set up the timewithin select field
-        $timewithin = array();
-        $timewithin[10]  = get_string('numdays', '', 10);
-        $timewithin[30]  = get_string('numdays', '', 30);
-        $timewithin[60]  = get_string('numdays', '', 60);
-        $timewithin[90]  = get_string('numdays', '', 90);
-        $timewithin[120] = get_string('numdays', '', 120);
-        $timewithin[240] = get_string('numdays', '', 240);
-        $timewithin[365] = get_string('numdays', '', 365);
-
-    /// set up sort select field
-        $sort = array();
-        $sort['name'] = get_string('tagtext', 'blog');
-        $sort['id']   = get_string('tagdatelastused', 'blog');
-
-
-        if (is_file($CFG->dirroot .'/blocks/'. $this->name() .'/config_instance.html')) {
-            print_simple_box_start('center', '', '', 5, 'blockconfigglobal');
-            include($CFG->dirroot .'/blocks/'. $this->name() .'/config_instance.html');
-            print_simple_box_end();
-        } else {
-            notice(get_string('blockconfigbad'), str_replace('blockaction=', 'dummy=', qualified_me()));
-        }
-    }
 }
 
-function blog_tags_sort($a, $b) {
+function block_blog_tags_sort($a, $b) {
     global $CFG;
 
     if (empty($CFG->tagsort)) {
@@ -215,10 +214,10 @@ function blog_tags_sort($a, $b) {
     if (is_numeric($a->$tagsort)) {
         return ($a->$tagsort == $b->$tagsort) ? 0 : ($a->$tagsort > $b->$tagsort) ? 1 : -1;
     } elseif (is_string($a->$tagsort)) {
-        return strcmp($a->$tagsort, $b->$tagsort);
+        return strcmp($a->$tagsort, $b->$tagsort); //TODO: this is not compatible with UTF-8!!
     } else {
         return 0;
     }
 }
 
-?>
+
