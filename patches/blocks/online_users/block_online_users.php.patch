diff --git a/blocks/online_users/block_online_users.php b/blocks/online_users/block_online_users.php
index dfa1b92..cbf1dac 100644
--- a/blocks/online_users/block_online_users.php
+++ b/blocks/online_users/block_online_users.php
@@ -1,4 +1,4 @@
-<?php //$Id$
+<?php
 
 /**
  * This block needs to be reworked.
@@ -7,14 +7,13 @@
  */
 class block_online_users extends block_base {
     function init() {
-        $this->title = get_string('blockname','block_online_users');
-        $this->version = 2007101510;
+        $this->title = get_string('pluginname','block_online_users');
     }
 
     function has_config() {return true;}
 
     function get_content() {
-        global $USER, $CFG, $COURSE;
+        global $USER, $CFG, $DB, $OUTPUT;
 
         if ($this->content !== NULL) {
             return $this->content;
@@ -34,78 +33,81 @@ class block_online_users extends block_base {
         }
         $timefrom = 100 * floor((time()-$timetoshowusers) / 100); // Round to nearest 100 seconds for better query cache
 
-        // Get context so we can check capabilities.
-        $context = get_context_instance(CONTEXT_COURSE, $COURSE->id);
-
-        if (empty($this->instance->pinned)) {
-            $blockcontext = get_context_instance(CONTEXT_BLOCK, $this->instance->id);
-        } else {
-            $blockcontext = get_context_instance(CONTEXT_SYSTEM); // pinned blocks do not have own context
-        }
-
         //Calculate if we are in separate groups
-        $isseparategroups = ($COURSE->groupmode == SEPARATEGROUPS
-                             && $COURSE->groupmodeforce
-                             && !has_capability('moodle/site:accessallgroups', $context));
+        $isseparategroups = ($this->page->course->groupmode == SEPARATEGROUPS
+                             && $this->page->course->groupmodeforce
+                             && !has_capability('moodle/site:accessallgroups', $this->page->context));
 
         //Get the user current group
-        $currentgroup = $isseparategroups ? groups_get_course_group($COURSE) : NULL;
+        $currentgroup = $isseparategroups ? groups_get_course_group($this->page->course) : NULL;
 
         $groupmembers = "";
         $groupselect = "";
-        $rafrom  = "";
-        $rawhere = "";
+        $params = array();
 
         //Add this to the SQL to show only group users
         if ($currentgroup !== NULL) {
-            $groupmembers = ",  {$CFG->prefix}groups_members gm ";
-            $groupselect = " AND u.id = gm.userid AND gm.groupid = '$currentgroup'";
-        }
-
-        if ($COURSE->id == SITEID) {  // Site-level
-            $select = "SELECT u.id, u.username, u.firstname, u.lastname, u.picture, max(u.lastaccess) as lastaccess ";
-            $from = "FROM {$CFG->prefix}user u
-                          $groupmembers ";
-            $where = "WHERE u.lastaccess > $timefrom
-                      $groupselect ";
-            $order = "ORDER BY lastaccess DESC ";
-
-        } else { // Course-level
-            if (!has_capability('moodle/role:viewhiddenassigns', $context)) {
-                $pcontext = get_related_contexts_string($context);
-                $rafrom  = ", {$CFG->prefix}role_assignments ra";
-                $rawhere = " AND ra.userid = u.id AND ra.contextid $pcontext AND ra.hidden = 0";
-            }
-
-            $courseselect = "AND ul.courseid = '".$COURSE->id."'";
-            $select = "SELECT u.id, u.username, u.firstname, u.lastname, u.picture, max(ul.timeaccess) as lastaccess ";
-            $from = "FROM {$CFG->prefix}user_lastaccess ul,
-                          {$CFG->prefix}user u
-                          $groupmembers $rafrom ";
-            $where =  "WHERE ul.timeaccess > $timefrom
-                       AND u.id = ul.userid
-                       AND ul.courseid = $COURSE->id
-                       $groupselect $rawhere ";
-            $order = "ORDER BY lastaccess DESC ";
+            $groupmembers = ", {groups_members} gm";
+            $groupselect = "AND u.id = gm.userid AND gm.groupid = :currentgroup";
+            $params['currentgroup'] = $currentgroup;
         }
 
-        $groupby = "GROUP BY u.id, u.username, u.firstname, u.lastname, u.picture ";
+        $userfields = user_picture::fields('u', array('username'));
+
+        if ($this->page->course->id == SITEID or $this->page->context->contextlevel < CONTEXT_COURSE) {  // Site-level
+            $sql = "SELECT $userfields, MAX(u.lastaccess) AS lastaccess
+                      FROM {user} u $groupmembers
+                     WHERE u.lastaccess > $timefrom
+                           $groupselect
+                  GROUP BY $userfields
+                  ORDER BY lastaccess DESC ";
+
+           $csql = "SELECT COUNT(u.id)
+                      FROM {user} u $groupmembers
+                     WHERE u.lastaccess > $timefrom
+                           $groupselect";
+
+        } else {
+            // Course level - show only enrolled users for now
+            // TODO: add a new capability for viewing of all users (guests+enrolled+viewing)
+
+            list($esqljoin, $eparams) = get_enrolled_sql($this->page->context);
+            $params = array_merge($params, $eparams);
+
+            $sql = "SELECT $userfields, MAX(ul.timeaccess) AS lastaccess
+                      FROM {user_lastaccess} ul $groupmembers, {user} u
+                      JOIN ($esqljoin) euj ON euj.id = u.id
+                     WHERE ul.timeaccess > $timefrom
+                           AND u.id = ul.userid
+                           AND ul.courseid = :courseid
+                           $groupselect
+                  GROUP BY $userfields
+                  ORDER BY lastaccess DESC";
+
+           $csql = "SELECT COUNT(u.id)
+                      FROM {user_lastaccess} ul $groupmembers, {user} u
+                      JOIN ($esqljoin) euj ON euj.id = u.id
+                     WHERE ul.timeaccess > $timefrom
+                           AND u.id = ul.userid
+                           AND ul.courseid = :courseid
+                           $groupselect";
+
+            $params['courseid'] = $this->page->course->id;
+        }
 
         //Calculate minutes
         $minutes  = floor($timetoshowusers/60);
 
         // Verify if we can see the list of users, if not just print number of users
-        if (!has_capability('block/online_users:viewlist', $blockcontext)) {
-            if (!$usercount = count_records_sql("SELECT COUNT(DISTINCT(u.id)) $from $where")) {
+        if (!has_capability('block/online_users:viewlist', $this->page->context)) {
+            if (!$usercount = $DB->count_records_sql($csql, $params)) {
                 $usercount = get_string("none");
             }
             $this->content->text = "<div class=\"info\">".get_string("periodnminutes","block_online_users",$minutes).": $usercount</div>";
             return $this->content;
         }
 
-        $SQL = $select . $from . $where . $groupby . $order;
-
-        if ($users = get_records_sql($SQL, 0, 50)) {   // We'll just take the most recent 50 maximum
+        if ($users = $DB->get_records_sql($sql, $params, 0, 50)) {   // We'll just take the most recent 50 maximum
             foreach ($users as $user) {
                 $users[$user->id]->fullname = fullname($user);
             }
@@ -116,7 +118,7 @@ class block_online_users extends block_base {
         if (count($users) < 50) {
             $usercount = "";
         } else {
-            $usercount = count_records_sql("SELECT COUNT(DISTINCT(u.id)) $from $where");
+            $usercount = $DB->count_records_sql($csql, $params);
             $usercount = ": $usercount";
         }
 
@@ -128,8 +130,8 @@ class block_online_users extends block_base {
             //Accessibility: Don't want 'Alt' text for the user picture; DO want it for the envelope/message link (existing lang string).
             //Accessibility: Converted <div> to <ul>, inherit existing classes & styles.
             $this->content->text .= "<ul class='list'>\n";
-            if (!empty($USER->id) && has_capability('moodle/site:sendmessage', $context)
-                           && !empty($CFG->messaging) && !isguest()) {
+            if (isloggedin() && has_capability('moodle/site:sendmessage', $this->page->context)
+                           && !empty($CFG->messaging) && !isguestuser()) {
                 $canshowicon = true;
             } else {
                 $canshowicon = false;
@@ -137,18 +139,20 @@ class block_online_users extends block_base {
             foreach ($users as $user) {
                 $this->content->text .= '<li class="listentry">';
                 $timeago = format_time(time() - $user->lastaccess); //bruno to calculate correctly on frontpage
-                if ($user->username == 'guest') {
-                    $this->content->text .= '<div class="user">'.print_user_picture($user->id, $COURSE->id, $user->picture, 16, true, false, '', false);
+
+                if (isguestuser($user)) {
+                    $this->content->text .= '<div class="user">'.$OUTPUT->user_picture($user, array('size'=>16));
                     $this->content->text .= get_string('guestuser').'</div>';
 
                 } else {
-                    $this->content->text .= '<div class="user"><a href="'.$CFG->wwwroot.'/user/view.php?id='.$user->id.'&amp;course='.$COURSE->id.'" title="'.$timeago.'">';
-                    $this->content->text .= print_user_picture($user->id, $COURSE->id, $user->picture, 16, true, false, '', false);
-                    $this->content->text .= $user->fullname.'</a></div>';
+                    $this->content->text .= '<div class="user">'.$OUTPUT->user_picture($user, array('size'=>16));
+                    $this->content->text .= '<a href="'.$CFG->wwwroot.'/user/view.php?id='.$user->id.'&amp;course='.$this->page->course->id.'" title="'.$timeago.'">'.$user->fullname.'</a></div>';
                 }
-                if ($canshowicon and ($USER->id != $user->id) and  $user->username != 'guest') {  // Only when logged in and messaging active etc
-                    $this->content->text .= '<div class="message"><a title="'.get_string('messageselectadd').'" href="'.$CFG->wwwroot.'/message/discussion.php?id='.$user->id.'" onclick="this.target=\'message_'.$user->id.'\';return openpopup(\'/message/discussion.php?id='.$user->id.'\', \'message_'.$user->id.'\', \'menubar=0,location=0,scrollbars,status,resizable,width=400,height=500\', 0);">'
-                        .'<img class="iconsmall" src="'.$CFG->pixpath.'/t/message.gif" alt="'. get_string('messageselectadd') .'" /></a></div>';
+                if ($canshowicon and ($USER->id != $user->id) and !isguestuser($user)) {  // Only when logged in and messaging active etc
+                    $anchortagcontents = '<img class="iconsmall" src="'.$OUTPUT->pix_url('t/message') . '" alt="'. get_string('messageselectadd') .'" />';
+                    $anchortag = '<a href="'.$CFG->wwwroot.'/message/index.php?id='.$user->id.'" title="'.get_string('messageselectadd').'">'.$anchortagcontents .'</a>';
+
+                    $this->content->text .= '<div class="message">'.$anchortag.'</div>';
                 }
                 $this->content->text .= "</li>\n";
             }
@@ -161,4 +165,4 @@ class block_online_users extends block_base {
     }
 }
 
-?>
+
