diff --git a/blocks/search/db/upgrade.php b/blocks/search/db/upgrade.php
index 7e37702..952a129 100644
--- a/blocks/search/db/upgrade.php
+++ b/blocks/search/db/upgrade.php
@@ -1,167 +1,94 @@
-<?php  //$Id$
+<?php
 
-// This file keeps track of upgrades to 
-// the search block
+// This file is part of Moodle - http://moodle.org/
 //
-// Sometimes, changes between versions involve
-// alterations to database structures and other
-// major things that may break installations.
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
 //
-// The upgrade function in this file will attempt
-// to perform all the necessary actions to upgrade
-// your older installtion to the current version.
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
 //
-// If there's something it cannot do itself, it
-// will tell you what you need to do.
-//
-// The commands in here will all be database-neutral,
-// using the functions defined in lib/ddllib.php
-
-function xmldb_block_search_upgrade($oldversion=0) {
-
-    global $CFG, $THEME, $db;
-
-    $result = true;
-
-/// And upgrade begins here. For each one, you'll need one 
-/// block of code similar to the next one. Please, delete 
-/// this comment lines once this file start handling proper
-/// upgrade code.
-
-/// if ($result && $oldversion < YYYYMMDD00) { //New version in version.php
-///     $result = result of "/lib/ddllib.php" function calls
-/// }
-    if ($result && $oldversion < 2007071302) {
-
-    /// Define table search_documents to be created
-        $table = new XMLDBTable('search_documents');
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * Keeps track of upgrades to the global search block
+ *
+ * @package    blocks
+ * @subpackage search
+ * @copyright  2010 Aparup Banerjee <aparup@moodle.com>
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
 
-    /// Drop it if it existed before
+defined('MOODLE_INTERNAL') || die();
 
-        drop_table($table, true, false);
+function xmldb_block_search_upgrade($oldversion) {
+    global $CFG, $DB;
 
-    /// Adding fields to table search_documents
-        $table->addFieldInfo('id', XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, XMLDB_SEQUENCE, null, null, null);
-        $table->addFieldInfo('docid', XMLDB_TYPE_CHAR, '32', null, XMLDB_NOTNULL, null, null, null, null);
-        $table->addFieldInfo('doctype', XMLDB_TYPE_CHAR, '32', null, XMLDB_NOTNULL, null, null, null, 'none');
-        $table->addFieldInfo('itemtype', XMLDB_TYPE_CHAR, '32', null, XMLDB_NOTNULL, null, null, null, 'standard');
-        $table->addFieldInfo('title', XMLDB_TYPE_CHAR, '255', null, XMLDB_NOTNULL, null, null, null);
-        $table->addFieldInfo('url', XMLDB_TYPE_CHAR, '255', null, XMLDB_NOTNULL, null, null, null);
-        $table->addFieldInfo('docdate', XMLDB_TYPE_DATETIME, null, null, XMLDB_NOTNULL, null, null, null);
-        $table->addFieldInfo('updated', XMLDB_TYPE_DATETIME, null, null, XMLDB_NOTNULL, null, null, null);
-        $table->addFieldInfo('courseid', XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, null, null, '0');
-        $table->addFieldInfo('groupid', XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, null, null, '0');
+    require('upgradelib.php');
+    $result = TRUE;
+    $dbman = $DB->get_manager();
 
-    /// Adding keys to table search_documents
-        $table->addKeyInfo('primary', XMLDB_KEY_PRIMARY, array('id'));
+    if ($oldversion < 2010101800) {
+        // See MDL-24374
+        // Changing type of field docdate on table block_search_documents to int
+        // Changing type of field updated on table block_search_documents to int
+        $table = new xmldb_table('block_search_documents');
 
-    /// Adding indexes to table search_documents
-        $table->addIndexInfo('mdl_search_docid', XMLDB_INDEX_NOTUNIQUE, array('docid'));
-        $table->addIndexInfo('mdl_search_doctype', XMLDB_INDEX_NOTUNIQUE, array('doctype'));
-        $table->addIndexInfo('mdl_search_itemtype', XMLDB_INDEX_NOTUNIQUE, array('itemtype'));
+        $field_docdate_new = new xmldb_field('docdate_new', XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, '0', 'docdate');
+        $field_updated_new = new xmldb_field('updated_new', XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, '0', 'updated');
+        $field_docdate_old = new xmldb_field('docdate');
+        $field_updated_old = new xmldb_field('updated');
 
-    /// Launch create table for search_documents
-        $result = $result && create_table($table);
+        // Conditionally launch add temporary fields
+        if (!$dbman->field_exists($table, $field_docdate_new)) {
+            $dbman->add_field($table, $field_docdate_new);
     }
-
-/// Rename table search_documents to block_search_documents and 
-/// fix some defaults (MDL-10572)
-    if ($result && $oldversion < 2007081100) {
-
-    /// Define table search_documents to be renamed to block_search_documents
-        $table = new XMLDBTable('search_documents');
-
-    /// Launch rename table for block_search_documents
-        $result = $result && rename_table($table, 'block_search_documents');
-
-    /// Changing the default of field doctype on table block_search_documents to none
-        $table = new XMLDBTable('block_search_documents');
-        $field = new XMLDBField('doctype');
-        $field->setAttributes(XMLDB_TYPE_CHAR, '32', null, XMLDB_NOTNULL, null, null, null, 'none', 'docid');
-
-    /// Launch change of default for field doctype
-        $result = $result && change_field_default($table, $field);
-
-   /// Changing the default of field itemtype on table block_search_documents to standard
-        $table = new XMLDBTable('block_search_documents');
-        $field = new XMLDBField('itemtype');
-        $field->setAttributes(XMLDB_TYPE_CHAR, '32', null, XMLDB_NOTNULL, null, null, null, 'standard', 'doctype');
-
-    /// Launch change of default for field itemtype
-        $result = $result && change_field_default($table, $field);
-
-    /// Changing the default of field title on table block_search_documents to drop it
-        $table = new XMLDBTable('block_search_documents');
-        $field = new XMLDBField('title');
-        $field->setAttributes(XMLDB_TYPE_CHAR, '255', null, XMLDB_NOTNULL, null, null, null, null, 'itemtype');
-
-    /// Launch change of default for field title
-        $result = $result && change_field_default($table, $field);
-
-    /// Changing the default of field url on table block_search_documents to drop it
-        $table = new XMLDBTable('block_search_documents');
-        $field = new XMLDBField('url');
-        $field->setAttributes(XMLDB_TYPE_CHAR, '255', null, XMLDB_NOTNULL, null, null, null, null, 'title');
-
-    /// Launch change of default for field url
-        $result = $result && change_field_default($table, $field);
+        if (!$dbman->field_exists($table, $field_updated_new)) {
+            $dbman->add_field($table, $field_updated_new);
     }
 
-    if ($result && $oldversion < 2007112700) {
-    
-    /*
-    /// Truncate the block_search_documents table
-        execute_sql("TRUNCATE TABLE {$CFG->prefix}block_search_documents", true);
-    
-    /// Changing type of field docdate on table block_search_documents to int
-        $table = new XMLDBTable('block_search_documents');
-        $field = new XMLDBField('docdate');
-        $field->setAttributes(XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, null, null, '0', 'url');
-
-    /// Launch change of type for field docdate
-        $result = $result && change_field_type($table, $field);
-        
-    /// Changing type of field updated on table block_search_documents to int
-        $table = new XMLDBTable('block_search_documents');
-        $field = new XMLDBField('updated');
-        $field->setAttributes(XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, null, null, '0', 'docdate');
-
-    /// Launch change of type for field updated
-        $result = $result && change_field_type($table, $field);
-    */    
-        
-        
-    /// MDL-12352, postgres can not cope with change_field_type(), so dropping the fields and adding again
-    
-    /// Define field docdate to be dropped from block_search_documents
-        $table = new XMLDBTable('block_search_documents');
-        $field = new XMLDBField('docdate');
-
-    /// Launch drop field docdate
-        $result = $result && drop_field($table, $field);
-        
-    /// Define field updated to be dropped from block_search_documents
-        $field = new XMLDBField('updated');
-
-    /// Launch drop field updated
-        $result = $result && drop_field($table, $field);
-
-    /// Define field docdate to be added to block_search_documents
-        $field = new XMLDBField('docdate');
-        $field->setAttributes(XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, null, null, '0', 'url');
+        $sql = "SELECT id, docdate, updated FROM {block_search_documents}";
+        $search_documents = $DB->get_records_sql($sql);
+        if ($search_documents) {
+            foreach ($search_documents as $sd) {
+                $sd->docdate_new = convert_datetime_upgrade($sd->docdate);
+                $sd->updated_new = convert_datetime_upgrade($sd->updated);
+                $DB->update_record('block_search_documents', $sd);
+            }
+        }
+        // Conditionally launch drop the old fields
+        if ($dbman->field_exists($table, $field_docdate_old)) {
+            $dbman->drop_field($table, $field_docdate_old);
+        }
+        if ($dbman->field_exists($table, $field_updated_old)) {
+            $dbman->drop_field($table, $field_updated_old);
+        }
 
-    /// Launch add field docdate
-        $result = $result && add_field($table, $field);      
+        //rename the new fields to the original field names.
+        $dbman->rename_field($table, $field_docdate_new, 'docdate');
+        $dbman->rename_field($table, $field_updated_new, 'updated');
         
-    /// Define field updated to be added to block_search_documents
-        $field = new XMLDBField('updated');
-        $field->setAttributes(XMLDB_TYPE_INTEGER, '10', XMLDB_UNSIGNED, XMLDB_NOTNULL, null, null, null, '0', 'docdate');
+        // search savepoint reached
+        upgrade_block_savepoint(true, 2010101800, 'search');
+    }
 
-    /// Launch add field updated
-        $result = $result && add_field($table, $field);  
+    if ($oldversion < 2010110900) {
+        unset_config('block_search_text');
+        unset_config('block_search_button');
+        upgrade_block_savepoint(true, 2010110900, 'search');
     }
     
+    if ($oldversion < 2010111100) {
+        // set block to hidden if global search is disabled.
+        if ($CFG->enableglobalsearch != 1) {
+            $DB->set_field('block', 'visible', 0, array('name'=>'search'));     // Hide block
+        }
+        upgrade_block_savepoint(true, 2010111100, 'search');
+    }
     return $result;
 }
-
-?>
\ No newline at end of file
